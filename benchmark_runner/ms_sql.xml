<?xml version="1.0" encoding="utf-8"?>
<sql_benchmark>
  <name>SQL Benchmark 1</name>
  <author></author>
  <description></description>
  <init_script>
    <statements>
      <statement>
        <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL DROP TABLE dbo.TestTable
</command_text>
      </statement>
      <statement>
        <command_text>WITH x AS 
(
  SELECT n FROM (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) v(n)
), t1 AS
(
  SELECT ones.n + 10 * tens.n + 100 * hundreds.n + 1000 * thousands.n + 10000 * tenthousands.n + 100000 * hundredthousands.n as id  
  FROM x ones,     x tens,      x hundreds,       x thousands,       x tenthousands,       x hundredthousands
), t2 AS
(
    SELECT  id,
            id % 100 groupby
    FROM t1
), t3 AS
(
    SELECT  b.id, b.groupby, row_number() over (partition by groupby order by id) orderby
    FROM t2 b
)
SELECT  id, 
        groupby, 
        cast(orderby as int) orderby,
        cast(orderby % (groupby * 100 + 1) as int) local_search, 
        id % 10000 global_search, 
        LEFT('Value ' + CAST(CHECKSUM(NEWID()) AS VARCHAR) + ' ' + REPLICATE('*', 1000), 1000) as padding
    INTO TestTable
FROM t3
</command_text>
      </statement>
      <statement>
        <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000000, null, null, null, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000001, 100, null, null, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000002, 99, 10000, null, null, '*');
</command_text>
      </statement>
      <statement>
        <command_text>alter table TestTable alter column id int not null;
</command_text>
      </statement>
    </statements>
  </init_script>
  <clean_up_script>
    <statements>
      <statement>
        <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL DROP TABLE dbo.TestTable</command_text>
      </statement>
    </statements>
  </clean_up_script>
  <test_groups>
    <test_group>
      <id>1</id>
      <name>01</name>
      <description></description>
      <tests>
        <test>
          <id>2</id>
          <name>Sargability 1</name>
          <description>Test of predicate sargability.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>3</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>4</id>
              <name>Constant rewrite</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>5</id>
          <name>Sargability 2</name>
          <description>Test of attribute sargability II.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>6</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>7</id>
              <name>Constant rewrite</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>8</id>
          <name>Predicate ordering</name>
          <description>Test of predicate ordering of conjuctive query (predicates with different selectivity)</description>
          <active>True</active>
          <variants>
            <variant>
              <id>9</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>10</id>
              <name>Swap of predicates</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>11</id>
          <name>Disjunction using IN</name>
          <description>Test of different disjunction syntax.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>12</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>13</id>
              <name>IN</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>14</id>
          <name>Predicate elimination 1</name>
          <description>Test of a predicate elimination. The first SQL query contains a predicate that has to be always evaluated to true and it can be eliminated.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>15</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>16</id>
              <name>Predicate elimination</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>17</id>
          <name>Predicate elimination 2</name>
          <description>Test of a predicate elimination.
 The first SQL query contains predicates that has to be always evaluated to true and 
it can be safely eliminated.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>18</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>19</id>
              <name>Predicate elimination</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>20</id>
          <name>De Morgan law</name>
          <description>Test of disjunction.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>21</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>22</id>
              <name>De Morgan law</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>23</id>
          <name>Disjunction using UNION</name>
          <description>Test of disjunction. Rewrite of a disjunction into a query using the UNION construct.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>24</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>25</id>
              <name>UNION</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>26</id>
          <name>Conjunction using INTERSECT</name>
          <description>Test of conjunction. The `INTERSECT` construct versus the `AND` solution.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>27</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>28</id>
              <name>Intersection</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>29</id>
          <name>Heap</name>
          <description></description>
          <init_script>
            <statements />
          </init_script>
          <clean_up_script>
            <statements />
          </clean_up_script>
        </configuration>
        <configuration>
          <id>30</id>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_global_search
ON [dbo].[TestTable] (global_search)
</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>-- drop the indexes
drop index TestTable.ix_TestTable_local_search
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_global_search

</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>31</id>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_globalsearch
ON [dbo].[TestTable] (local_search, global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_globalsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>32</id>
          <name>Non-clustered 3</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_localsearch
ON [dbo].[TestTable] (global_search, local_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch_localsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>33</id>
          <name>Clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_localsearch
ON [dbo].[TestTable] (local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON [dbo].[TestTable] (global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>34</id>
          <name>Clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON [dbo].[TestTable] (local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_globalsearch
ON [dbo].[TestTable] (global_search)
</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch

</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>35</id>
          <name>Clustered 3</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_localsearch_globalsearch
ON [dbo].[TestTable] (local_search, global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_globalsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>36</id>
          <name>Clustered 4</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_globalsearch_localsearch
ON [dbo].[TestTable] (global_search, local_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch_localsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>37</id>
      <name>02</name>
      <description></description>
      <tests>
        <test>
          <id>38</id>
          <name>HAVING vs subquery</name>
          <description>Rewrite of the HAVING into a subquery.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>39</id>
              <name>HAVING variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>40</id>
              <name>Subquery variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>41</id>
          <name>Property groups</name>
          <description>Rewrite of the HAVING into a EXISTS or INTERSECT. 
This is quite common non-trivial task where we search for groups having certain set of properties.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>42</id>
              <name>HAVING variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>43</id>
              <name>EXISTS subquery variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>44</id>
              <name>INTERSECT variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>45</id>
          <name>Exceptional groups</name>
          <description>This is quite common non-trivial task where we search for groups where all rows in group satisfy certain condition.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>46</id>
              <name>HAVING variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>47</id>
              <name>NOT EXISTS subquery variant</name>
              <description></description>
              <statement>
                <command_text>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>48</id>
              <name>DIFFERENCE variant</name>
              <description></description>
              <statement>
                <command_text>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>49</id>
          <name>Aggregate function elimination</name>
          <description>Rewrite of the HAVING condition which eliminate one aggregate function.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>50</id>
              <name>HAVING with two aggregates</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>51</id>
              <name>HAVING with one aggregate</name>
              <description></description>
              <statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>52</id>
          <name>Window function vs subquery</name>
          <description>Rewrite of a window function using a correlated subquery with aggregate.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>53</id>
              <name>Window function variant</name>
              <description></description>
              <statement>
                <command_text>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>54</id>
              <name>Subquery variant</name>
              <description></description>
              <statement>
                <command_text>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>55</id>
          <name>Conditional aggregation high-sel</name>
          <description>Conditional aggreagtion vesus solution using subquery with distinct. This test uses a high selectivity condition in the predicate (one row per group).</description>
          <active>True</active>
          <variants>
            <variant>
              <id>56</id>
              <name>Conditional aggregation</name>
              <description></description>
              <statement>
                <command_text>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>57</id>
              <name>Subquery + distinct</name>
              <description></description>
              <statement>
                <command_text>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>58</id>
          <name>Aggregation pushdown with subquery</name>
          <description>This test compares two queries where one have the aggregation nested in a subquery. It is equivalent since there are no joins and `g1.groupby` is the only attribute from the outer query that is used in the subqueries.
</description>
          <active>True</active>
          <variants>
            <variant>
              <id>59</id>
              <name>Subquery + distinct</name>
              <description></description>
              <statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>60</id>
              <name>Subuqyer + distinct in subquery</name>
              <description></description>
              <statement>
                <command_text>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>61</id>
          <name>Conditional aggregation med-sel</name>
          <description>The test compare a conditional aggregation query with a query using subquery with distinct. 
-- This test uses a medium selectivity condition in the predicate (50% of rows per group).</description>
          <active>True</active>
          <variants>
            <variant>
              <id>62</id>
              <name>Conditional aggregation</name>
              <description></description>
              <statement>
                <command_text>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>63</id>
              <name>Subquery + distinct</name>
              <description></description>
              <statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>64</id>
          <name>Conditional aggregation low-sel</name>
          <description>Conditional aggreagtion versus solution using subquery with distinct. 
This test uses a medium selectivity condition in the predicate (100% of rows per group).</description>
          <active>True</active>
          <variants>
            <variant>
              <id>65</id>
              <name>Conditional aggregation</name>
              <description></description>
              <statement>
                <command_text>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>66</id>
              <name>Subquery + distinct</name>
              <description></description>
              <statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>67</id>
          <name>Greatest in group 1</name>
          <description>Find rows with max `local_search` value per `groupby`. Find ALL occurences of max per `groupby`.
 We assume that there can be more than one maximum `local_search` value per one `groupby` value. This test shows the most common solutions for this problem. 
The `55_greatest_in_group_II` test shows also some other solutions.
 The window function solution usually leads to a sequential scan and to a very simple query plan.
 On the other hand the group by can utilize the indexes that are available.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>68</id>
              <name>GROUP BY</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>69</id>
              <name>Window function</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>70</id>
          <name>Greatest in group 2</name>
          <description>Find max `local_search` per `groupby`. Find all occurences.
 This test compare eight very different solutions to this problem.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>71</id>
              <name>Window function 1</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>72</id>
              <name>Window function 2</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>73</id>
              <name>CROSS JOIN and TOP 1 with ties</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>74</id>
              <name>GROUP BY</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>75</id>
              <name>Subquery with aggregation</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>76</id>
              <name>NOT EXISTS</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>77</id>
              <name>LEFT JOIN + NULL</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>78</id>
              <name>TOP 1 with ties</name>
              <description></description>
              <statement>
                <command_text>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>79</id>
          <name>Greatest N per group</name>
          <description>Two solutions for the problem:
 "Find N max occurences per group."
 More specificaly for each `groupby` value we search  for 5 rows with highest `local_search`.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>80</id>
              <name>Window fun</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>81</id>
              <name>CROSS APPLY</name>
              <description></description>
              <statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>82</id>
          <name>GROUP BY elimination</name>
          <description>We test the capability to omit an unnecessary `GROUP BY` clause.
 The grouping is performed on one group, therefore, there is no need to do include the GROUP BY.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>83</id>
              <name>GROUP BY</name>
              <description></description>
              <statement>
                <command_text>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>84</id>
              <name>GROUP BY eliminated</name>
              <description></description>
              <statement>
                <command_text>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>85</id>
          <name>GROUP BY elimination in subquery</name>
          <description></description>
          <active>True</active>
          <variants>
            <variant>
              <id>86</id>
              <name>GROUP BY</name>
              <description></description>
              <statement>
                <command_text>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>87</id>
              <name>GROUP BY eliminated</name>
              <description></description>
              <statement>
                <command_text>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>88</id>
          <name>Correlated subquery elimination</name>
          <description>We test the capability to omit unnecessary correlation in a subquery.
 The correlation is unnecessary since the outer query has a specific predicate on the correlation attribute.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>89</id>
              <name>Correlated subquery</name>
              <description></description>
              <statement>
                <command_text>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>90</id>
              <name>Independent subquery</name>
              <description></description>
              <statement>
                <command_text>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>91</id>
          <name>Compute column liftup</name>
          <description>Is it better to do the TOP X in a subquery and then the column computation or it does not matter?
 Here we test whether the query compiler is capable to lift the column computation up if possible.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>92</id>
              <name>Basic computation</name>
              <description></description>
              <statement>
                <command_text>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>93</id>
              <name>Using subquery</name>
              <description></description>
              <statement>
                <command_text>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>94</id>
          <name>Removing conditional aggregation</name>
          <description>This test remove the conditional aggregation since the CASE condition has to be always satisfied.
 That is caused by the fact that the condition is already in WHERE predicate.
 Please note that removing the COUNT CASE is tricky and we should be aware of NULLs.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>95</id>
              <name>Conditional aggregation</name>
              <description></description>
              <statement>
                <command_text>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>96</id>
              <name>Without CASE</name>
              <description></description>
              <statement>
                <command_text>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>97</id>
          <name>Heap</name>
          <description></description>
          <init_script>
            <statements />
          </init_script>
          <clean_up_script>
            <statements />
          </clean_up_script>
        </configuration>
        <configuration>
          <id>98</id>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby_localsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>99</id>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search,groupby)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>100</id>
          <name>Clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>101</id>
          <name>Clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE CLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>102</id>
      <name>03</name>
      <description></description>
      <tests>
        <test>
          <id>103</id>
          <name>Selection pushdown</name>
          <description>Testing the selection pushdown.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>104</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>105</id>
              <name>Selection pushdown</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>106</id>
          <name>CROSS JOIN</name>
          <description>Rewriting join to a cross join</description>
          <active>True</active>
          <variants>
            <variant>
              <id>107</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>108</id>
              <name>CROSS JOIN</name>
              <description></description>
              <statement>
                <command_text>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>109</id>
          <name>CROSS JOIN lateral</name>
          <description>Rewriting join to a cross join lateral.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>110</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>111</id>
              <name>CROSS JOIN lateral</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>112</id>
          <name>Subquery</name>
          <description>This script test the ability to move predicate down in the query tree.
 The second query nest the table join into a subquery which can be easily rewritten into a basic variant.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>113</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>114</id>
              <name>Nesting JOIN in subquery</name>
              <description></description>
              <statement>
                <command_text>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>115</id>
          <name>Redundant predicate 1</name>
          <description>This test introduce redundant exists predicate in the second query.
 The EXISTS construct in the second query is covered by the other parts of the query, therefore, it is redundant.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>116</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>117</id>
              <name>Redundant predicate elimination 1</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>118</id>
          <name>Redundant predicate 2</name>
          <description>This test introduces a redundant predicate that is covered by the other parts of the query.
 More precisely, the `a.global_search = 1` predicate on the same data can be found twice in the second query (once in the subquery and once in the outer query).
</description>
          <active>True</active>
          <variants>
            <variant>
              <id>119</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</command_text>
              </statement>
            </variant>
            <variant>
              <id>120</id>
              <name>Redundant predicate elimination</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>121</id>
          <name>Redundant OUTER JOIN 1</name>
          <description>This test introduces redundant outer join. The outer join is eliminated by the `a.global_search = 1` predicate anyway.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>122</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>123</id>
              <name>Unnecessary LEFT JOIN</name>
              <description></description>
              <statement>
                <command_text></command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>124</id>
          <name>Redundant OUTER JOIN 2</name>
          <description>This test introduces redundant outer join. 
The outer join is eliminated by the `a.id is not null` predicate.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>125</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>126</id>
              <name>Unnecessary LEFT JOIN</name>
              <description></description>
              <statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>127</id>
          <name>Aggregate pushdown</name>
          <description>Pushdown the groupby attribute aggregation and using an extra semijoin. 
The semijoin is realized using EXISTS, however, we may use any semijoin syntax that is available in DBMS. 
Semijoin avoids multiplication of the `TestTable.groupby` values. 
The effectivness of this rewritting may be heavily dependent on a number of groupby repetitions and selectivity of the semijoin.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>128</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>129</id>
              <name>Aggregation pushdown</name>
              <description></description>
              <statement>
                <command_text>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>130</id>
          <name>CROSS JOIN lateral</name>
          <description>The second query uses a cross join lateral + aggregation function to implement the semijoin.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>131</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>132</id>
              <name>CROSS APPLY</name>
              <description></description>
              <statement>
                <command_text>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>133</id>
          <name>Redundant subquery</name>
          <description></description>
          <active>True</active>
          <variants>
            <variant>
              <id>134</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</command_text>
              </statement>
            </variant>
            <variant>
              <id>135</id>
              <name>Predicate rewirte</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>136</id>
          <name>Independent summaries</name>
          <description>Test compares two basic approaches that can be used to compute summaries.
 The first query compute summarie using subqueries behind SELECT.
 The second query compute summaries using GROUP BY with JOIN.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>137</id>
              <name>Subquery behind SELECT</name>
              <description></description>
              <statement>
                <command_text>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>138</id>
              <name>GROUP BY with JOIN</name>
              <description></description>
              <statement>
                <command_text>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>139</id>
          <name>UNION with JOIN 1</name>
          <description></description>
          <active>True</active>
          <variants>
            <variant>
              <id>140</id>
              <name>UNION in subquery</name>
              <description></description>
              <statement>
                <command_text>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>141</id>
              <name>UNION in outer query</name>
              <description></description>
              <statement>
                <command_text>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>142</id>
          <name>UNION with JOIN 2</name>
          <description></description>
          <active>True</active>
          <variants>
            <variant>
              <id>143</id>
              <name>UNION in subquery</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>144</id>
              <name>UNION in outer query</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>145</id>
          <name>Heap</name>
          <description></description>
          <init_script>
            <statements />
          </init_script>
          <clean_up_script>
            <statements />
          </clean_up_script>
        </configuration>
        <configuration>
          <id>146</id>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)
</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>147</id>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>148</id>
          <name>Non-clustered 3</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>149</id>
          <name>Non-clustered 4</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>150</id>
          <name>Non-clustered 5</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id
ON TestTable (id)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_id
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>151</id>
      <name>04 PK</name>
      <description></description>
      <tests>
        <test>
          <id>152</id>
          <name>Aggregation removal 1</name>
          <description>Test of possible aggreagation removal. 
The aggregation can be rewritten to distinct without aggregation function if the `TestTable.local_search` attribute is functionaly dependent on `TestTable.id`.
 The `TestTable.id` attribute is the primary key in this test, therefore, the functional dependency is satisfied.
</description>
          <active>True</active>
          <variants>
            <variant>
              <id>153</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>154</id>
              <name>Aggregation removal</name>
              <description></description>
              <statement>
                <command_text>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>155</id>
          <name>Aggregation removal 2</name>
          <description>Test of possible aggregation removal. 
The aggregation can be rewritten to distinct without aggregation function if the `local_search` attribute is functionaly dependent on id.
 In our test `TestTable.id` is primary key.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>156</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>157</id>
              <name>Aggregation removal</name>
              <description></description>
              <statement>
                <command_text>select min(local_search)
from
(
    select local_search
    from TestTable
) t
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>158</id>
              <name>Nested query removal</name>
              <description></description>
              <statement>
                <command_text>select min(local_search)
from TestTable
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>159</id>
          <name>Predicate elimination 1</name>
          <description>Test of `IS NOT NULL` predicate elimination. 
The `IS NOT NULL` predicate can be eliminated since the `id` is a primary key, therefore, it can not be null.
</description>
          <active>True</active>
          <variants>
            <variant>
              <id>160</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>161</id>
              <name>Predicate elimination</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>162</id>
          <name>Predicate elimination 2</name>
          <description>Test of a IS NOT NULL predicate elimination. 
The `TestTable.id` attribute can not be null since it is the primary key.
-- Therefore, the `IS NOT NULL` predicate can be eliminated.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>163</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>164</id>
              <name>Predicate elimination</name>
              <description></description>
              <statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
        <test>
          <id>165</id>
          <name>Aggregation removal</name>
          <description>Test of an aggregation removal. The aggregation can be rewritten using `distinct` without aggregation function 
if the `TestTable.local_search` attribute is functionaly dependent on the `TestTable.id` attribute which is satisfied in this test.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>166</id>
              <name>Basic</name>
              <description></description>
              <statement>
                <command_text>select b.id, min(b.local_search)
from TestTable b
group by b.id
option(maxdop 1)</command_text>
              </statement>
            </variant>
            <variant>
              <id>167</id>
              <name>Aggregation removal</name>
              <description></description>
              <statement>
                <command_text>select distinct b.id, b.local_search
from TestTable b
option(maxdop 1)</command_text>
              </statement>
            </variant>
          </variants>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>168</id>
          <name>Heap</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>169</id>
          <name>Non-clustered index</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_local_search
</command_text>
              </statement>
              <statement>
                <command_text>alter table TestTable drop constraint pk_TestTable_id
</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>170</id>
      <name>05 PK</name>
      <description></description>
      <tests />
      <configurations>
        <configuration>
          <id>171</id>
          <name>Heap</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>172</id>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)
</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
              </statement>
              <statement>
                <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>173</id>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <statements>
              <statement>
                <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
              </statement>
              <statement>
                <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
              </statement>
            </statements>
          </init_script>
          <clean_up_script>
            <statements>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
              </statement>
              <statement>
                <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
              </statement>
              <statement>
                <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
              </statement>
            </statements>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
  </test_groups>
  <connection_settings>
    <provider>Microsoft SQL Server</provider>
    <settings use_connection_string="false" data_source="(local)" initial_catalog="SqlTest" integrated_security="true" user_id="" password="" connection_string="" />
  </connection_settings>
  <test_runs>
    <test_run>
      <id>182</id>
      <name>2018-10-05 09:31:51</name>
      <configuration_results>
        <configuration_result>
          <configuration_id>29</configuration_id>
          <configuration_name>Heap</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>30</configuration_id>
          <configuration_name>Non-clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>31</configuration_id>
          <configuration_name>Non-clustered 2</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>32</configuration_id>
          <configuration_name>Non-clustered 3</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>33</configuration_id>
          <configuration_name>Clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>34</configuration_id>
          <configuration_name>Clustered 2</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>35</configuration_id>
          <configuration_name>Clustered 3</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>36</configuration_id>
          <configuration_name>Clustered 4</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>97</configuration_id>
          <configuration_name>Heap</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>98</configuration_id>
          <configuration_name>Non-clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>99</configuration_id>
          <configuration_name>Non-clustered 2</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>100</configuration_id>
          <configuration_name>Clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>101</configuration_id>
          <configuration_name>Clustered 2</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>145</configuration_id>
          <configuration_name>Heap</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>146</configuration_id>
          <configuration_name>Non-clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>147</configuration_id>
          <configuration_name>Non-clustered 2</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>148</configuration_id>
          <configuration_name>Non-clustered 3</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>149</configuration_id>
          <configuration_name>Non-clustered 4</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>150</configuration_id>
          <configuration_name>Non-clustered 5</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>168</configuration_id>
          <configuration_name>Heap</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>169</configuration_id>
          <configuration_name>Non-clustered index</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>171</configuration_id>
          <configuration_name>Heap</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>172</configuration_id>
          <configuration_name>Non-clustered 1</configuration_name>
        </configuration_result>
        <configuration_result>
          <configuration_id>173</configuration_id>
          <configuration_name>Non-clustered 2</configuration_name>
        </configuration_result>
      </configuration_results>
      <test_group_results>
        <test_group_result>
          <test_group_id>1</test_group_id>
          <test_group_name>01</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>37</test_group_id>
          <test_group_name>02</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>102</test_group_id>
          <test_group_name>03</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>151</test_group_id>
          <test_group_name>04 PK</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>170</test_group_id>
          <test_group_name>05 PK</test_group_name>
        </test_group_result>
      </test_group_results>
      <test_results>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.27</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.28</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.24</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.34</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.27</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.26</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.46</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Table Scan
            |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.47</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Table Scan
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.28</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Hash Match
       |         |--Index Seek
       |         |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Hash Match
       |         |--Index Seek
       |         |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Hash Match
       |         |--Index Seek
       |         |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Hash Match
       |         |--Index Seek
       |         |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Nested Loops
            |    |--Compute Scalar
            |    |    |--Index Seek
            |    |--RID Lookup
            |--Nested Loops
                 |--Compute Scalar
                 |    |--Index Seek
                 |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Hash Match
       |         |--Index Seek
       |         |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.04</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Nested Loops
                 |    |--Compute Scalar
                 |    |    |--Hash Match
                 |    |         |--Index Seek
                 |    |         |--Index Seek
                 |    |--RID Lookup
                 |--Nested Loops
                      |--Compute Scalar
                      |    |--Index Seek
                      |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.31</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.28</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.12</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Nested Loops
            |    |--Compute Scalar
            |    |    |--Index Seek
            |    |--RID Lookup
            |--Nested Loops
                 |--Compute Scalar
                 |    |--Index Seek
                 |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Nested Loops
                 |    |--Compute Scalar
                 |    |    |--Index Seek
                 |    |--RID Lookup
                 |--Nested Loops
                      |--Compute Scalar
                      |    |--Index Seek
                      |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.29</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.13</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.13</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.09</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.08</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.14</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Scan
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.15</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Nested Loops
            |    |--Compute Scalar
            |    |    |--Index Scan
            |    |--RID Lookup
            |--Nested Loops
                 |--Compute Scalar
                 |    |--Index Scan
                 |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Compute Scalar
       |    |--Index Seek
       |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.08</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Nested Loops
                 |    |--Compute Scalar
                 |    |    |--Index Seek
                 |    |--RID Lookup
                 |--Nested Loops
                      |--Compute Scalar
                      |    |--Index Scan
                      |--RID Lookup</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Index Scan
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.32</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.04</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.04</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Clustered Index Seek
            |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>33</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.05</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Sort
       |--Stream Aggregate
            |--Nested Loops
                 |--Nested Loops
                 |    |--Index Seek
                 |    |--Clustered Index Seek
                 |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.11</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Index Scan
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.31</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.33</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Nested Loops
            |    |--Index Seek
            |    |--Clustered Index Seek
            |--Nested Loops
                 |--Index Seek
                 |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>34</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Nested Loops
       |--Index Seek
       |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Nested Loops
                 |    |--Index Seek
                 |    |--Clustered Index Seek
                 |--Nested Loops
                      |--Index Seek
                      |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.31</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.33</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.33</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.29</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Clustered Index Seek
            |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>35</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.04</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Nested Loops
                 |--Clustered Index Seek
                 |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_name>Sargability 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990
option(maxdop 1)</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.28</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995
option(maxdop 1)</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.25</query_processing_time>
              <result_size>260</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_name>Sargability 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10
option(maxdop 1)</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.38</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20
option(maxdop 1)</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_name>Constant rewrite</query_variant_name>
              <query_processing_time>0.29</query_processing_time>
              <result_size>174</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1, 2)
option(maxdop 1)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_name>IN</query_variant_name>
              <query_processing_time>0.34</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)
option(maxdop 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.25</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>572</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100 and
      a.global_search &gt; 10 and a.global_search &lt; 200
option(maxdop 1)</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.04</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 20 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>7900</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)
option(maxdop 1)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2
option(maxdop 1)</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 or a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.49</query_processing_time>
              <result_size>1143</result_size>
              <query_plan>  |--Sort

            |--Clustered Index Scan
            |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>36</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Clustered Index Seek</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100
option(maxdop 1)</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_name>Intersection</query_variant_name>
              <query_processing_time>0.25</query_processing_time>
              <result_size>99</result_size>
              <query_plan>  |--Stream Aggregate
       |--Sort
            |--Hash Match
                 |--Clustered Index Seek
                 |--Clustered Index Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.51</query_processing_time>
              <result_size>3</result_size>
              <query_plan>  |--Filter
       |--Compute Scalar
            |--Hash Match
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>1.42</query_processing_time>
              <result_size>3</result_size>
              <query_plan>  |--Stream Aggregate
       |--Nested Loops
            |--Filter
            |    |--Compute Scalar
            |         |--Hash Match
            |              |--Table Scan
            |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>3</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.3</query_processing_time>
              <result_size>94</result_size>
              <query_plan>  |--Filter
       |--Compute Scalar
            |--Stream Aggregate
                 |--Sort
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.86</query_processing_time>
              <result_size>94</result_size>
              <query_plan>  |--Hash Match
       |--Hash Match
       |    |--Hash Match
       |    |    |--Table Scan
       |    |--Table Scan
       |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0.43</query_processing_time>
              <result_size>94</result_size>
              <query_plan>  |--Hash Match
       |--Sort
       |    |--Table Scan
       |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.57</query_processing_time>
              <result_size>8</result_size>
              <query_plan>  |--Filter
       |--Compute Scalar
            |--Hash Match
                 |--Compute Scalar
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>2.43</query_processing_time>
              <result_size>8</result_size>
              <query_plan>  |--Nested Loops
       |--Hash Match
       |    |--Table Scan
       |--Top
            |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>2.42</query_processing_time>
              <result_size>8</result_size>
              <query_plan>  |--Nested Loops
       |--Hash Match
       |    |--Table Scan
       |--Top
            |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0.58</query_processing_time>
              <result_size>8</result_size>
              <query_plan>  |--Filter
       |--Compute Scalar
            |--Hash Match
                 |--Compute Scalar
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0.51</query_processing_time>
              <result_size>8</result_size>
              <query_plan>  |--Filter
       |--Compute Scalar
            |--Hash Match
                 |--Compute Scalar
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0.2</query_processing_time>
              <result_size>100</result_size>
              <query_plan>  |--Nested Loops


       |         |--Sort
       |              |--Table Scan
       |--Nested Loops
            |--Compute Scalar
            |    |--Stream Aggregate

</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.66</query_processing_time>
              <result_size>100</result_size>
              <query_plan>  |--Compute Scalar
       |--Hash Match
            |--Table Scan
            |--Compute Scalar
                 |--Hash Match
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.53</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Compute Scalar
       |--Hash Match
            |--Compute Scalar
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.55</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Compute Scalar
       |--Hash Match
            |--Compute Scalar
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>1.02</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Hash Match
       |--Compute Scalar
            |--Hash Match
                 |--Compute Scalar
                 |    |--Stream Aggregate
                 |         |--Sort
                 |              |--Table Scan
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_name>Subuqyer + distinct in subquery</query_variant_name>
              <query_processing_time>0.66</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Compute Scalar
       |--Merge Join
            |--Compute Scalar
            |    |--Stream Aggregate
            |         |--Sort
            |              |--Table Scan
            |--Sort
                 |--Hash Match
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>2</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.58</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Compute Scalar
       |--Hash Match
            |--Compute Scalar
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>1.71</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Hash Match
       |--Compute Scalar
            |--Hash Match
                 |--Compute Scalar
                 |    |--Hash Match
                 |         |--Table Scan
                 |--Hash Match
                      |--Compute Scalar
                      |    |--Hash Match
                      |         |--Table Scan
                      |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>1</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.59</query_processing_time>
              <result_size>102</result_size>
              <query_plan>  |--Compute Scalar
       |--Hash Match
            |--Compute Scalar
                 |--Table Scan</query_plan>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_name>GROUP BY elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_name>GROUP BY elimination in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_name>Correlated subquery elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_name>Correlated subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_name>Independent subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_name>Removing conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_name>Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_name>Subuqyer + distinct in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_name>GROUP BY elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_name>GROUP BY elimination in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_name>Correlated subquery elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_name>Correlated subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_name>Independent subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_name>Removing conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_name>Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_name>Subuqyer + distinct in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_name>GROUP BY elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_name>GROUP BY elimination in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_name>Correlated subquery elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_name>Correlated subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_name>Independent subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_name>Removing conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_name>Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_name>Subuqyer + distinct in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_name>GROUP BY elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_name>GROUP BY elimination in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_name>Correlated subquery elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_name>Correlated subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_name>Independent subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_name>Removing conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>100</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_name>Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having sum(local_search) &lt; 1000000
option(maxdop 1)</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search in (500, 501)
group by groupby
having count(distinct local_search) = 2
option(maxdop 1)</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 501 and
        a.groupby = b.groupby
)
option(maxdop 1)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where local_search = 500
intersect
select groupby
from TestTable
where local_search = 501
option(maxdop 1)</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)  
option(maxdop 1)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600
option(maxdop 1)</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)
option(maxdop 1)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0
option(maxdop 1)</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       count(*) over (partition by groupby) ct
from TestTable
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby
       ) ct
from TestTable a
where id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as cnt
from (select distinct groupby from TestTable) g1
option(maxdop 1)</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_name>Subuqyer + distinct in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
group by groupby
option(maxdop 1)</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
option(maxdop 1)</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25
) t
where t.rn = 1 and 
      t.groupby is not null and 
      t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search
option(maxdop 1)</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t 
where t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax
option(maxdop 1)</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    ) 
option(maxdop 1)</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null
option(maxdop 1)</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null
option(maxdop 1)</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
option(maxdop 1)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select *, 
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5
option(maxdop 1)</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t
option(maxdop 1)</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_name>GROUP BY elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby
option(maxdop 1)</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1
option(maxdop 1)</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_name>GROUP BY elimination in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1
option(maxdop 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_name>GROUP BY eliminated</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_name>Correlated subquery elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_name>Correlated subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1
option(maxdop 1)</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_name>Independent subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (partition by groupby order by id)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only
option(maxdop 1)</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select *,
       row_number() over (partition by groupby order by id)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t
option(maxdop 1)</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_name>Removing conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>101</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(orderby) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 or local_search IS NULL
group by groupby
option(maxdop 1)</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_name>Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_name>Selection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable b where b.groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id
option(maxdop 1)</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_name>Selection pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10
option(maxdop 1)</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_name>Nesting JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )
option(maxdop 1)</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_name>Redundant predicate elimination 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)
</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (select * from TestTable where global_search = 1) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_name>Redundant predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query></query>
              <query_variant_id>123</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10
option(maxdop 1)</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_name>Unnecessary LEFT JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and b.groupby = t.groupby
)
option(maxdop 1)</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0
option(maxdop 1)</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (SELECT a.global_search FROM TestTable) and
      a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_name>Predicate rewirte</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     ),
     (
        select min(a.id)
        from TestTable b2
        join Table1 a on b2.id = a.local_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1
option(maxdop 1)</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join Table1 a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby
option(maxdop 1)</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 1
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 2
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 1 and
       t.groupby = 1
union all
select a.id, a.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 1 and
       t.local_search = 2
option(maxdop 1)</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1
option(maxdop 1)</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>152</test_id>
          <test_name>Aggregation removal 1</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id
option(maxdop 1)</query>
              <query_variant_id>153</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>154</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>155</test_id>
          <test_name>Aggregation removal 2</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t
option(maxdop 1)</query>
              <query_variant_id>156</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from
(
    select local_search
    from TestTable
) t
option(maxdop 1)</query>
              <query_variant_id>157</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from TestTable
option(maxdop 1)</query>
              <query_variant_id>158</query_variant_id>
              <query_variant_name>Nested query removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>159</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</query>
              <query_variant_id>160</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</query>
              <query_variant_id>161</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>162</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>163</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>164</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>165</test_id>
          <test_name>Aggregation removal</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, min(b.local_search)
from TestTable b
group by b.id
option(maxdop 1)</query>
              <query_variant_id>166</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
option(maxdop 1)</query>
              <query_variant_id>167</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>152</test_id>
          <test_name>Aggregation removal 1</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id
option(maxdop 1)</query>
              <query_variant_id>153</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100
option(maxdop 1)</query>
              <query_variant_id>154</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>155</test_id>
          <test_name>Aggregation removal 2</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t
option(maxdop 1)</query>
              <query_variant_id>156</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from
(
    select local_search
    from TestTable
) t
option(maxdop 1)</query>
              <query_variant_id>157</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from TestTable
option(maxdop 1)</query>
              <query_variant_id>158</query_variant_id>
              <query_variant_name>Nested query removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>159</test_id>
          <test_name>Predicate elimination 1</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</query>
              <query_variant_id>160</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000
option(maxdop 1)</query>
              <query_variant_id>161</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>162</test_id>
          <test_name>Predicate elimination 2</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>163</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
option(maxdop 1)</query>
              <query_variant_id>164</query_variant_id>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
        <test_result>
          <test_id>165</test_id>
          <test_name>Aggregation removal</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <distinct_query_plans>0</distinct_query_plans>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, min(b.local_search)
from TestTable b
group by b.id
option(maxdop 1)</query>
              <query_variant_id>166</query_variant_id>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
option(maxdop 1)</query>
              <query_variant_id>167</query_variant_id>
              <query_variant_name>Aggregation removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <query_plan></query_plan>
              <started>False</started>
              <completed>False</completed>
              <error_message></error_message>
            </query_variant_result>
          </query_variant_results>
          <started>False</started>
          <completed>False</completed>
        </test_result>
      </test_results>
    </test_run>
  </test_runs>
  <last_id>182</last_id>
</sql_benchmark>