<?xml version="1.0" encoding="utf-8"?>
<sql_benchmark>
  <name>SQL Benchmark 1</name>
  <author></author>
  <description></description>
  <init_script>
    <default_statement_list>
      <statements />
    </default_statement_list>
    <specific_statement_lists>
      <specific_statement_list>
        <provider_name>Microsoft SQL Server</provider_name>
        <statements>
          <statement>
            <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL DROP TABLE dbo.TestTable
</command_text>
          </statement>
          <statement>
            <command_text>WITH x AS 
(
  SELECT n FROM (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) v(n)
), t1 AS
(
  SELECT ones.n + 10 * tens.n + 100 * hundreds.n + 1000 * thousands.n + 10000 * tenthousands.n + 100000 * hundredthousands.n as id  
  FROM x ones,     x tens,      x hundreds,       x thousands,       x tenthousands,       x hundredthousands
), t2 AS
(
    SELECT  id,
            id % 100 groupby
    FROM t1
), t3 AS
(
    SELECT  b.id, b.groupby, row_number() over (partition by groupby order by id) orderby
    FROM t2 b
)
SELECT  id, 
        groupby, 
        cast(orderby as int) orderby,
        cast(orderby % (groupby * 100 + 1) as int) local_search, 
        id % 10000 global_search, 
        LEFT('Value ' + CAST(CHECKSUM(NEWID()) AS VARCHAR) + ' ' + REPLICATE('*', 1000), 1000) as padding
    INTO TestTable
FROM t3
</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000000, null, null, null, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000001, 100, null, null, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000002, 99, 10000, null, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000003, 101, 10000, 1, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000004, null, null, 1, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000005, null, null, 500, null, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000006, null, null, 1, 1, '*');
insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000007, null, null, null, 1, '*');
</command_text>
          </statement>
          <statement>
            <command_text>alter table TestTable alter column id int not null;
</command_text>
          </statement>
        </statements>
      </specific_statement_list>
      <specific_statement_list>
        <provider_name>Oracle Database</provider_name>
        <statements>
          <statement>
            <command_text>BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TestTable';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
 END;

 </command_text>
          </statement>
          <statement>
            <command_text>CREATE  TABLE TestTable AS
WITH x AS 
(
  SELECT 0 n FROM dual
  union all 
  SELECT 1 FROM dual
  union all 
  SELECT 2 FROM dual
  union all 
  SELECT 3 FROM dual
  union all 
  SELECT 4 FROM dual
  union all 
  SELECT 5 FROM dual
  union all 
  SELECT 6 FROM dual
  union all 
  SELECT 7 FROM dual
  union all 
  SELECT 8 FROM dual
  union all 
  SELECT 9 FROM dual  
), t1 AS
(
  SELECT ones.n + 10 * tens.n + 100 * hundreds.n  + 1000 * thousands.n + 10000 * tenthousands.n + 100000 * hundredthousands.n as id  
  FROM x ones,     x tens,      x hundreds,       x thousands,       x tenthousands,       x hundredthousands
), t2 AS
(
    SELECT  id,
            mod(id, 100) groupby
    FROM t1
), t3 AS
(
    SELECT  b.id, b.groupby, row_number() over (partition by groupby order by id) orderby
    FROM t2 b
)
SELECT  id, 
        groupby, 
        cast(orderby as int) orderby,
        cast(mod(orderby, (groupby * 100 + 1)) as int) local_search, 
        mod(id, 10000) global_search, 
        RPAD(concat('Value ', id), 1000, '*') as padding    
FROM t3
</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000000, null, null, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000001, 100, null, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000002, 99, 10000, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000003, 101, 10000, 1, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000004, null, null, 1, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000005, null, null, 500, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000006, null, null, 1, 1, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000007, null, null, null, 1, '*');

</command_text>
          </statement>
        </statements>
      </specific_statement_list>
      <specific_statement_list>
        <provider_name>PostgreSQL</provider_name>
        <statements>
          <statement>
            <command_text>DROP TABLE IF EXISTS TestTable CASCADE;

 </command_text>
          </statement>
          <statement>
            <command_text>CREATE TABLE TestTable (
     id int,
    groupby int,
    orderby int,
    local_search int,
    global_search int,
    padding varchar(1000)
    );
</command_text>
          </statement>
          <statement>
            <command_text>INSERT
INTO    TestTable
WITH t1 AS
(
  SELECT id
  FROM generate_series(0, 999999) id
), t2 AS
(
    SELECT  id,
            id % 100 groupby
    FROM t1
), t3 AS
(
    SELECT  b.id, b.groupby, row_number() over (partition by groupby order by id) orderby
    FROM t2 b
)
SELECT  id, 
        groupby, 
        cast(orderby as int) orderby,
        cast(orderby % (groupby * 100 + 1) as int) local_search, 
        id % 10000 global_search, 
        RPAD('Value ' || id || ' ' , 1000, '*') as padding
FROM t3;
</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000000, null, null, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000001, 100, null, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000002, 99, 10000, null, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000003, 101, 10000, 1, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000004, null, null, 1, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000005, null, null, 500, null, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000006, null, null, 1, 1, '*');</command_text>
          </statement>
          <statement>
            <command_text>insert into TestTable(id, groupby, orderby, local_search, global_search, padding) values (1000007, null, null, null, 1, '*');

</command_text>
          </statement>
        </statements>
      </specific_statement_list>
    </specific_statement_lists>
  </init_script>
  <clean_up_script>
    <default_statement_list>
      <statements>
        <statement>
          <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL DROP TABLE dbo.TestTable</command_text>
        </statement>
      </statements>
    </default_statement_list>
    <specific_statement_lists>
      <specific_statement_list>
        <provider_name>Microsoft SQL Server</provider_name>
        <statements>
          <statement>
            <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL DROP TABLE dbo.TestTable</command_text>
          </statement>
        </statements>
      </specific_statement_list>
      <specific_statement_list>
        <provider_name>Oracle Database</provider_name>
        <statements>
          <statement>
            <command_text>BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE TestTable';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
</command_text>
          </statement>
        </statements>
      </specific_statement_list>
      <specific_statement_list>
        <provider_name>PostgreSQL</provider_name>
        <statements>
          <statement>
            <command_text>DROP TABLE IF EXISTS TestTable CASCADE;
</command_text>
          </statement>
        </statements>
      </specific_statement_list>
    </specific_statement_lists>
  </clean_up_script>
  <test_groups>
    <test_group>
      <id>1</id>
      <number>I</number>
      <name>01</name>
      <description></description>
      <tests>
        <test>
          <id>2</id>
          <number>1</number>
          <name>Redundant computation 1</name>
          <description>Test of predicate sargability. The redundant version contains unnecesary computation that can be easily eliminated.</description>
          <active>True</active>
          <variants>
            <variant>
              <id>3</id>
              <number>a</number>
              <name>Redundant, Algebralic operator</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>4</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>260</expected_result_size>
        </test>
        <test>
          <id>5</id>
          <number>2</number>
          <name>Redundant computation 2</name>
          <description>Test of attribute sargability. In this case the DBMS can not use the indexes easily, therefore, the rewrite is not so important.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>6</id>
              <number>a</number>
              <name>Redundant, Algebralic operator</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>7</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>174</expected_result_size>
        </test>
        <test>
          <id>8</id>
          <number>3</number>
          <name>Predicate ordering</name>
          <description>Test of predicate ordering of conjuctive query (predicates with different selectivity)</description>
          <active>False</active>
          <variants>
            <variant>
              <id>9</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>10</id>
              <number>b</number>
              <name>Swap of predicates</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
        <test>
          <id>11</id>
          <number>4</number>
          <name>Disjunction using IN</name>
          <description>Different disjunction syntax.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>12</id>
              <number>a</number>
              <name>OR operator version</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>13</id>
              <number>b</number>
              <name>IN operator version</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1000, 5000)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>306</expected_result_size>
        </test>
        <test>
          <id>14</id>
          <number>5</number>
          <name>Redundant predicate</name>
          <description>Test of a predicate elimination. The first SQL query contains a predicate that has to be always evaluated to true and therefore it can be eliminated.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>15</id>
              <number>a</number>
              <name>Redundant</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>16</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>575</expected_result_size>
        </test>
        <test>
          <id>17</id>
          <number>6</number>
          <name>Redundant predicate merging</name>
          <description>Test of a predicate elimination.
 The first SQL query contains predicates that has to be always evaluated to true and 
it can be safely eliminated.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>18</id>
              <number>a</number>
              <name>Redundant</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45 and
      a.global_search &gt; 10 and a.global_search &lt; 200</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>19</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>400</expected_result_size>
        </test>
        <test>
          <id>20</id>
          <number>7</number>
          <name>De Morgan law</name>
          <description>Test of disjunction. It applies De Morgan law.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>21</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>22</id>
              <number>b</number>
              <name>De Morgan law</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>23</id>
          <number>8</number>
          <name>Disjunction using UNION</name>
          <description>Test of disjunction. Rewrite of a disjunction into a query using the UNION construct.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>24</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>25</id>
              <number>b</number>
              <name>UNION construct</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>306</expected_result_size>
        </test>
        <test>
          <id>26</id>
          <number>9</number>
          <name>Conjunction using INTERSECT</name>
          <description>Test of conjunction. The `INTERSECT` construct versus the `AND` solution.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>27</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>28</id>
              <number>b</number>
              <name>INTERSECT construct</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
        <test>
          <id>249</id>
          <number>10</number>
          <name>Predicate simplifation</name>
          <description>The complex variant can be rewritten into a more straightforward query without attribute equality predicate. Note that groupby attribute is not indexed in this group of tests, therefore, the predicate rewrite is the only way how to include index seek into the query plan.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>250</id>
              <number>a</number>
              <name>Complex</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.groupby and a.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>251</id>
              <number>b</number>
              <name>Simple</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>29</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>30</id>
          <number>B</number>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_global_search
ON [dbo].[TestTable] (global_search)
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_global_search
ON [dbo].[TestTable] (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls ON TestTable (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs ON TestTable (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>-- drop the indexes
drop index TestTable.ix_TestTable_local_search
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_global_search

</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>-- drop the indexes
drop index TestTable.ix_TestTable_local_search
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_global_search

</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>-- drop the indexes
drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs

</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>-- drop the indexes
drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs

</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>31</id>
          <number>C</number>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_globalsearch
ON [dbo].[TestTable] (local_search, global_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_globalsearch
ON [dbo].[TestTable] (local_search, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_gs
ON TestTable (local_search, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_gs
ON TestTable (local_search, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch_globalsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch_globalsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>32</id>
          <number>D</number>
          <name>Non-clustered 3</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_localsearch
ON [dbo].[TestTable] (global_search, local_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_localsearch
ON [dbo].[TestTable] (global_search, local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_ls
ON TestTable (global_search, local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_ls
ON TestTable (global_search, local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch_localsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_ls</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_ls</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>37</id>
      <number>II</number>
      <name>02</name>
      <description></description>
      <tests>
        <test>
          <id>38</id>
          <number>1</number>
          <name>HAVING vs subquery</name>
          <description>Rewrite of the HAVING into a subquery.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>39</id>
              <number>a</number>
              <name>HAVING variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
group by groupby
having groupby is not null and sum(local_search) &lt; 1000000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>40</id>
              <number>b</number>
              <name>Subquery variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>4</expected_result_size>
        </test>
        <test>
          <id>41</id>
          <number>2</number>
          <name>Property groups</name>
          <description>Rewrite of the HAVING into a EXISTS or INTERSECT. 
This is quite common non-trivial task where we search for groups having certain set of properties. In this test we look for `groupby` values where there are rows with properties 1 and 500 in `local_search`.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>42</id>
              <number>a</number>
              <name>HAVING variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
where groupby is not null and local_search in (1, 500)
group by groupby
having count(distinct local_search) = 2
</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>43</id>
              <number>b</number>
              <name>EXISTS subquery variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 1 and
        a.groupby = b.groupby
)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>44</id>
              <number>c</number>
              <name>INTERSECT variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
where groupby is not null and local_search = 500
intersect
select groupby
from TestTable
where groupby is not null and local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>95</expected_result_size>
        </test>
        <test>
          <id>45</id>
          <number>3</number>
          <name>Exceptional groups</name>
          <description>We search for groups where all rows in group satisfy certain condition. It is a specific type of a set difference.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>46</id>
              <number>a</number>
              <name>HAVING variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>47</id>
              <number>b</number>
              <name>NOT EXISTS subquery variant</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>48</id>
              <number>c</number>
              <name>DIFFERENCE variant</name>
              <description></description>
              <default_statement>
                <command_text>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select distinct groupby
from TestTable
minus
select groupby
from TestTable
where local_search &gt;= 600</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>9</expected_result_size>
        </test>
        <test>
          <id>49</id>
          <number>4</number>
          <name>Aggregate function elimination</name>
          <description>Rewrite of the HAVING condition which eliminate one aggregate function. This rewrite comes from a precondition that we have two stes A and B, if A intersection B equals to A then complement A to B equals to zero.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>50</id>
              <number>a</number>
              <name>HAVING with two aggregates</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>51</id>
              <number>b</number>
              <name>HAVING with one aggregate</name>
              <description></description>
              <default_statement>
                <command_text>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>9</expected_result_size>
        </test>
        <test>
          <id>52</id>
          <number>5</number>
          <name>Window function vs subquery</name>
          <description>Rewrite of a window function using a correlated subquery with aggregate. Basicaly, all kinds of window functions can be rewrited using a subquery and join. The oposite rewriting does not have to be an easy task.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>53</id>
              <number>a</number>
              <name>Window function variant</name>
              <description></description>
              <default_statement>
                <command_text>select *
from 
(
    select id, 
           groupby, 
           local_search, 
           count(*) over (partition by groupby) ct
    from TestTable
) t
where local_search = 500</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>54</id>
              <number>b</number>
              <name>Subquery variant</name>
              <description></description>
              <default_statement>
                <command_text>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby or 
               (b.groupby is null and a.groupby is null)
       ) ct
from TestTable a
where local_search = 500</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>344</expected_result_size>
        </test>
        <test>
          <id>55</id>
          <number>6</number>
          <name>Conditional aggregation high-sel</name>
          <description>Conditional aggreagtion vesus solution using subquery with distinct. This test uses a high selectivity condition in the predicate (one row per group).</description>
          <active>False</active>
          <variants>
            <variant>
              <id>56</id>
              <number>a</number>
              <name>Conditional aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby
</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>57</id>
              <number>b</number>
              <name>Subquery + distinct</name>
              <description></description>
              <default_statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search = 2 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>102</expected_result_size>
        </test>
        <test>
          <id>58</id>
          <number>7</number>
          <name>Aggregation pushdown with subquery</name>
          <description>This test compares two queries where one have the aggregation nested in a subquery. It is equivalent since there are no joins and `g1.groupby` is the only attribute from the outer query that is used in the subqueries.
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>59</id>
              <number>a</number>
              <name>Subquery + distinct</name>
              <description></description>
              <default_statement>
                <command_text>select distinct g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from TestTable g1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>60</id>
              <number>b</number>
              <name>Subquery + distinct in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from (select distinct groupby from TestTable) g1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>103</expected_result_size>
        </test>
        <test>
          <id>61</id>
          <number>8</number>
          <name>Conditional aggregation med-sel</name>
          <description>The test compare a conditional aggregation query with a query using subquery with distinct. 
-- This test uses a medium selectivity condition in the predicate (50% of rows per group).</description>
          <active>False</active>
          <variants>
            <variant>
              <id>62</id>
              <number>a</number>
              <name>Conditional aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>63</id>
              <number>b</number>
              <name>Subquery + distinct</name>
              <description></description>
              <default_statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>102</expected_result_size>
        </test>
        <test>
          <id>64</id>
          <number>9</number>
          <name>Conditional aggregation low-sel</name>
          <description>Conditional aggreagtion versus solution using subquery with distinct. 
This test uses a medium selectivity condition in the predicate (100% of rows per group).</description>
          <active>False</active>
          <variants>
            <variant>
              <id>65</id>
              <number>a</number>
              <name>Conditional aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>66</id>
              <number>b</number>
              <name>Subquery + distinct</name>
              <description></description>
              <default_statement>
                <command_text>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>102</expected_result_size>
        </test>
        <test>
          <id>67</id>
          <number>10</number>
          <name>Greatest in group 1</name>
          <description>Find rows with max `local_search` value per `groupby`. Find all occurences of max per `groupby`.
 We assume that there can be more than one maximum `local_search` value per one `groupby` value. This test shows the most common solutions for this problem. 
The `Greatest in group 2` test shows also some other solutions.
 The window function solution usually leads to a sequential scan and to a very simple query plan.
 On the other hand the group by can utilize the indexes that are available.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>68</id>
              <number>a</number>
              <name>GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 80
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>69</id>
              <number>b</number>
              <name>Window function</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 80 and 
          local_search is not null
) t
where t.rn = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>20</expected_result_size>
        </test>
        <test>
          <id>70</id>
          <number>11</number>
          <name>Greatest in group 2</name>
          <description>Find max `local_search` per `groupby`. Find all maximal occurences in each group.
 This test compare eight very different solutions to this problem.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>71</id>
              <number>a</number>
              <name>Window function 1</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25 and 
          local_search is not null
) t
where t.rn = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>72</id>
              <number>b</number>
              <name>Window function 2</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>73</id>
              <number>c</number>
              <name>CROSS JOIN and TOP 1 with ties</name>
              <description>DBMS needs to implement WITH TIES option to the N row searching and CROSS JOIN LATERAL in order to support this variant. There is not many such DBMS.</description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross join lateral
(
    SELECT t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and 
          t2.local_search is not null
    order by t2.local_search desc
    fetch first 1 row with ties
) t 
where t.local_search is not null</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and
    t2.local_search is not null
    order by t2.local_search desc
) t</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and 
          t2.local_search is not null
    order by t2.local_search desc
    fetch first 1 row with ties
) t 
where t.local_search is not null</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>PostgreSQL</provider_name>
                  <not_supported>True</not_supported>
                  <command_text></command_text>
                </specific_statement>
              </specific_statements>
            </variant>
            <variant>
              <id>74</id>
              <number>d</number>
              <name>GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>75</id>
              <number>e</number>
              <name>Subquery with aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>76</id>
              <number>f</number>
              <name>NOT EXISTS</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>77</id>
              <number>g</number>
              <name>LEFT JOIN + NULL</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>78</id>
              <number>h</number>
              <name>TOP 1 with ties</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)
fetch first 1 row with ties
</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>PostgreSQL</provider_name>
                  <not_supported>True</not_supported>
                  <command_text></command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>107</expected_result_size>
        </test>
        <test>
          <id>79</id>
          <number>12</number>
          <name>Greatest N per group</name>
          <description>Two solutions for the problem:
 "Find N max occurences per group."
 More specificaly for each `groupby` value we search  for 5 rows with highest `local_search`.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>80</id>
              <number>a</number>
              <name>Window fun</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from
(
   select id, groupby, local_search, padding,
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>81</id>
              <number>b</number>
              <name>CROSS APPLY</name>
              <description></description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross join lateral
(
    SELECT t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
    fetch first 5 rows only
) t</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
    fetch first 5 rows only
) t</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>97</expected_result_size>
        </test>
        <test>
          <id>82</id>
          <number>13</number>
          <name>Redudant GROUP BY</name>
          <description>We test the capability to omit an unnecessary `GROUP BY` clause.
 The grouping is performed on one group, therefore, there is no need to do include the GROUP BY.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>83</id>
              <number>a</number>
              <name>Redundant, GROUP BY construct</name>
              <description></description>
              <default_statement>
                <command_text>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>84</id>
              <number>b</number>
              <name>Minimal, Without GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>SELECT 1 as groupby, max(local_search) gmax
from TestTable
where groupby = 1</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>PostgreSQL</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>SELECT 1 as groupby, max(local_search) gmax
from TestTable
where groupby = 1</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>85</id>
          <number>14</number>
          <name>Redundant GROUP BY in subquery</name>
          <description></description>
          <active>False</active>
          <variants>
            <variant>
              <id>86</id>
              <number>a</number>
              <name>Redundant, GROUP BY construct</name>
              <description></description>
              <default_statement>
                <command_text>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>87</id>
              <number>b</number>
              <name>Minimal, Without GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>99</expected_result_size>
        </test>
        <test>
          <id>88</id>
          <number>15</number>
          <name>Redundant correlated subquery</name>
          <description>We test the capability to omit unnecessary correlation in a subquery.
 The correlation is unnecessary since the outer query has a specific predicate on the correlation attribute.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>89</id>
              <number>a</number>
              <name>Redundant, Correlated subquery</name>
              <description></description>
              <default_statement>
                <command_text>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>90</id>
              <number>b</number>
              <name>Minimal, Independent subquery</name>
              <description></description>
              <default_statement>
                <command_text>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>99</expected_result_size>
        </test>
        <test>
          <id>91</id>
          <number>16</number>
          <name>Compute column liftup</name>
          <description>Is it better to do the TOP X in a subquery and then the column computation or it does not matter?
 Here we test whether the query compiler is capable to lift the column computation up if possible.
In this case it is possible since the window function uses the same predicate with ORDER BY construct of the query.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>92</id>
              <number>a</number>
              <name>Basic computation</name>
              <description></description>
              <default_statement>
                <command_text>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (order by groupby desc, local_search desc)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>93</id>
              <number>b</number>
              <name>Using subquery</name>
              <description></description>
              <default_statement>
                <command_text>select t.id,
       t.groupby,
       t.local_search,
       t.padding,
       row_number() over (order by groupby desc, local_search desc)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
        <test>
          <id>94</id>
          <number>17</number>
          <name>Redundant conditional aggregation</name>
          <description>This test remove the conditional aggregation since the CASE condition has to be always satisfied and there is no else statement.
 That is caused by the fact that the condition is already in WHERE predicate.
 Please note that removing the COUNT CASE is tricky and we should be aware of NULLs.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>95</id>
              <number>a</number>
              <name>Redundant, Conditional aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1
group by groupby
</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>96</id>
              <number>b</number>
              <name>Minimal, Without CASE</name>
              <description></description>
              <default_statement>
                <command_text>select g1.groupby,
       count(1) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 
group by groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>101</expected_result_size>
        </test>
        <test>
          <id>227</id>
          <number>18</number>
          <name>All construct versus aggregation</name>
          <description>It solves the `greatest in group` problem. Therefore, it finds all occurences of max `local_search` per `groupby`. This test compare a solution utlizing the `all` construct versus `group by` solution. Both queries are using a dependent subquery.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>230</id>
              <number>a</number>
              <name>All construct</name>
              <description>Dependent subquery with all construct.</description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.local_search &gt;= all(
  select local_search
  from TestTable t2
  where t.groupby = t2.groupby  and local_search is not null
  ) and groupby &gt; 80 and local_search is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>231</id>
              <number>b</number>
              <name>GROUP BY</name>
              <description>Dependent subquery with aggregation.</description>
              <default_statement>
                <command_text>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 80 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>20</expected_result_size>
        </test>
        <test>
          <id>255</id>
          <number>19</number>
          <name>Distinct pushdown</name>
          <description></description>
          <active>False</active>
          <variants>
            <variant>
              <id>256</id>
              <number>a</number>
              <name>Complex, Distinct in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select count(t.groupby) 
from (
  select distinct groupby
  from TestTable
) t</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>257</id>
              <number>b</number>
              <name>Simple, Aggregation with distinct</name>
              <description></description>
              <default_statement>
                <command_text>select count(distinct groupby) from TestTable</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>264</id>
          <number>20</number>
          <name>UNION vs JOIN</name>
          <description>Let us do a summary per `groupby` attribute for two relations (we use the `local_search` predicate to simulate two distinct tables). This test compare a solution using FULL JOIN instead of UNION.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>265</id>
              <number>a</number>
              <name>UNION</name>
              <description></description>
              <default_statement>
                <command_text>select groupby, sum(c1), sum(c2)
from
(
    select groupby, global_search c1, NULL c2
    from TestTable
    where local_search = 1
    union all
    select groupby, NULL c1, global_search c2
    from TestTable
    where local_search = 100
) t
group by groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>266</id>
              <number>b</number>
              <name>FULL JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select coalesce(t1.groupby, t2.groupby) groupby, t1.c1, t2.c2
from
(
    select groupby, sum(global_search) c1
    from TestTable
    where local_search = 1
    group by groupby
) t1
full join
(   
    select groupby, sum(global_search) c2
    from TestTable
    where local_search = 100
    group by groupby
) t2 on t1.groupby= t2.groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>101</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>97</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>98</id>
          <number>B</number>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby
ON TestTable (groupby)

CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_localsearch
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby ON TestTable (groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_localsearch ON TestTable (local_search)

</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby_localsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby

drop index TestTable.ix_TestTable_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby

drop index ix_TestTable_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>99</id>
          <number>C</number>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search,groupby)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search,groupby)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search,groupby)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search,groupby)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>279</id>
          <number>D</number>
          <name>Non-clustered 3</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby,local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby_localsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_localsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>102</id>
      <number>III</number>
      <name>03</name>
      <description></description>
      <tests>
        <test>
          <id>103</id>
          <number>1</number>
          <name>Selection/projection pushdown</name>
          <description>Test of straightforward selection pushdown optimization.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>104</id>
              <number>b</number>
              <name>Simple</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>105</id>
              <number>a</number>
              <name>Complex</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>106</id>
          <number>2</number>
          <name>CROSS JOIN</name>
          <description>Rewriting join to a cross join</description>
          <active>False</active>
          <variants>
            <variant>
              <id>107</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>108</id>
              <number>b</number>
              <name>CROSS JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>109</id>
          <number>3</number>
          <name>CROSS JOIN lateral</name>
          <description>Rewriting join to a cross join lateral.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>110</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>111</id>
              <number>b</number>
              <name>CROSS JOIN lateral</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>PostgreSQL</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross join lateral (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>112</id>
          <number>4</number>
          <name>Subquery</name>
          <description>This script test the ability to move predicate down in the query tree.
 The second query nest the table join into a subquery which can be easily rewritten into a basic variant.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>113</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>114</id>
              <number>b</number>
              <name>JOIN in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>115</id>
          <number>5</number>
          <name>Redundant predicate 1</name>
          <description>This test introduce redundant exists predicate in the second query.
 The EXISTS construct in the second query is covered by the other parts of the query, therefore, it is redundant.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>116</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>117</id>
              <number>b</number>
              <name>Redundant, Exists construct</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>118</id>
          <number>6</number>
          <name>Redundant predicate 2</name>
          <description>This test introduces a redundant predicate that is covered by the other parts of the query.
 More precisely, the `a.global_search = 1` predicate on the same data can be found twice in the second query (once in the subquery and once in the outer query).
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>119</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>120</id>
              <number>b</number>
              <name>Redundant, Same predicate twice</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>121</id>
          <number>7</number>
          <name>Redundant OUTER JOIN 1</name>
          <description>This test introduces redundant outer join. The outer join is eliminated by the `a.global_search = 1` predicate anyway.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>122</id>
              <number>a</number>
              <name>Minimal, INNER JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>123</id>
              <number>b</number>
              <name>Redundant, LEFT JOIN 1</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>124</id>
          <number>8</number>
          <name>Redundant OUTER JOIN 2</name>
          <description>This test introduces redundant outer join. 
The outer join is eliminated by the `a.id is not null` predicate.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>125</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>126</id>
              <number>b</number>
              <name>Redundant, LEFT JOIN 2</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>127</id>
          <number>9</number>
          <name>Magic set rewriting</name>
          <description>Pushdown the groupby attribute aggregation and using an extra semijoin. 
The semijoin is realized using EXISTS, however, we may use any semijoin syntax that is available in DBMS. 
Semijoin avoids multiplication of the `groupby` values. 
The effectivness of this rewritting may be heavily dependent on a number of groupby repetitions and selectivity of the semijoin.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>128</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>129</id>
              <number>b</number>
              <name>Aggregation pushdown</name>
              <description></description>
              <default_statement>
                <command_text>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>101</expected_result_size>
        </test>
        <test>
          <id>130</id>
          <number>10</number>
          <name>CROSS JOIN lateral</name>
          <description>The second query uses a cross join lateral + aggregation function to implement the semijoin.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>131</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>132</id>
              <number>b</number>
              <name>CROSS JOIN LATERAL</name>
              <description></description>
              <default_statement>
                <command_text>select distinct b.groupby
from TestTable b
cross join lateral (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>101</expected_result_size>
        </test>
        <test>
          <id>133</id>
          <number>11</number>
          <name>Redundant subquery</name>
          <description></description>
          <active>False</active>
          <variants>
            <variant>
              <id>134</id>
              <number>a</number>
              <name>Redundant, IN construct</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>135</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>573</expected_result_size>
        </test>
        <test>
          <id>136</id>
          <number>12</number>
          <name>Independent summaries</name>
          <description>Test compares two basic approaches that can be used to compute summaries.
 The first query compute summarie using subqueries behind SELECT.
 The second query compute summaries using GROUP BY with JOIN.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>137</id>
              <number>a</number>
              <name>Subquery behind SELECT</name>
              <description></description>
              <default_statement>
                <command_text>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>138</id>
              <number>b</number>
              <name>GROUP BY with JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>103</expected_result_size>
        </test>
        <test>
          <id>139</id>
          <number>13</number>
          <name>UNION with JOIN 1</name>
          <description>Rewriting that move the UNION construct from the inner query into the outer query. Reference: Al-Kateb, Mohammed, Paul Sinclair, Grace Au, Sanjay Nair, Mark Sirek, Lu Ma, and Mohamed Y. Eltabakh. "Joins over UNION ALL Queries in Teradata®: Demonstration of Optimized Execution." In Proceedings of the 2018 International Conference on Management of Data, pp. 1705-1708. ACM, 2018.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>140</id>
              <number>a</number>
              <name>UNION in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>141</id>
              <number>b</number>
              <name>UNION in outer query</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>52</expected_result_size>
        </test>
        <test>
          <id>142</id>
          <number>14</number>
          <name>UNION with JOIN 2</name>
          <description>Rewriting that move the UNION construct from the inner query into the outer query. Reference: Al-Kateb, Mohammed, Paul Sinclair, Grace Au, Sanjay Nair, Mark Sirek, Lu Ma, and Mohamed Y. Eltabakh. "Joins over UNION ALL Queries in Teradata®: Demonstration of Optimized Execution." In Proceedings of the 2018 International Conference on Management of Data, pp. 1705-1708. ACM, 2018.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>143</id>
              <number>a</number>
              <name>UNION in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>144</id>
              <number>b</number>
              <name>UNION in outer query</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>2</expected_result_size>
        </test>
        <test>
          <id>252</id>
          <number>15</number>
          <name>Projection pushdown</name>
          <description></description>
          <active>False</active>
          <variants>
            <variant>
              <id>253</id>
              <number>a</number>
              <name>Simple</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>254</id>
              <number>b</number>
              <name>Complex</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>145</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements />
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements />
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements />
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>146</id>
          <number>B</number>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_id
ON TestTable (global_search,id)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_id
ON TestTable (global_search,id)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>147</id>
          <number>C</number>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch_id
ON TestTable (global_search,id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_id
ON TestTable (global_search,id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs_id
ON TestTable (global_search,id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>148</id>
          <number>D</number>
          <name>Non-clustered 3</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id_gs
ON TestTable (id, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id_gs
ON TestTable (id, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>149</id>
          <number>E</number>
          <name>Non-clustered 4</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id_globalsearch
ON TestTable (id)
include(global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id_gs
ON TestTable (id, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id_gs
ON TestTable (id, global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_id_globalsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>150</id>
          <number>F</number>
          <name>Non-clustered 5</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id
ON TestTable (id)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch
ON TestTable (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_id
ON TestTable (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id
ON TestTable (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby
ON TestTable (groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_id
ON TestTable (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_id
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_id
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_id
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>151</id>
      <number>IV</number>
      <name>04 PK</name>
      <description></description>
      <tests>
        <test>
          <id>152</id>
          <number>1</number>
          <name>Redundant GROUP BY and aggregation</name>
          <description>Test of possible aggreagation removal. 
The aggregation can be rewritten to distinct without aggregation function if the `local_search` attribute is functionaly dependent on `id`.
 The functional dependency is satisfied since the `id` attribute is the primary key in this test.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>153</id>
              <number>a</number>
              <name>Redundant, GROUP BY and aggregation</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>154</id>
              <number>b</number>
              <name>Minimal, Aggregation removed</name>
              <description></description>
              <default_statement>
                <command_text>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
        <test>
          <id>155</id>
          <number>2</number>
          <name>Redundant GROUP BY and aggregation in subquery</name>
          <description>Test of possible aggregation removal. 
The aggregation can be rewritten to distinct without aggregation function if the `local_search` attribute is functionaly dependent on id. The functional dependency is satisfied since the `id` attribute is the primary key in this test.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>156</id>
              <number>a</number>
              <name>Redundant, GROUP BY in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>157</id>
              <number>b</number>
              <name>Minimal, Aggregation removed</name>
              <description></description>
              <default_statement>
                <command_text>select min(local_search)
from
(
    select local_search
    from TestTable
) t</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>158</id>
              <number>c</number>
              <name>Minimal, Nested query removal</name>
              <description></description>
              <default_statement>
                <command_text>select min(local_search)
from TestTable</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>159</id>
          <number>3</number>
          <name>Redundant NOT NULL predicate</name>
          <description>Test of `IS NOT NULL` predicate elimination. 
The `IS NOT NULL` predicate can be eliminated since the `id` is a primary key, therefore, it can not be null.
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>160</id>
              <number>a</number>
              <name>Redundant</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>161</id>
              <number>b</number>
              <name>Predicate elimination</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>Oracle Database</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000</command_text>
                </specific_statement>
                <specific_statement>
                  <provider_name>PostgreSQL</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>168</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>169</id>
          <number>B</number>
          <name>Non-clustered index</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_local_search
</command_text>
                </statement>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_local_search
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>170</id>
      <number>V</number>
      <name>05 PK</name>
      <description></description>
      <tests>
        <test>
          <id>183</id>
          <number>1</number>
          <name>Semi-join</name>
          <description>Using a semijoin instead of join. We can use a semijoin if the `Table1.id` attribute is the primary key.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>184</id>
              <number>a</number>
              <name>INNER JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>185</id>
              <number>b</number>
              <name>SEMI JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where exists( 
        select 1 
        from TestTable a 
        where global_search = 1 and b.local_search = a.id
    ) and
    b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>186</id>
          <number>2</number>
          <name>Redundant JOIN elimination</name>
          <description>Introducing redundant join into a simple SQL.
The last join in the second query is redundant since the following is true:
1. The `TestTable.id` attribute is unique. (therefore it is not possible to multiply the resut adding the join)
2. The `m2.id` attribute is the only attribute of m2 used in the query.
3. The identical join is already in query.
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>187</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>188</id>
              <number>b</number>
              <name>Redundant, Unnecessary JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.local_search = m1.id
join TestTable m2 on b.local_search = m2.id -- this join can be eliminated if the Table1.id attribute is the primary key
where m1.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>189</id>
          <number>3</number>
          <name>Predicate rewrite</name>
          <description>Simple rewrite of the query predicates may sometimes lead to unexpected behaviour.
low-or-equal predicates are sometimes handled differently during the query optimization which may have a impact on a join algorithm selection.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>190</id>
              <number>a</number>
              <name>Predicate with equality</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>191</id>
              <number>b</number>
              <name>Predicate with lower and greater</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &gt; 9 and b.groupby &lt; 11</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>192</id>
          <number>4</number>
          <name>Redundant subquery elimination</name>
          <description>Introducing redundant self-join in a subquery instead regular column projection
The rewrite is possible due to the following reasons:
1. The subquery access the superset relation when compared the outer relation. 
2. The correlated join is according to the primary key (the join can not multiply).
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>193</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where b.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>194</id>
              <number>b</number>
              <name>Redundant, Subquery + JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b1.id, b1.groupby, b1.orderby, (
         select b2.padding
         from TestTable b2
         where b1.id = b2.id -- this subquery can be eliminated if the TestTable.id attribute is the primary key
       )
from TestTable b1
where b1.local_search = 5000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
        <test>
          <id>195</id>
          <number>5</number>
          <name>Aggregate pushdown</name>
          <description>Pushdown the `groupby` attribute aggregation. 
Since the `id` attribute is a primary key the join can not multiply the `groupby` values.
Therefore, it is safe to perform the distinct first and then the join. Reference: Chaudhuri, Surajit. "An overview of query optimization in relational systems." Proceedings of the seventeenth ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems. ACM, 1998
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>196</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select distinct b.local_search
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>197</id>
              <number>b</number>
              <name>Aggregation pushdown</name>
              <description></description>
              <default_statement>
                <command_text>select b.local_search
from 
(
    select distinct local_search from TestTable
) b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>198</id>
          <number>6</number>
          <name>Attribute removal</name>
          <description>Test of possible attribute removal from a GROUP BY attribute list.
The `TestTable.global_search` attribute can be removed from the aggregation if the `TestTable.id` attribute is a primary key.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>199</id>
              <number>a</number>
              <name>Attribute behind GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, a.global_search, count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id, a.global_search</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>200</id>
              <number>b</number>
              <name>Adding aggregation, Removal of attribute from GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, min(a.global_search), count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>10</expected_result_size>
        </test>
        <test>
          <id>201</id>
          <number>7</number>
          <name>Join merge</name>
          <description>Merge of two joins into one.
The merge of joins is possible:

1. If `TestTable.id` is a primary key,

2. joins are using the same table and the same join condition,

3. we are not using attributes from `TestTable` in the SQL output,

4. we perform group by according to the attribute in the join.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>202</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and m1.groupby = 20 
join TestTable m2 on b.id = m2.local_search and m2.groupby = 10
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>203</id>
              <number>b</number>
              <name>Join merge</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and 
                 (m1.groupby = 10 or m1.groupby = 20)
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding 
having count(distinct m1.groupby) = 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>204</id>
          <number>8</number>
          <name>Redundant JOIN 1</name>
          <description>One self-join can be removed in this test. We can remove the self-join if the `id` attribute is a primary key.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>205</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.local_search, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &lt; 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>206</id>
              <number>b</number>
              <name>Redundant, JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select b.id, b.groupby, b.local_search, r.padding
from TestTable b
join TestTable a on b.local_search = a.id
join TestTable r on r.id = b.id
where a.global_search = 1 and b.groupby &lt; 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
        <test>
          <id>246</id>
          <number>9</number>
          <name>Redundant JOIN 2</name>
          <description>One self-join can be removed in this test. The self-join is hidden in the subquery. We can remove the self-join if the `id` attribute is a primary key.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>247</id>
              <number>a</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select id, groupby, local_search, padding
from TestTable
where global_search = 1 and groupby &lt; 2</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>248</id>
              <number>b</number>
              <name>Redundant, JOIN in the subquery</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, t.groupby, t.local_search, a.padding
from TestTable a
join
(
    select id, groupby, local_search, padding
    from TestTable
    where global_search = 1
) t on a.id = t.id
where t.groupby = 1</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>100</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>171</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>172</id>
          <number>B</number>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_localsearch_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls_groupby
ON TestTable (local_search, groupby)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
                </statement>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_localsearch_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_ls_groupby
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>173</id>
          <number>C</number>
          <name>Non-clustered 2</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_groupby_localsearch
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_globalsearch
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_groupby_ls
ON TestTable (groupby, local_search)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_gs
ON TestTable (global_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
                </statement>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_groupby_localsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_globalsearch
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>drop index ix_TestTable_groupby_ls
</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_gs
</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
    <test_group>
      <id>208</id>
      <number>VI</number>
      <name>06 PK FK</name>
      <description></description>
      <tests>
        <test>
          <id>211</id>
          <number>1</number>
          <name>Redundant JOIN 1</name>
          <description>The join and TestTable with alias `b` can be eliminated due to the following:
1. The `TestTable.id` attribute is the primary key,
2. the `TestTable.local_search` attribute is the foreign key,
3. we are not interested about any attribute values of `b` (in other words `b` is accessed only as a part of the join condition).
Due to this, every row in `a` has to have exactly one row in `b`. 
In other words, the join neither reduce nor expand the rows of `a`, therefore, we can avoid it.
Using the join we just eliminate rows from `a` having null value in the `TestTable.local_search` attribute which can be simply replaced by the `a.local_search is not null` condition.
</description>
          <active>False</active>
          <variants>
            <variant>
              <id>216</id>
              <number>a</number>
              <name>Redudant, JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select sum(a.local_search)
from TestTable a 
join TestTable b on b.id = a.local_search</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select sum(cast(a.local_search as bigint))
from TestTable a 
join TestTable b on b.id = a.local_search</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
            <variant>
              <id>217</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select sum(a.local_search)
from TestTable a 
where a.local_search is not null</command_text>
              </default_statement>
              <specific_statements>
                <specific_statement>
                  <provider_name>Microsoft SQL Server</provider_name>
                  <not_supported>False</not_supported>
                  <command_text>select sum(cast(a.local_search as bigint))
from TestTable a 
where a.local_search is not null</command_text>
                </specific_statement>
              </specific_statements>
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>212</id>
          <number>2</number>
          <name>Redudant JOIN 2</name>
          <description>The join of TestTable with alias `b` can be eliminated due to the following:
1. The `TestTable.id` attribute is primary key,
2. the `TestTable.local_search` attribute is foreign key,
3. we are not interested about any attribute values of `b` except `b.id`, however, `b.id` is part of the join condition.
Due to this, every row in `a` has to have exactly one row in `b`. 
In other words, the join neither reduce nor expand the rows of `a`, therefore, we can avoid it.
Using the join we just eliminate rows from `a` having null value in the `TestTable.local_search` attribute 
which can be simply replaced by `a.local_search is not null` condition.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>218</id>
              <number>a</number>
              <name>Redundant, JOIN</name>
              <description></description>
              <default_statement>
                <command_text>select sum(b.id)
from TestTable a 
join TestTable b on b.id = a.local_search
where b.id &lt; 1000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>219</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select sum(a.local_search)
from TestTable a 
where a.local_search &lt; 1000</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>1</expected_result_size>
        </test>
        <test>
          <id>213</id>
          <number>3</number>
          <name>Redudant JOIN 3</name>
          <description>The join of TestTable with alias `c` in subquery can be eliminated due to the following:
1. The `TestTable.id` attribute is primary key,
2. the `TestTable.local_search` attribute is foreign key,
3. we are not interested about any attribute values of `c` except `c.id`, however, `c.id` is part of the join condition.
Due to this, every row in `a` has to have exactly one row in `b`. 
In other words, the join neither reduce nor expand the rows of `a`, therefore, we can avoid it.
Using the join we just eliminate rows from `b` having null value in the `TestTable.local_search` attribute which can be simply replaced by `b.local_search is not null` condition.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>220</id>
              <number>a</number>
              <name>Redudant, JOIN in subquery</name>
              <description></description>
              <default_statement>
                <command_text>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    join TestTable c on c.id = b.local_search
    where c.id = a.id
  )
from TestTable a
where a.id &lt; 50</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>221</id>
              <number>b</number>
              <name>Minimal</name>
              <description></description>
              <default_statement>
                <command_text>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search and b.local_search is not null
  )
from TestTable a
where a.id &lt; 50</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
        <test>
          <id>214</id>
          <number>4</number>
          <name>Subquery rewrite</name>
          <description>This test use straightforward rewriting of the subquery behind SELECT into a solution using a JOIN. 
This rewrite does not require the primary key and the foreign key integrity constraints.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>222</id>
              <number>a</number>
              <name>Basic</name>
              <description></description>
              <default_statement>
                <command_text>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search
  )
from TestTable a
where a.id &lt; 50</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>223</id>
              <number>b</number>
              <name>Rewrite using JOIN and GROUP BY</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, b.sum_local_search
from TestTable a
left join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>324</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
        <test>
          <id>215</id>
          <number>5</number>
          <name>Redundant JOIN 4</name>
          <description>We can eliminate the join due to the following reasons:
1. The `TestTable.id` attribute is primary key,
2. the `TestTable.local_search` attribute is foreign key referencing the `TestTable.id` attribute.
3. we are not interested about any attribute values of `a` except `a.id`, however, `a.id` is part of the join condition.
Due to this, every row in `b` has to have exactly one row in `a`. 
In other words, the join neither reduce nor expand the rows of `b`, therefore, we can avoid it.
Using the join we just eliminate rows from `b` having null value in the `TestTable.local_search` attribute which can be simply replaced by `b.local_search is not null` condition.</description>
          <active>False</active>
          <variants>
            <variant>
              <id>224</id>
              <number>a</number>
              <name>Redundant</name>
              <description></description>
              <default_statement>
                <command_text>select a.id, b.sum_local_search
from TestTable a
join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</command_text>
              </default_statement>
              <specific_statements />
            </variant>
            <variant>
              <id>225</id>
              <number>b</number>
              <name>Minimal, JOIN removed</name>
              <description></description>
              <default_statement>
                <command_text>select b.local_search, b.sum_local_search
from (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b 
where b.local_search &lt; 50 and b.local_search is not null</command_text>
              </default_statement>
              <specific_statements />
            </variant>
          </variants>
          <selected_annotations>
            <selected_annotation>
              <annotation_id>323</annotation_id>
            </selected_annotation>
          </selected_annotations>
          <expected_result_size>50</expected_result_size>
        </test>
      </tests>
      <configurations>
        <configuration>
          <id>209</id>
          <number>A</number>
          <name>Heap</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable 
  add constraint pk_TestTable_id primary key (id);
alter table TestTable 
  add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id);
</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id);
alter table TestTable add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id);
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable add constraint fk_TestTable_localsearch 
                      foreign key (local_search) references TestTable(id)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable add constraint fk_TestTable_localsearch 
                      foreign key (local_search) references TestTable(id)
</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                </statement>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
        <configuration>
          <id>210</id>
          <number>B</number>
          <name>Non-clustered 1</name>
          <description></description>
          <init_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL  
begin
  alter table TestTable add constraint pk_TestTable_id primary key (id);
  alter table TestTable add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id);
end;
</command_text>
                </statement>
                <statement>
                  <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>IF OBJECT_ID('dbo.TestTable', 'U') IS NOT NULL  
begin
  alter table TestTable add constraint pk_TestTable_id primary key (id);
  alter table TestTable add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id);
end;
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE NONCLUSTERED INDEX ix_TestTable_local_search
ON [dbo].[TestTable] (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable add constraint pk_TestTable_id primary key (id)</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable add constraint fk_TestTable_localsearch foreign key (local_search) references TestTable(id)
</command_text>
                  </statement>
                  <statement>
                    <command_text>CREATE INDEX ix_TestTable_ls
ON TestTable (local_search)</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </init_script>
          <clean_up_script>
            <default_statement_list>
              <statements>
                <statement>
                  <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                </statement>
                <statement>
                  <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                </statement>
                <statement>
                  <command_text>drop index TestTable.ix_TestTable_local_search</command_text>
                </statement>
              </statements>
            </default_statement_list>
            <specific_statement_lists>
              <specific_statement_list>
                <provider_name>Microsoft SQL Server</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index TestTable.ix_TestTable_local_search</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>Oracle Database</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_ls</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
              <specific_statement_list>
                <provider_name>PostgreSQL</provider_name>
                <statements>
                  <statement>
                    <command_text>alter table TestTable drop constraint fk_TestTable_localsearch</command_text>
                  </statement>
                  <statement>
                    <command_text>alter table TestTable drop constraint pk_TestTable_id</command_text>
                  </statement>
                  <statement>
                    <command_text>drop index ix_TestTable_ls</command_text>
                  </statement>
                </statements>
              </specific_statement_list>
            </specific_statement_lists>
          </clean_up_script>
        </configuration>
      </configurations>
    </test_group>
  </test_groups>
  <connection_settings>
    <provider>Microsoft SQL Server</provider>
    <settings use_connection_string="false" data_source="" initial_catalog="" integrated_security="false" user_id="" password="" connection_string="" />
  </connection_settings>
  <test_runs>
    <test_run>
      <id>331</id>
      <name>2019-01-15 14:53:19</name>
      <configuration_results>
        <configuration_result>
          <configuration_id>29</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>30</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>31</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>32</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>97</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>98</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>99</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>279</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>145</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>146</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>147</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>148</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>149</configuration_id>
          <configuration_number>E</configuration_number>
          <configuration_name>Non-clustered 4</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>150</configuration_id>
          <configuration_number>F</configuration_number>
          <configuration_name>Non-clustered 5</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>168</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>169</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered index</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>171</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>172</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>173</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>209</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>210</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
      </configuration_results>
      <test_group_results>
        <test_group_result>
          <test_group_id>1</test_group_id>
          <test_group_number>I</test_group_number>
          <test_group_name>01</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>37</test_group_id>
          <test_group_number>II</test_group_number>
          <test_group_name>02</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>102</test_group_id>
          <test_group_number>III</test_group_number>
          <test_group_name>03</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>151</test_group_id>
          <test_group_number>IV</test_group_number>
          <test_group_name>04 PK</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>170</test_group_id>
          <test_group_number>V</test_group_number>
          <test_group_name>05 PK</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>208</test_group_id>
          <test_group_number>VI</test_group_number>
          <test_group_name>06 PK FK</test_group_name>
        </test_group_result>
      </test_group_results>
      <annotation_results>
        <annotation_result>
          <anntation_id>323</anntation_id>
          <anntation_number>1</anntation_number>
          <anntation_name>Redundancy removal</anntation_name>
        </annotation_result>
        <annotation_result>
          <anntation_id>324</anntation_id>
          <anntation_number>2</anntation_number>
          <anntation_name>Query rewriting</anntation_name>
        </annotation_result>
      </annotation_results>
      <test_results>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.069</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="330.884" estimated_cost="105.976" actual_rows="260" actual_time="0.062">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="330.884" estimated_cost="105.904" actual_rows="260" actual_time="2.039">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.076</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="330.884" estimated_cost="105.963" actual_rows="260" actual_time="0.067">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="330.884" estimated_cost="105.904" actual_rows="260" actual_time="2.187">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_number>2</test_number>
          <test_name>Redundant computation 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.072</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.224" actual_rows="174" actual_time="0.066">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="2.11">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.071</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.212" actual_rows="174" actual_time="0.064">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="2.06">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_number>3</test_number>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.072</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="94.1396" estimated_cost="105.988" actual_rows="100" actual_time="0.068">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="94.1396" estimated_cost="105.904" actual_rows="100" actual_time="2.166">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.077</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="94.1396" estimated_cost="105.988" actual_rows="100" actual_time="0.075">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="94.1396" estimated_cost="105.904" actual_rows="100" actual_time="2.357">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_number>4</test_number>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>OR operator version</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="105.988" actual_rows="306" actual_time="0.067">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="381.72" estimated_cost="105.904" actual_rows="306" actual_time="2.216">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1000, 5000)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>IN operator version</query_variant_name>
              <query_processing_time>0.076</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="105.988" actual_rows="306" actual_time="0.066">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="381.72" estimated_cost="105.904" actual_rows="306" actual_time="2.174">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.069</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="2.08">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.07</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="0.065">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="2.24">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate merging</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45 and
      a.global_search &gt; 10 and a.global_search &lt; 200</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.071</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="106.026" actual_rows="400" actual_time="0.063">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="418.778" estimated_cost="105.904" actual_rows="400" actual_time="2.095">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="105.988" actual_rows="400" actual_time="0.066">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="418.778" estimated_cost="105.904" actual_rows="400" actual_time="2.172">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_number>7</test_number>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="3.17526" estimated_cost="105.987" actual_rows="1" actual_time="0.069">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="3.17526" estimated_cost="105.904" actual_rows="1" actual_time="2.175">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0.073</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="3.17526" estimated_cost="105.987" actual_rows="1" actual_time="0.07">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="3.17526" estimated_cost="105.904" actual_rows="1" actual_time="2.183">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_number>8</test_number>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="105.988" actual_rows="306" actual_time="0.065">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="381.72" estimated_cost="105.904" actual_rows="306" actual_time="2.137">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION construct</query_variant_name>
              <query_processing_time>0.149</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.719" estimated_cost="211.931" actual_rows="306" actual_time="0.141">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="381.719" estimated_cost="211.9" actual_rows="306" actual_time="0.324">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="211.9" actual_rows="306" actual_time="0.306">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="381.72" estimated_cost="211.869" actual_rows="306" actual_time="3.917">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="381.72" estimated_cost="211.869" actual_rows="306" actual_time="3.907">
                                  <child_nodes>
                                    <node op_name="Concatenation" estimated_rows="381.72" estimated_cost="211.868" actual_rows="306" actual_time="3.903">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="330.884" estimated_cost="105.904" actual_rows="256" actual_time="1.887">
                                          <child_nodes />
                                        </node>
                                        <node op_name="Table Scan" estimated_rows="50.8362" estimated_cost="105.904" actual_rows="50" actual_time="2">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_number>9</test_number>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.075</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="94.1396" estimated_cost="105.988" actual_rows="100" actual_time="0.064">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="94.1396" estimated_cost="105.904" actual_rows="100" actual_time="2.041">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>INTERSECT construct</query_variant_name>
              <query_processing_time>0.131</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="211.987" actual_rows="100" actual_time="0.132">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="1" estimated_cost="211.958" actual_rows="100" actual_time="4.148">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.97" actual_rows="146" actual_time="1.986">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.968" actual_rows="575" actual_time="1.986">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.909">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="94.1396" estimated_cost="105.988" actual_rows="100" actual_time="2.144">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="94.1396" estimated_cost="105.988" actual_rows="100" actual_time="2.143">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="94.1396" estimated_cost="105.904" actual_rows="100" actual_time="2.007">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>249</test_id>
          <test_number>10</test_number>
          <test_name>Predicate simplifation</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.groupby and a.groupby = 1</query>
              <query_variant_id>250</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.063</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="3697.21" estimated_cost="105.996" actual_rows="100" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="3697.21" estimated_cost="105.904" actual_rows="100" actual_time="1.913">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.groupby = 1</query>
              <query_variant_id>251</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="99.3427" estimated_cost="105.988" actual_rows="100" actual_time="0.066">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="99.3427" estimated_cost="105.904" actual_rows="100" actual_time="2.081">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.09</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="4.26059" actual_rows="260" actual_time="0.075">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="252.938" estimated_cost="2.75292" actual_rows="260" actual_time="0.074">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="260" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_number>2</test_number>
          <test_name>Redundant computation 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.065</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.224" actual_rows="174" actual_time="0.057">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.839">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.063</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.212" actual_rows="174" actual_time="0.061">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.941">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_number>3</test_number>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.012</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="57.1665" estimated_cost="0.144509" actual_rows="100" actual_time="0.008">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="5.71663" estimated_cost="0.128842" actual_rows="100" actual_time="0.008">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0305783" actual_rows="10002" actual_time="0.006">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0156431" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.014</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="57.1665" estimated_cost="0.144509" actual_rows="100" actual_time="0.01">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="5.71663" estimated_cost="0.128842" actual_rows="100" actual_time="0.009">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0305783" actual_rows="10002" actual_time="0.007">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0156431" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_number>4</test_number>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>OR operator version</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1000, 5000)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>IN operator version</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate merging</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45 and
      a.global_search &gt; 10 and a.global_search &lt; 200</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="400.001" estimated_cost="1.31413" actual_rows="400" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="400.001" estimated_cost="0.003722" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.30838" actual_rows="400" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="400.001" estimated_cost="1.31378" actual_rows="400" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="400.001" estimated_cost="0.003722" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.30838" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_number>7</test_number>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="2.39095" estimated_cost="0.0339446" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1" estimated_cost="0.0306573" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="2.39095" estimated_cost="0.0339446" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1" estimated_cost="0.0306573" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_number>8</test_number>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION construct</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="301.683" estimated_cost="1.00692" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Concatenation" estimated_rows="301.685" estimated_cost="0.991684" actual_rows="306" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="256" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="256" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="256" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_number>9</test_number>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.018</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="57.1665" estimated_cost="0.144509" actual_rows="100" actual_time="0.013">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="5.71663" estimated_cost="0.128842" actual_rows="100" actual_time="0.012">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0305783" actual_rows="10002" actual_time="0.01">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0156431" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>INTERSECT construct</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="1" estimated_cost="2.05798" actual_rows="100" actual_time="0.02">
                  <child_nodes>
                    <node op_name="Sort" estimated_rows="571.666" estimated_cost="1.8962" actual_rows="575" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Sort" estimated_rows="57.1665" estimated_cost="0.154856" actual_rows="100" actual_time="0.013">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="57.1665" estimated_cost="0.142973" actual_rows="100" actual_time="0.013">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="5.71663" estimated_cost="0.127306" actual_rows="100" actual_time="0.012">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0305783" actual_rows="10002" actual_time="0.01">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0156431" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>249</test_id>
          <test_number>10</test_number>
          <test_name>Predicate simplifation</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.groupby and a.groupby = 1</query>
              <query_variant_id>250</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="3697.21" estimated_cost="12.0158" actual_rows="100" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="3697.21" estimated_cost="0.0132749" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="3697.21" estimated_cost="11.9871" actual_rows="100" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.groupby = 1</query>
              <query_variant_id>251</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="100" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="61.8127" estimated_cost="1.87016" actual_rows="100" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.082</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="4.62355" actual_rows="260" actual_time="0.076">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="252.938" estimated_cost="3.11588" actual_rows="260" actual_time="0.075">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="260" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_number>2</test_number>
          <test_name>Redundant computation 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.224" actual_rows="174" actual_time="0.059">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.888">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.212" actual_rows="174" actual_time="0.061">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.952">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_number>3</test_number>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="58.5753" estimated_cost="0.192739" actual_rows="100" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="58.5753" estimated_cost="0.00334643" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.189148" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="58.5753" estimated_cost="0.192739" actual_rows="100" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="58.5753" estimated_cost="0.00334643" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.189148" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_number>4</test_number>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>OR operator version</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1000, 5000)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>IN operator version</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="575" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.01</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="575" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate merging</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45 and
      a.global_search &gt; 10 and a.global_search &lt; 200</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="3.57644" actual_rows="400" actual_time="0.015">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="418.778" estimated_cost="3.54695" actual_rows="400" actual_time="0.399">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="2.20555" actual_rows="400" actual_time="0.386">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="418.778" estimated_cost="2.08448" actual_rows="400" actual_time="0.082">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.36986" actual_rows="400" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="3.53894" actual_rows="400" actual_time="0.015">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="418.778" estimated_cost="3.50945" actual_rows="400" actual_time="0.419">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="418.778" estimated_cost="2.16805" actual_rows="400" actual_time="0.392">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="418.778" estimated_cost="2.08448" actual_rows="400" actual_time="0.085">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.36986" actual_rows="400" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_number>7</test_number>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.01" estimated_cost="0.00657342" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="1.01" estimated_cost="0.00328311" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.00328609" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.01" estimated_cost="0.00657342" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="1.01" estimated_cost="0.00328311" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.00328609" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_number>8</test_number>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="301.685" estimated_cost="0.991227" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="301.685" estimated_cost="0.00361385" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.986352" actual_rows="306" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION construct</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="301.683" estimated_cost="1.00692" actual_rows="306" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Concatenation" estimated_rows="301.685" estimated_cost="0.991684" actual_rows="306" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="256" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="256" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="256" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_number>9</test_number>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="58.5753" estimated_cost="0.192739" actual_rows="100" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="58.5753" estimated_cost="0.00334643" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.189148" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>INTERSECT construct</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="1" estimated_cost="2.10797" actual_rows="100" actual_time="0.006">
                  <child_nodes>
                    <node op_name="Sort" estimated_rows="571.666" estimated_cost="1.8964" actual_rows="575" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="575" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Sort" estimated_rows="58.5723" estimated_cost="0.204638" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="58.5753" estimated_cost="0.192739" actual_rows="100" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="58.5753" estimated_cost="0.00334643" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.189148" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>249</test_id>
          <test_number>10</test_number>
          <test_name>Predicate simplifation</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.groupby and a.groupby = 1</query>
              <query_variant_id>250</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="3697.21" estimated_cost="12.0173" actual_rows="100" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="3697.21" estimated_cost="0.0147563" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="3697.21" estimated_cost="11.9871" actual_rows="100" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.groupby = 1</query>
              <query_variant_id>251</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="100" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="61.8127" estimated_cost="1.87016" actual_rows="100" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="330.884" estimated_cost="4.87929" actual_rows="260" actual_time="0.075">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="330.884" estimated_cost="3.11588" actual_rows="260" actual_time="0.074">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.08202" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.054</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="330.884" estimated_cost="4.67929" actual_rows="260" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="330.884" estimated_cost="3.11588" actual_rows="260" actual_time="0.048">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.08202" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>5</test_id>
          <test_number>2</test_number>
          <test_name>Redundant computation 2</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search + 10 = a.global_search - 10</query>
              <query_variant_id>6</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.224" actual_rows="174" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.906">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.global_search - 20</query>
              <query_variant_id>7</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.064</query_processing_time>
              <result_size>174</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100001" estimated_cost="106.212" actual_rows="174" actual_time="0.059">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="100001" estimated_cost="105.904" actual_rows="174" actual_time="1.876">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>8</test_id>
          <test_number>3</test_number>
          <test_name>Predicate ordering</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>9</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="91.8754" estimated_cost="0.337888" actual_rows="100" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="91.8754" estimated_cost="0.034282" actual_rows="100" actual_time="0.004">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.298422" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100 and a.local_search = 1</query>
              <query_variant_id>10</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Swap of predicates</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="91.8754" estimated_cost="0.337888" actual_rows="100" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="91.8754" estimated_cost="0.034282" actual_rows="100" actual_time="0.004">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.298422" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>11</test_id>
          <test_number>4</test_number>
          <test_name>Disjunction using IN</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>12</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>OR operator version</query_variant_name>
              <query_processing_time>0.025</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="3.4175" actual_rows="306" actual_time="0.019">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="381.72" estimated_cost="3.3881" actual_rows="306" actual_time="0.407">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="2.16805" actual_rows="306" actual_time="0.39">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="381.72" estimated_cost="2.08448" actual_rows="306" actual_time="0.12">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.24852" actual_rows="306" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search in (1000, 5000)</query>
              <query_variant_id>13</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>IN operator version</query_variant_name>
              <query_processing_time>0.024</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="3.4175" actual_rows="306" actual_time="0.016">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="381.72" estimated_cost="3.3881" actual_rows="306" actual_time="0.414">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="2.16805" actual_rows="306" actual_time="0.393">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="381.72" estimated_cost="2.08448" actual_rows="306" actual_time="0.092">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.24852" actual_rows="306" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>14</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where (1 = 2 and a.global_search = 2) or
      (1 = 1 and a.local_search = 1)</query>
              <query_variant_id>15</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.14946" actual_rows="575" actual_time="0.016">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="575" actual_time="0.38">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.358">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.059">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="3.00407" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1</query>
              <query_variant_id>16</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.021</query_processing_time>
              <result_size>575</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.14946" actual_rows="575" actual_time="0.014">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="575" actual_time="0.363">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.349">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.084">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="3.00407" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>17</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate merging</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45 and
      a.global_search &gt; 10 and a.global_search &lt; 200</query>
              <query_variant_id>18</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="400.001" estimated_cost="1.31487" actual_rows="400" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="400.001" estimated_cost="0.00446274" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.30838" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &gt; 40 and a.global_search &lt; 45</query>
              <query_variant_id>19</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>400</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="400.001" estimated_cost="1.31452" actual_rows="400" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="400.001" estimated_cost="0.00446274" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.30838" actual_rows="400" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>20</test_id>
          <test_number>7</test_number>
          <test_name>De Morgan law</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where NOT (a.local_search != 1 or a.global_search != 2)</query>
              <query_variant_id>21</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.01" estimated_cost="0.00657342" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="1.01" estimated_cost="0.00328311" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.00328609" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search = 2</query>
              <query_variant_id>22</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>De Morgan law</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.01" estimated_cost="0.00657342" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="1.01" estimated_cost="0.00328311" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.00328609" actual_rows="1" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>23</test_id>
          <test_number>8</test_number>
          <test_name>Disjunction using UNION</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000 or a.local_search = 5000</query>
              <query_variant_id>24</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="3.4175" actual_rows="306" actual_time="0.015">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="381.72" estimated_cost="3.3881" actual_rows="306" actual_time="0.248">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="2.16805" actual_rows="306" actual_time="0.223">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="381.72" estimated_cost="2.08448" actual_rows="306" actual_time="0.086">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.24852" actual_rows="306" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1000
UNION
select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>25</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION construct</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>306</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="381.719" estimated_cost="5.53792" actual_rows="306" actual_time="0.043">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="381.719" estimated_cost="5.50769" actual_rows="306" actual_time="0.226">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="381.72" estimated_cost="5.50767" actual_rows="306" actual_time="0.207">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="381.72" estimated_cost="5.47588" actual_rows="306" actual_time="0.801">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="381.72" estimated_cost="5.47585" actual_rows="306" actual_time="0.795">
                                  <child_nodes>
                                    <node op_name="Concatenation" estimated_rows="381.72" estimated_cost="5.47482" actual_rows="306" actual_time="0.792">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="330.884" estimated_cost="3.19658" actual_rows="256" actual_time="0.394">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="330.884" estimated_cost="2.14304" actual_rows="256" actual_time="0.377">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="330.884" estimated_cost="2.08448" actual_rows="256" actual_time="0.064">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.08202" actual_rows="256" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Nested Loops" estimated_rows="50.8362" estimated_cost="2.27824" actual_rows="50" actual_time="0.384">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="2.14299" actual_rows="50" actual_time="0.364">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="50.8362" estimated_cost="2.08448" actual_rows="50" actual_time="0.056">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.163749" actual_rows="50" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>26</test_id>
          <test_number>9</test_number>
          <test_name>Conjunction using INTERSECT</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.global_search &lt; 100</query>
              <query_variant_id>27</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="91.8754" estimated_cost="0.337888" actual_rows="100" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="91.8754" estimated_cost="0.034282" actual_rows="100" actual_time="0.003">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.298422" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1
intersect
select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search &lt; 100</query>
              <query_variant_id>28</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>INTERSECT construct</query_variant_name>
              <query_processing_time>0.037</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="5.53575" actual_rows="100" actual_time="0.03">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="1" estimated_cost="5.50718" actual_rows="100" actual_time="0.878">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="918.757" estimated_cost="5.15449" actual_rows="146" actual_time="0.482">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.1529" actual_rows="575" actual_time="0.482">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="575" actual_time="0.228">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.206">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.067">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="3.00407" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="91.8735" estimated_cost="0.352196" actual_rows="100" actual_time="0.383">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="91.8754" estimated_cost="0.351428" actual_rows="100" actual_time="0.383">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="91.8754" estimated_cost="0.322568" actual_rows="100" actual_time="0.11">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="91.8754" estimated_cost="0.0526347" actual_rows="100" actual_time="0.093">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="91.8754" estimated_cost="0.0238223" actual_rows="100" actual_time="0.005">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.298422" actual_rows="100" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>249</test_id>
          <test_number>10</test_number>
          <test_name>Predicate simplifation</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = a.groupby and a.groupby = 1</query>
              <query_variant_id>250</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.015</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="3697.21" estimated_cost="14.165" actual_rows="100" actual_time="0.012">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="3697.21" estimated_cost="14.1275" actual_rows="100" actual_time="0.088">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="3697.21" estimated_cost="2.08448" actual_rows="575" actual_time="0.083">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="3697.21" estimated_cost="11.9871" actual_rows="100" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 1 and a.groupby = 1</query>
              <query_variant_id>251</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.037</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="99.3427" estimated_cost="5.14755" actual_rows="100" actual_time="0.014">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="100" actual_time="0.31">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.298">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.076">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="99.3427" estimated_cost="3.00407" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_number>1</test_number>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having groupby is not null and sum(local_search) &lt; 1000000</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="106.4" actual_rows="4" actual_time="0.065">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.4" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.4" actual_rows="102" actual_time="0.065">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.371" actual_rows="102" actual_time="2.001">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.371" actual_rows="3197" actual_time="2.001">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.369" actual_rows="3197" actual_time="1.988">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.34" actual_rows="3197" actual_time="1.921">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="1.717">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.151</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="212.929" actual_rows="4" actual_time="0.146">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="1" estimated_cost="212.901" actual_rows="4" actual_time="2.378">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="38" actual_time="2.096">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3198" actual_time="2.086">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3198" actual_time="2.009">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.858">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="1" estimated_cost="106.536" actual_rows="5" actual_time="0.265">
                          <child_nodes>
                            <node op_name="Filter" estimated_rows="1" estimated_cost="106.508" actual_rows="5" actual_time="1.955">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.508" actual_rows="103" actual_time="1.955">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="106.508" actual_rows="3197" actual_time="1.954">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3197" actual_time="1.953">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3197" actual_time="1.881">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.673">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_number>2</test_number>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>3</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search in (1, 500)
group by groupby
having count(distinct local_search) = 2
</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.064</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="106.042" actual_rows="95" actual_time="0.062">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9984" estimated_cost="106.042" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9984" estimated_cost="106.042" actual_rows="100" actual_time="0.062">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="199.953" estimated_cost="106.042" actual_rows="195" actual_time="0.062">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1034.64" estimated_cost="106.014" actual_rows="748" actual_time="0.062">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1034.64" estimated_cost="105.986" actual_rows="748" actual_time="1.926">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1207.78" estimated_cost="105.986" actual_rows="916" actual_time="1.923">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1207.78" estimated_cost="105.904" actual_rows="916" actual_time="1.918">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 1 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.203</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="94.1957" estimated_cost="318.321" actual_rows="95" actual_time="0.192">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="94.1957" estimated_cost="318.292" actual_rows="95" actual_time="6.052">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="1.986">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3196" actual_time="1.986">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3196" actual_time="1.899">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.755">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Merge Join" estimated_rows="94.1957" estimated_cost="211.928" actual_rows="95" actual_time="4.063">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="101" actual_time="1.983">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.962" actual_rows="575" actual_time="1.983">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.873">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="94.2127" estimated_cost="105.963" actual_rows="96" actual_time="2.049">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="105.962" actual_rows="344" actual_time="2.049">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="289.028" estimated_cost="105.904" actual_rows="344" actual_time="1.949">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search = 500
intersect
select groupby
from TestTable
where groupby is not null and local_search = 1</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0.124</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="94.1957" estimated_cost="212.006" actual_rows="95" actual_time="0.125">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="94.1957" estimated_cost="211.978" actual_rows="95" actual_time="3.921">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="99.9819" estimated_cost="105.989" actual_rows="100" actual_time="1.954">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.987" actual_rows="573" actual_time="1.953">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="573" actual_time="1.888">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="94.2127" estimated_cost="105.988" actual_rows="95" actual_time="1.952">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="105.987" actual_rows="343" actual_time="1.952">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="289.028" estimated_cost="105.904" actual_rows="343" actual_time="1.839">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_number>3</test_number>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10" estimated_cost="106.543" actual_rows="9" actual_time="0.067">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.542" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.542" actual_rows="103" actual_time="0.067">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.514" actual_rows="103" actual_time="2.038">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.514" actual_rows="3194" actual_time="2.034">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.512" actual_rows="3194" actual_time="2.02">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.483" actual_rows="3194" actual_time="1.94">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.645">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.945</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="106.439" actual_rows="9" actual_time="0.997">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="106.411" actual_rows="9" actual_time="17.511">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="1.976">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3197" actual_time="1.966">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3197" actual_time="1.873">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.726">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.046366" actual_rows="94" actual_time="15.52">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0361005" actual_rows="94" actual_time="15.52">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0.971</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="106.439" actual_rows="9" actual_time="0.967">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="106.411" actual_rows="9" actual_time="17.426">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="1.956">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3192" actual_time="1.954">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3192" actual_time="1.874">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.731">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.046366" actual_rows="94" actual_time="15.445">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0361005" actual_rows="94" actual_time="15.445">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_number>4</test_number>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10" estimated_cost="106.543" actual_rows="9" actual_time="0.065">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.542" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.542" actual_rows="103" actual_time="0.065">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.514" actual_rows="103" actual_time="2.001">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.514" actual_rows="3192" actual_time="2">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.512" actual_rows="3192" actual_time="1.988">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.483" actual_rows="3192" actual_time="1.925">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.642">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="106.542" actual_rows="9" actual_time="0.071">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.542" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.542" actual_rows="103" actual_time="0.071">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.514" actual_rows="103" actual_time="2.178">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.514" actual_rows="3194" actual_time="2.178">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.511" actual_rows="3194" actual_time="2.178">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.483" actual_rows="3194" actual_time="2.08">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.839">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_number>5</test_number>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select *
from 
(
    select id, 
           groupby, 
           local_search, 
           count(*) over (partition by groupby) ct
    from TestTable
) t
where local_search = 500</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0.32</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="113.133" actual_rows="344" actual_time="0.359">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="289.028" estimated_cost="113.104" actual_rows="344" actual_time="9.702">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1000010" estimated_cost="113.074" actual_rows="1000008" actual_time="9.637">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="100" estimated_cost="112.131" actual_rows="135" actual_time="8.818">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="1000010" estimated_cost="112.013" actual_rows="1000008" actual_time="4.225">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1000010" estimated_cost="111.896" actual_rows="1000008" actual_time="4.064">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.177" actual_rows="1000008" actual_time="3.264">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="3.385">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="10000.1" estimated_cost="0.0235763" actual_rows="1000008" actual_time="0.705">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.012967" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0117882" actual_rows="103" actual_time="0.304">
                                      <child_nodes>
                                        <node op_name="Table Spool" estimated_rows="10000.1" estimated_cost="0" actual_rows="1000008" actual_time="0.251">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="10000.1" estimated_cost="0" actual_rows="1000008" actual_time="0.261">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby or 
               (b.groupby is null and a.groupby is null)
       ) ct
from TestTable a
where local_search = 500</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.129</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="289.028" estimated_cost="212.5" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="212.5" actual_rows="344" actual_time="0.128">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="289.028" estimated_cost="212.471" actual_rows="344" actual_time="4.03">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.507" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.507" actual_rows="103" actual_time="2.019">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1600" estimated_cost="106.507" actual_rows="3197" actual_time="2.019">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3197" actual_time="2.018">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3197" actual_time="1.926">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.75">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="289.028" estimated_cost="105.963" actual_rows="344" actual_time="1.984">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="105.962" actual_rows="344" actual_time="1.983">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="289.028" estimated_cost="105.904" actual_rows="344" actual_time="1.847">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_number>6</test_number>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby
</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.406" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.406" actual_rows="102" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.378" actual_rows="102" actual_time="2.082">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="106.378" actual_rows="3198" actual_time="2.082">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.375" actual_rows="3198" actual_time="2.08">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.346" actual_rows="3198" actual_time="1.986">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="1.716">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search = 2 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.264</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="29227.1" estimated_cost="321.814" actual_rows="102" actual_time="0.249">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="29227.1" estimated_cost="321.779" actual_rows="102" actual_time="3.812">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000190" estimated_cost="321.277" actual_rows="1000003" actual_time="3.497">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000190" estimated_cost="320.973" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1000190" estimated_cost="320.967" actual_rows="1000003" actual_time="5.108">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="99.9819" estimated_cost="105.996" actual_rows="3168" actual_time="0.127">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="99" actual_time="0.062">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.966" actual_rows="571" actual_time="0.062">
                                                  <child_nodes>
                                                    <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.935" actual_rows="571" actual_time="1.923">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="571" actual_time="1.916">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="213.45" actual_rows="1000003" actual_time="4.695">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.9819" estimated_cost="105.996" actual_rows="3232" actual_time="2.048">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="101" actual_time="0.063">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.966" actual_rows="575" actual_time="0.063">
                                                      <child_nodes>
                                                        <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.935" actual_rows="575" actual_time="1.923">
                                                          <child_nodes>
                                                            <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.921">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="2.361">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_number>7</test_number>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from TestTable g1</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.133</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1709.59" estimated_cost="214.011" actual_rows="103" actual_time="0.129">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1709.59" estimated_cost="213.982" actual_rows="103" actual_time="2.174">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="27353.5" estimated_cost="213.949" actual_rows="3197" actual_time="2.171">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="27353.5" estimated_cost="213.915" actual_rows="3197" actual_time="2.194">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="213.426" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="213.42" actual_rows="1000008" actual_time="1.894">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.9819" estimated_cost="105.996" actual_rows="3232" actual_time="0.12">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.967" actual_rows="101" actual_time="0.057">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.966" actual_rows="575" actual_time="0.057">
                                                      <child_nodes>
                                                        <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.935" actual_rows="575" actual_time="1.74">
                                                          <child_nodes>
                                                            <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.74">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.529">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from (select distinct groupby from TestTable) g1</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct in subquery</query_variant_name>
              <query_processing_time>0.134</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="212.357" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="212.357" actual_rows="103" actual_time="0.123">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="212.329" actual_rows="103" actual_time="3.874">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="101" actual_time="1.825">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="1.825">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.962" actual_rows="575" actual_time="1.825">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.752">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="2.018">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3198" actual_time="2.017">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3198" actual_time="1.896">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.753">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_number>8</test_number>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.406" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.406" actual_rows="102" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.378" actual_rows="102" actual_time="2.078">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="106.378" actual_rows="3191" actual_time="2.075">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.375" actual_rows="3191" actual_time="2.061">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.346" actual_rows="3191" actual_time="1.965">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="1.604">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.308</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="524552" estimated_cost="323.586" actual_rows="102" actual_time="0.309">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="524552" estimated_cost="323.446" actual_rows="102" actual_time="5.904">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="321.662" actual_rows="1000003" actual_time="5.618">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="321.358" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="321.352" actual_rows="1000003" actual_time="9.12">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.003" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="100" estimated_cost="106.003" actual_rows="24" actual_time="1.892">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="32895.1" estimated_cost="105.967" actual_rows="30000" actual_time="1.888">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="32895.1" estimated_cost="105.904" actual_rows="30000" actual_time="1.813">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="213.828" actual_rows="1000003" actual_time="7.011">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.195" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.195" actual_rows="102" actual_time="1.95">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.195" actual_rows="2732" actual_time="1.95">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.192" actual_rows="2732" actual_time="1.936">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.164" actual_rows="2732" actual_time="1.795">
                                                          <child_nodes>
                                                            <node op_name="Table Scan" estimated_rows="378865" estimated_cost="105.904" actual_rows="373242" actual_time="1.728">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.112" actual_rows="1000003" actual_time="4.83">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="5.252">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_number>9</test_number>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.068</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.406" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.406" actual_rows="102" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.378" actual_rows="102" actual_time="2.05">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="106.378" actual_rows="3191" actual_time="2.05">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.375" actual_rows="3191" actual_time="2.05">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.346" actual_rows="3191" actual_time="1.956">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="1.641">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.315</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="631174" estimated_cost="324.209" actual_rows="102" actual_time="0.326">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="631174" estimated_cost="324.047" actual_rows="102" actual_time="6.306">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="321.987" actual_rows="1000003" actual_time="6.01">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="321.683" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="321.677" actual_rows="1000003" actual_time="9.49">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.055" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.055" actual_rows="49" actual_time="1.952">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1600" estimated_cost="106.055" actual_rows="1207" actual_time="1.952">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.053" actual_rows="1207" actual_time="1.952">
                                                  <child_nodes>
                                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.024" actual_rows="1207" actual_time="1.854">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="125601" estimated_cost="105.904" actual_rows="122500" actual_time="1.827">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="214.101" actual_rows="1000003" actual_time="7.32">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.468" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.468" actual_rows="102" actual_time="2.026">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.468" actual_rows="3181" actual_time="2.025">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.466" actual_rows="3181" actual_time="2.017">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.437" actual_rows="3181" actual_time="1.892">
                                                          <child_nodes>
                                                            <node op_name="Table Scan" estimated_rows="874356" estimated_cost="105.904" actual_rows="877454" actual_time="1.73">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.112" actual_rows="1000003" actual_time="5.049">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000003" actual_time="5.584">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_number>10</test_number>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 80
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>1.139</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="19" estimated_cost="107.457" actual_rows="20" actual_time="1.545">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="19" estimated_cost="107.429" actual_rows="20" actual_time="31.169">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="31.158">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="31.14">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="24.126">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="1.819">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 80 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>1.501</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="107.928" actual_rows="20" actual_time="1.606">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="192345" estimated_cost="107.434" actual_rows="20" actual_time="28.805">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="192345" estimated_cost="107.429" actual_rows="190001" actual_time="28.798">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="28.776">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="28.753">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="28.738">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="22.724">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="1.285">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_number>11</test_number>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>5</distinct_query_plans>
          <successfully_completed_variants>6</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>20.422</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="741258" estimated_cost="113.795" actual_rows="107" actual_time="20.737">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="741258" estimated_cost="111.976" actual_rows="107" actual_time="541.199">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="741258" estimated_cost="111.954" actual_rows="740001" actual_time="541.168">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="741258" estimated_cost="111.951" actual_rows="740001" actual_time="541.074">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="741258" estimated_cost="111.95" actual_rows="740001" actual_time="540.988">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="741258" estimated_cost="111.949" actual_rows="740001" actual_time="540.934">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.802" actual_rows="740001" actual_time="83.393">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740001" actual_time="1.045">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>25.644</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74125.8" estimated_cost="113.028" actual_rows="107" actual_time="29.105">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="74125.8" estimated_cost="112.82" actual_rows="107" actual_time="826.221">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="741258" estimated_cost="112.798" actual_rows="740003" actual_time="826.182">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="74" estimated_cost="112.099" actual_rows="108" actual_time="825.557">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="741258" estimated_cost="112.012" actual_rows="740003" actual_time="765.036">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="741258" estimated_cost="111.924" actual_rows="740003" actual_time="764.901">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.777" actual_rows="740003" actual_time="97.256">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740003" actual_time="0.855">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="10017" estimated_cost="0.017476" actual_rows="740003" actual_time="0.565">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.008738" actual_rows="76" actual_time="0.288">
                                  <child_nodes>
                                    <node op_name="Table Spool" estimated_rows="10017" estimated_cost="0" actual_rows="740003" actual_time="0.229">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="10017" estimated_cost="0" actual_rows="740003" actual_time="0.2">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and
    t2.local_search is not null
    order by t2.local_search desc
) t</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>9.819</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="167.105" estimated_cost="404.074" actual_rows="107" actual_time="10.263">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="167.105" estimated_cost="404.045" actual_rows="107" actual_time="231.918">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="74" estimated_cost="106.196" actual_rows="76" actual_time="2.235">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1184" estimated_cost="106.194" actual_rows="2366" actual_time="2.225">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1184" estimated_cost="106.165" actual_rows="2366" actual_time="2.139">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740003" actual_time="2.01">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="2.25817" estimated_cost="297.849" actual_rows="107" actual_time="228.559">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="2.25817" estimated_cost="297.849" actual_rows="181" actual_time="228.559">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="10000.1" estimated_cost="187.242" actual_rows="740001" actual_time="24.197">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_number>d</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>18.523</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74" estimated_cost="111.983" actual_rows="107" actual_time="17.211">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="74" estimated_cost="111.954" actual_rows="107" actual_time="471.335">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="741258" estimated_cost="111.953" actual_rows="740001" actual_time="471.293">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="741258" estimated_cost="111.949" actual_rows="740001" actual_time="471.224">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.802" actual_rows="740001" actual_time="94.517">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740001" actual_time="1.12">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_number>e</query_variant_number>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>16.302</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74" estimated_cost="111.983" actual_rows="107" actual_time="15.316">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="74" estimated_cost="111.954" actual_rows="107" actual_time="417.435">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="741258" estimated_cost="111.953" actual_rows="740001" actual_time="417.396">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="741258" estimated_cost="111.949" actual_rows="740001" actual_time="417.327">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.802" actual_rows="740001" actual_time="85.172">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740001" actual_time="1.751">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_number>f</query_variant_number>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>1.354</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="741258" estimated_cost="217.066" actual_rows="107" actual_time="1.537">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="741258" estimated_cost="215.247" actual_rows="107" actual_time="49.092">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="106.108" actual_rows="740003" actual_time="2.741">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740003" actual_time="2.789">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.802" actual_rows="740001" actual_time="40.544">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740001" actual_time="3.672">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_number>g</query_variant_number>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_number>h</query_variant_number>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_number>12</test_number>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select id, groupby, local_search, padding,
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>1.308</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="57703.7" estimated_cost="107.577" actual_rows="97" actual_time="2.237">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="57703.7" estimated_cost="107.409" actual_rows="97" actual_time="44.639">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="192345" estimated_cost="107.404" actual_rows="190003" actual_time="44.63">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="192345" estimated_cost="107.403" actual_rows="190003" actual_time="44.608">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="192345" estimated_cost="107.403" actual_rows="190003" actual_time="44.592">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.433" actual_rows="190003" actual_time="33.557">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190003" actual_time="1.31">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0.886</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="95" estimated_cost="253.601" actual_rows="97" actual_time="0.849">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="95" estimated_cost="253.572" actual_rows="97" actual_time="8.428">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="19" estimated_cost="106.036" actual_rows="21" actual_time="2.018">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="304" estimated_cost="106.036" actual_rows="610" actual_time="2.017">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="304" estimated_cost="106.007" actual_rows="610" actual_time="1.92">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190003" actual_time="1.888">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="5" estimated_cost="147.536" actual_rows="97" actual_time="6.402">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="10000.1" estimated_cost="126.737" actual_rows="190003" actual_time="6.334">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_number>13</test_number>
          <test_name>Redudant GROUP BY</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.061</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.963" actual_rows="1" actual_time="0.059">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2" estimated_cost="105.963" actual_rows="32" actual_time="0.059">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="2" estimated_cost="105.934" actual_rows="32" actual_time="1.831">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="1.831">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.064</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="105.963" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.963" actual_rows="1" actual_time="0.063">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.963" actual_rows="32" actual_time="0.063">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.934" actual_rows="32" actual_time="1.956">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="1.956">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_number>14</test_number>
          <test_name>Redundant GROUP BY in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.077</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="99" actual_time="0.064">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="100" actual_time="0.064">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="2.4601" estimated_cost="106.005" actual_rows="2503" actual_time="1.918">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="1.864">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="99" actual_time="0.076">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="100" actual_time="0.076">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="2.4601" estimated_cost="106.005" actual_rows="2503" actual_time="2.331">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="2.283">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_number>15</test_number>
          <test_name>Redundant correlated subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Correlated subquery</query_variant_name>
              <query_processing_time>0.072</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="99" actual_time="0.064">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="100" actual_time="0.064">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="2.4601" estimated_cost="106.005" actual_rows="2510" actual_time="1.952">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="1.896">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Independent subquery</query_variant_name>
              <query_processing_time>0.073</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="99" actual_time="0.062">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2.4601" estimated_cost="106.033" actual_rows="100" actual_time="0.062">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="2.4601" estimated_cost="106.005" actual_rows="2481" actual_time="1.867">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="11691.6" estimated_cost="105.904" actual_rows="10000" actual_time="1.815">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_number>16</test_number>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (order by groupby desc, local_search desc)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>7.137</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="5.711">
                  <child_nodes>
                    <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="5.711">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="5.711">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="5.711">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="2230" actual_time="169.791">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.249">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id,
       t.groupby,
       t.local_search,
       t.padding,
       row_number() over (order by groupby desc, local_search desc)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0.084</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                  <child_nodes>
                    <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="424" actual_time="2.409">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.837">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_number>17</test_number>
          <test_name>Redundant conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1
group by groupby
</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Conditional aggregation</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="99.9819" estimated_cost="105.999" actual_rows="101" actual_time="0.067">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.97" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.97" actual_rows="101" actual_time="2.05">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.97" actual_rows="575" actual_time="2.05">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.969" actual_rows="575" actual_time="2.05">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="918.757" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.984">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(1) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 
group by groupby</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without CASE</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="99.9819" estimated_cost="105.993" actual_rows="101" actual_time="0.062">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="101" actual_time="1.89">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="1.89">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.962" actual_rows="575" actual_time="1.89">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.824">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>227</test_id>
          <test_number>18</test_number>
          <test_name>All construct versus aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.local_search &gt;= all(
  select local_search
  from TestTable t2
  where t.groupby = t2.groupby  and local_search is not null
  ) and groupby &gt; 80 and local_search is not null</query>
              <query_variant_id>230</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>All construct</query_variant_name>
              <query_processing_time>0.719</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="213.337" actual_rows="20" actual_time="0.555">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="192345" estimated_cost="212.843" actual_rows="20" actual_time="17.665">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.025" actual_rows="190001" actual_time="2.232">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="2.161">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="14.504">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="4.067">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 80 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>231</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>1.605</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="19" estimated_cost="107.457" actual_rows="20" actual_time="0.97">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="19" estimated_cost="107.429" actual_rows="20" actual_time="24.633">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="24.629">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="24.61">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="20.793">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="1.12">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>255</test_id>
          <test_number>19</test_number>
          <test_name>Distinct pushdown</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select count(t.groupby) 
from (
  select distinct groupby
  from TestTable
) t</query>
              <query_variant_id>256</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex, Distinct in subquery</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="106.393" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="106.393" actual_rows="1" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.393" actual_rows="103" actual_time="0.067">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="2.05">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.364" actual_rows="3196" actual_time="2.05">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3196" actual_time="2.049">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3196" actual_time="1.952">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.817">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select count(distinct groupby) from TestTable</query>
              <query_variant_id>257</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple, Aggregation with distinct</query_variant_name>
              <query_processing_time>0.076</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="106.393" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="106.393" actual_rows="1" actual_time="0.063">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="106.393" actual_rows="103" actual_time="0.063">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="1.938">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="106.364" actual_rows="3200" actual_time="1.938">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3200" actual_time="1.924">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3200" actual_time="1.86">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.724">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>264</test_id>
          <test_number>20</test_number>
          <test_name>UNION vs JOIN</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>97</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby, sum(c1), sum(c2)
from
(
    select groupby, global_search c1, NULL c2
    from TestTable
    where local_search = 1
    union all
    select groupby, NULL c1, global_search c2
    from TestTable
    where local_search = 100
) t
group by groupby</query>
              <query_variant_id>265</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.121</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="211.929" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="211.929" actual_rows="101" actual_time="0.127">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="211.901" actual_rows="101" actual_time="0.157">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="986.82" estimated_cost="211.9" actual_rows="731" actual_time="0.157">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="986.82" estimated_cost="211.899" actual_rows="731" actual_time="0.157">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="986.82" estimated_cost="211.87" actual_rows="731" actual_time="3.88">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1478.92" estimated_cost="211.87" actual_rows="1141" actual_time="3.88">
                                          <child_nodes>
                                            <node op_name="Concatenation" estimated_rows="1478.92" estimated_cost="211.868" actual_rows="1141" actual_time="3.878">
                                              <child_nodes>
                                                <node op_name="Compute Scalar" estimated_rows="918.757" estimated_cost="105.934" actual_rows="0" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.9">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Compute Scalar" estimated_rows="560.163" estimated_cost="105.934" actual_rows="0" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="560.163" estimated_cost="105.904" actual_rows="566" actual_time="1.952">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select coalesce(t1.groupby, t2.groupby) groupby, t1.c1, t2.c2
from
(
    select groupby, sum(global_search) c1
    from TestTable
    where local_search = 1
    group by groupby
) t1
full join
(   
    select groupby, sum(global_search) c2
    from TestTable
    where local_search = 100
    group by groupby
) t2 on t1.groupby= t2.groupby</query>
              <query_variant_id>266</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>FULL JOIN</query_variant_name>
              <query_processing_time>0.132</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.9999" estimated_cost="211.957" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="99.9999" estimated_cost="211.957" actual_rows="101" actual_time="0.123">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="99.9999" estimated_cost="211.928" actual_rows="101" actual_time="3.842">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="99.9819" estimated_cost="105.964" actual_rows="101" actual_time="1.874">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="1.874">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.962" actual_rows="575" actual_time="1.863">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.813">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="99.5538" estimated_cost="105.964" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="99.5538" estimated_cost="105.964" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="99.5538" estimated_cost="105.964" actual_rows="99" actual_time="1.952">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="560.163" estimated_cost="105.964" actual_rows="566" actual_time="1.952">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="560.163" estimated_cost="105.962" actual_rows="566" actual_time="1.952">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="560.163" estimated_cost="105.904" actual_rows="566" actual_time="1.825">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_number>1</test_number>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having groupby is not null and sum(local_search) &lt; 1000000</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.188</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="7.14658" actual_rows="4" actual_time="0.19">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="7.14653" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="102" estimated_cost="7.14652" actual_rows="102" actual_time="0.19">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="7.11799" actual_rows="102" actual_time="3.571">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1632" estimated_cost="7.11793" actual_rows="3202" actual_time="3.571">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1632" estimated_cost="7.11552" actual_rows="3202" actual_time="3.57">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1632" estimated_cost="7.08659" actual_rows="3202" actual_time="5.608">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1000000" estimated_cost="6.68047" actual_rows="1000003" actual_time="5.335">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="1.97684" actual_rows="1000003" actual_time="1.611">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.213">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="1000008" actual_time="2.395">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.331">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.07</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="106.569" actual_rows="4" actual_time="0.073">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="16" estimated_cost="106.569" actual_rows="4" actual_time="0.073">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="106.54" actual_rows="4" actual_time="2.125">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="9708.77" estimated_cost="106.54" actual_rows="30001" actual_time="2.122">
                              <child_nodes>
                                <node op_name="Filter" estimated_rows="1" estimated_cost="106.508" actual_rows="5" actual_time="2.115">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.508" actual_rows="103" actual_time="2.115">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1648" estimated_cost="106.508" actual_rows="3199" actual_time="2.115">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.505" actual_rows="3199" actual_time="2.114">
                                                  <child_nodes>
                                                    <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.476" actual_rows="3199" actual_time="2.024">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.8">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="9708.77" estimated_cost="0.0295172" actual_rows="30001" actual_time="0.003">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_number>2</test_number>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>3</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search in (1, 500)
group by groupby
having count(distinct local_search) = 2
</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="3.0302" actual_rows="95" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9918" estimated_cost="3.03015" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9918" estimated_cost="3.03015" actual_rows="100" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="199.648" estimated_cost="3.02998" actual_rows="195" actual_time="0.002">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="915.833" estimated_cost="3.00412" actual_rows="916" actual_time="0.002">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="915.833" estimated_cost="0.0057709" actual_rows="919" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="915.831" estimated_cost="2.99452" actual_rows="916" actual_time="0.001">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 1 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.124</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="94.6555" estimated_cost="6.30475" actual_rows="95" actual_time="0.159">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="96.8563" estimated_cost="4.40514" actual_rows="95" actual_time="0.157">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.25298" actual_rows="103" actual_time="0.155">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.104">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="344.167" estimated_cost="1.13062" actual_rows="344" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00366058" actual_rows="344" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.12553" actual_rows="344" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search = 500
intersect
select groupby
from TestTable
where groupby is not null and local_search = 1</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="94.6556" estimated_cost="3.045" actual_rows="95" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Sort" estimated_rows="96.8564" estimated_cost="1.14668" actual_rows="95" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="344.167" estimated_cost="1.13062" actual_rows="343" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00366058" actual_rows="344" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="344.166" estimated_cost="1.12553" actual_rows="343" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="573" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="571.665" estimated_cost="1.87016" actual_rows="573" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_number>3</test_number>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.071</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10.3" estimated_cost="106.543" actual_rows="9" actual_time="0.078">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.543" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="103" estimated_cost="106.543" actual_rows="103" actual_time="0.078">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.514" actual_rows="103" actual_time="2.402">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1648" estimated_cost="106.514" actual_rows="3192" actual_time="2.402">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.512" actual_rows="3192" actual_time="2.402">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.483" actual_rows="3192" actual_time="2.306">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.023">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>8.052</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.51985" estimated_cost="3.3017" actual_rows="9" actual_time="8.02">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.25298" actual_rows="103" actual_time="0.161">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.109">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.048282" actual_rows="94" actual_time="7.858">
                      <child_nodes>
                        <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0374195" actual_rows="94" actual_time="7.858">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>7.675</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="3.3017" actual_rows="9" actual_time="7.92">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.25298" actual_rows="103" actual_time="0.159">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.109">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.048282" actual_rows="94" actual_time="7.76">
                      <child_nodes>
                        <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0374195" actual_rows="94" actual_time="7.76">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_number>4</test_number>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10.3" estimated_cost="106.543" actual_rows="9" actual_time="0.074">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.543" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="103" estimated_cost="106.543" actual_rows="103" actual_time="0.074">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.514" actual_rows="103" actual_time="2.243">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1648" estimated_cost="106.514" actual_rows="3198" actual_time="2.243">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.512" actual_rows="3198" actual_time="2.243">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.483" actual_rows="3198" actual_time="2.149">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.833">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0.07</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="106.543" actual_rows="9" actual_time="0.068">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.543" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="103" estimated_cost="106.543" actual_rows="103" actual_time="0.068">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.514" actual_rows="103" actual_time="2.082">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1648" estimated_cost="106.514" actual_rows="3192" actual_time="2.082">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.512" actual_rows="3192" actual_time="2.082">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.483" actual_rows="3192" actual_time="2.001">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.91" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.754">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_number>5</test_number>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select *
from 
(
    select id, 
           groupby, 
           local_search, 
           count(*) over (partition by groupby) ct
    from TestTable
) t
where local_search = 500</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0.35</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="344.167" estimated_cost="113.133" actual_rows="344" actual_time="0.372">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="344.167" estimated_cost="113.104" actual_rows="344" actual_time="9.898">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1000010" estimated_cost="113.074" actual_rows="1000008" actual_time="9.823">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="103" estimated_cost="112.131" actual_rows="135" actual_time="9.031">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="1000010" estimated_cost="112.013" actual_rows="1000008" actual_time="4.469">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1000010" estimated_cost="111.896" actual_rows="1000008" actual_time="4.309">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.177" actual_rows="1000008" actual_time="3.504">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="3.638">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="9708.82" estimated_cost="0.0235764" actual_rows="1000008" actual_time="0.686">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.012967" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0117882" actual_rows="103" actual_time="0.291">
                                      <child_nodes>
                                        <node op_name="Table Spool" estimated_rows="9708.82" estimated_cost="0" actual_rows="1000008" actual_time="0.239">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="9708.82" estimated_cost="0" actual_rows="1000008" actual_time="0.256">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby or 
               (b.groupby is null and a.groupby is null)
       ) ct
from TestTable a
where local_search = 500</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.081</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="344.167" estimated_cost="3.99313" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="344.167" estimated_cost="3.9931" actual_rows="344" actual_time="0.117">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="344.167" estimated_cost="1.13062" actual_rows="344" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00366058" actual_rows="344" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.12553" actual_rows="344" actual_time="0.001">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Spool" estimated_rows="1" estimated_cost="2.86103" actual_rows="344" actual_time="0.114">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="2.76898" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="2.76898" actual_rows="96" actual_time="0.111">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="9708.82" estimated_cost="2.19888" actual_rows="950006" actual_time="0.082">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_number>6</test_number>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby
</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.193</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="7.153" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="102" estimated_cost="7.15299" actual_rows="102" actual_time="0.184">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="7.12446" actual_rows="102" actual_time="3.131">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1632" estimated_cost="7.1244" actual_rows="3202" actual_time="3.13">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1632" estimated_cost="7.12199" actual_rows="3202" actual_time="3.129">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1632" estimated_cost="7.09304" actual_rows="3202" actual_time="5.37">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="6.68672" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1000000" estimated_cost="6.68047" actual_rows="1000003" actual_time="5.004">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="1.97684" actual_rows="1000003" actual_time="1.825">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.219">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="1000008" actual_time="1.804">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.294">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search = 2 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.595</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="16644.7" estimated_cost="9.31008" actual_rows="102" actual_time="0.705">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="16644.7" estimated_cost="9.27805" actual_rows="102" actual_time="21.619">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1022200" estimated_cost="8.79967" actual_rows="1000003" actual_time="21.384">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1022200" estimated_cost="8.48909" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1022200" estimated_cost="8.4827" actual_rows="1000003" actual_time="21.043">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="99" actual_time="0.196">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.9035" actual_rows="571" actual_time="0.196">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="1.90228" actual_rows="571" actual_time="0.196">
                                                  <child_nodes>
                                                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87369" actual_rows="571" actual_time="0.059">
                                                      <child_nodes>
                                                        <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="0.0319536" actual_rows="571" actual_time="0.033">
                                                          <child_nodes>
                                                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00337683" actual_rows="571" actual_time="0">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="571" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="6.44118" actual_rows="1000003" actual_time="20.671">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="101" actual_time="0.256">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.9035" actual_rows="575" actual_time="0.256">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="1.90228" actual_rows="575" actual_time="0.256">
                                                      <child_nodes>
                                                        <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87369" actual_rows="575" actual_time="0.067">
                                                          <child_nodes>
                                                            <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="0.0319536" actual_rows="575" actual_time="0.035">
                                                              <child_nodes>
                                                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00337683" actual_rows="575" actual_time="0">
                                                                  <child_nodes />
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.39979" actual_rows="1000003" actual_time="20.26">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.111">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_number>7</test_number>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from TestTable g1</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.092</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1315.75" estimated_cost="5.74766" actual_rows="103" actual_time="0.123">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1315.75" estimated_cost="5.71895" actual_rows="103" actual_time="3.527">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="21052.1" estimated_cost="5.6896" actual_rows="109" actual_time="3.515">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="21052.1" estimated_cost="5.65662" actual_rows="109" actual_time="0.713">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="5.18246" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="5.17621" actual_rows="1000008" actual_time="0.443">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.6848" estimated_cost="1.93406" actual_rows="3232" actual_time="0.072">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.9053" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.9053" actual_rows="101" actual_time="0.007">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="1.90491" actual_rows="575" actual_time="0.007">
                                                      <child_nodes>
                                                        <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.87491" actual_rows="575" actual_time="0.097">
                                                          <child_nodes>
                                                            <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87369" actual_rows="575" actual_time="0.096">
                                                              <child_nodes>
                                                                <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="0.0319536" actual_rows="575" actual_time="0.067">
                                                                  <child_nodes>
                                                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00337683" actual_rows="575" actual_time="0">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                                                                  <child_nodes />
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.152">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from (select distinct groupby from TestTable) g1</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct in subquery</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.71642" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="103" estimated_cost="3.71641" actual_rows="103" actual_time="0.061">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="103" estimated_cost="3.68789" actual_rows="103" actual_time="1.889">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.90352" actual_rows="101" actual_time="0.227">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.9035" actual_rows="575" actual_time="0.227">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="1.90228" actual_rows="575" actual_time="0.227">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87369" actual_rows="575" actual_time="0.066">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="571.667" estimated_cost="0.0319536" actual_rows="575" actual_time="0.034">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00337683" actual_rows="575" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="103" estimated_cost="1.78399" actual_rows="103" actual_time="1.631">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1648" estimated_cost="1.78156" actual_rows="109" actual_time="1.631">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="1.75282" actual_rows="109" actual_time="0.219">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.146">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_number>8</test_number>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.189</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="7.153" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="102" estimated_cost="7.15299" actual_rows="102" actual_time="0.222">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="7.12446" actual_rows="102" actual_time="3.734">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1632" estimated_cost="7.1244" actual_rows="3202" actual_time="3.734">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1632" estimated_cost="7.12199" actual_rows="3202" actual_time="3.733">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1632" estimated_cost="7.09304" actual_rows="3202" actual_time="6.598">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="6.68672" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1000000" estimated_cost="6.68047" actual_rows="1000003" actual_time="6.168">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="1.97684" actual_rows="1000003" actual_time="2.547">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.231">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="1000008" actual_time="2.289">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.293">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.596</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="527536" estimated_cost="13.7513" actual_rows="102" actual_time="0.732">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="527536" estimated_cost="13.611" actual_rows="102" actual_time="18.647">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1018650" estimated_cost="11.8119" actual_rows="1000003" actual_time="18.395">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1018650" estimated_cost="11.5023" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1018650" estimated_cost="11.4959" actual_rows="1000003" actual_time="19.787">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="100.202" estimated_cost="2.62347" actual_rows="24" actual_time="0.477">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="100.202" estimated_cost="2.6227" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="100.202" estimated_cost="2.6227" actual_rows="24" actual_time="0.477">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="30061" estimated_cost="2.58818" actual_rows="30000" actual_time="0.466">
                                                  <child_nodes>
                                                    <node op_name="Hash Match" estimated_rows="30061" estimated_cost="2.55518" actual_rows="30000" actual_time="0.406">
                                                      <child_nodes>
                                                        <node op_name="Bitmap" estimated_rows="30061" estimated_cost="0.0879831" actual_rows="30000" actual_time="0.27">
                                                          <child_nodes>
                                                            <node op_name="Parallelism" estimated_rows="30061" estimated_cost="0.0879831" actual_rows="30000" actual_time="0.262">
                                                              <child_nodes>
                                                                <node op_name="Index Seek" estimated_rows="30061" estimated_cost="0.0540904" actual_rows="30000" actual_time="0.003">
                                                                  <child_nodes />
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="30035" actual_time="0.083">
                                                          <child_nodes>
                                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="30035" actual_time="0.336">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="8.73446" actual_rows="1000003" actual_time="19.195">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="101.65" estimated_cost="4.19681" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="101.65" estimated_cost="4.19681" actual_rows="102" actual_time="1.748">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1626.39" estimated_cost="4.19674" actual_rows="3204" actual_time="1.746">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1626.39" estimated_cost="4.19434" actual_rows="3204" actual_time="1.742">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1626.39" estimated_cost="4.16549" actual_rows="3204" actual_time="3.064">
                                                          <child_nodes>
                                                            <node op_name="Hash Match" estimated_rows="373198" estimated_cost="3.93879" actual_rows="373242" actual_time="2.944">
                                                              <child_nodes>
                                                                <node op_name="Bitmap" estimated_rows="373198" estimated_cost="0.739796" actual_rows="373242" actual_time="1.031">
                                                                  <child_nodes>
                                                                    <node op_name="Parallelism" estimated_rows="373198" estimated_cost="0.739796" actual_rows="373242" actual_time="0.932">
                                                                      <child_nodes>
                                                                        <node op_name="Index Seek" estimated_rows="373198" estimated_cost="0.644348" actual_rows="373242" actual_time="0.171">
                                                                          <child_nodes />
                                                                        </node>
                                                                      </child_nodes>
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="386790" actual_time="1.391">
                                                                  <child_nodes>
                                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="386790" actual_time="0.283">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.39979" actual_rows="1000003" actual_time="17.316">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.118">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_number>9</test_number>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.195</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="7.153" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="102" estimated_cost="7.15299" actual_rows="102" actual_time="0.191">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="7.12446" actual_rows="102" actual_time="3.633">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1632" estimated_cost="7.1244" actual_rows="3202" actual_time="3.633">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1632" estimated_cost="7.12199" actual_rows="3202" actual_time="3.632">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1632" estimated_cost="7.09304" actual_rows="3202" actual_time="5.618">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="6.68672" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1000000" estimated_cost="6.68047" actual_rows="1000003" actual_time="5.218">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="1.97684" actual_rows="1000003" actual_time="1.637">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.208">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="1000008" actual_time="2.327">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.323">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.714</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="646185" estimated_cost="16.8177" actual_rows="102" actual_time="0.793">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="646185" estimated_cost="16.6522" actual_rows="102" actual_time="18.71">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1016900" estimated_cost="14.5467" actual_rows="1000003" actual_time="18.476">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1016900" estimated_cost="14.2376" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1016900" estimated_cost="14.2313" actual_rows="1000003" actual_time="20.865">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100.726" estimated_cost="3.049" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="100.726" estimated_cost="3.049" actual_rows="49" actual_time="0.488">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1611.61" estimated_cost="3.04893" actual_rows="1567" actual_time="0.487">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1611.61" estimated_cost="3.04655" actual_rows="1567" actual_time="0.484">
                                                  <child_nodes>
                                                    <node op_name="Hash Match" estimated_rows="1611.61" estimated_cost="3.0177" actual_rows="1567" actual_time="0.582">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="122724" estimated_cost="2.92912" actual_rows="122500" actual_time="0.542">
                                                          <child_nodes>
                                                            <node op_name="Bitmap" estimated_rows="122724" estimated_cost="0.26431" actual_rows="122500" actual_time="0.3">
                                                              <child_nodes>
                                                                <node op_name="Parallelism" estimated_rows="122724" estimated_cost="0.26431" actual_rows="122500" actual_time="0.276">
                                                                  <child_nodes>
                                                                    <node op_name="Index Seek" estimated_rows="122724" estimated_cost="0.213794" actual_rows="122500" actual_time="0.02">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="124490" actual_time="0.109">
                                                              <child_nodes>
                                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="124490" actual_time="0.475">
                                                                  <child_nodes />
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="11.0443" actual_rows="1000003" actual_time="20.245">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="102.754" estimated_cost="6.50663" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="102.754" estimated_cost="6.50663" actual_rows="102" actual_time="2.867">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1644.07" estimated_cost="6.50656" actual_rows="3204" actual_time="2.867">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1644.07" estimated_cost="6.50414" actual_rows="3204" actual_time="2.867">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1644.07" estimated_cost="6.47529" actual_rows="3204" actual_time="5.097">
                                                          <child_nodes>
                                                            <node op_name="Hash Match" estimated_rows="877231" estimated_cost="5.97065" actual_rows="877454" actual_time="4.833">
                                                              <child_nodes>
                                                                <node op_name="Parallelism" estimated_rows="877231" estimated_cost="1.69672" actual_rows="877454" actual_time="1.485">
                                                                  <child_nodes>
                                                                    <node op_name="Index Seek" estimated_rows="877231" estimated_cost="1.51085" actual_rows="877454" actual_time="0.983">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="1000008" actual_time="1.944">
                                                                  <child_nodes>
                                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.221">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.39979" actual_rows="1000003" actual_time="17.242">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="1000003" actual_time="0.147">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_number>10</test_number>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 80
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.089</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="166.129" estimated_cost="10.3007" actual_rows="20" actual_time="0.075">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2099.01" estimated_cost="10.2716" actual_rows="20" actual_time="1.376">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="2099.01" estimated_cost="3.43085" actual_rows="765" actual_time="1.362">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="3.36247" actual_rows="21" actual_time="1.359">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="336" estimated_cost="3.36245" actual_rows="610" actual_time="1.358">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="336" estimated_cost="3.36147" actual_rows="610" actual_time="1.355">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="336" estimated_cost="3.3329" actual_rows="610" actual_time="1.757">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="190003" estimated_cost="3.24132" actual_rows="190003" actual_time="1.709">
                                              <child_nodes>
                                                <node op_name="Bitmap" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.553">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.518">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.329531" actual_rows="190003" actual_time="0.049">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="197560" actual_time="0.931">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="197560" actual_time="0.211">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="99.9526" estimated_cost="0.0678401" actual_rows="765" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="166.129" estimated_cost="6.84024" actual_rows="20" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 80 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>1.614</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="190003" estimated_cost="107.903" actual_rows="20" actual_time="1.383">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="190003" estimated_cost="107.416" actual_rows="20" actual_time="32.931">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="190003" estimated_cost="107.41" actual_rows="190001" actual_time="32.926">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="190003" estimated_cost="107.41" actual_rows="190001" actual_time="32.901">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="190003" estimated_cost="107.409" actual_rows="190001" actual_time="32.875">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="190003" estimated_cost="107.409" actual_rows="190001" actual_time="32.866">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.453" actual_rows="190001" actual_time="27.156">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190001" actual_time="1.86">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_number>11</test_number>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>6</distinct_query_plans>
          <successfully_completed_variants>7</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>18.745</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="740002" estimated_cost="113.782" actual_rows="107" actual_time="17.778">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="740002" estimated_cost="111.966" actual_rows="107" actual_time="509.418">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="740002" estimated_cost="111.943" actual_rows="740001" actual_time="509.382">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="740002" estimated_cost="111.941" actual_rows="740001" actual_time="509.29">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740002" estimated_cost="111.94" actual_rows="740001" actual_time="509.201">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="740002" estimated_cost="111.939" actual_rows="740001" actual_time="509.146">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="740002" estimated_cost="107.799" actual_rows="740001" actual_time="91.439">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="740002" estimated_cost="105.904" actual_rows="740001" actual_time="1.018">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>24.403</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74000.3" estimated_cost="113.016" actual_rows="107" actual_time="27.125">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="74000.3" estimated_cost="112.808" actual_rows="107" actual_time="774.766">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="740003" estimated_cost="112.786" actual_rows="740003" actual_time="774.727">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="76" estimated_cost="112.088" actual_rows="108" actual_time="774.035">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740003" estimated_cost="112.001" actual_rows="740003" actual_time="629.701">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="740003" estimated_cost="111.914" actual_rows="740003" actual_time="629.564">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="107.774" actual_rows="740003" actual_time="104.208">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="740003" estimated_cost="105.904" actual_rows="740003" actual_time="0.984">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="9736.88" estimated_cost="0.0174464" actual_rows="740003" actual_time="0.629">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00872322" actual_rows="76" actual_time="0.354">
                                  <child_nodes>
                                    <node op_name="Table Spool" estimated_rows="9736.88" estimated_cost="0" actual_rows="740003" actual_time="0.295">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="9736.88" estimated_cost="0" actual_rows="740003" actual_time="0.199">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and
    t2.local_search is not null
    order by t2.local_search desc
) t</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>1.827</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="158.489" estimated_cost="49.9087" actual_rows="107" actual_time="2.186">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="158.489" estimated_cost="49.8798" actual_rows="107" actual_time="20.934">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="76" estimated_cost="1.32852" actual_rows="76" actual_time="0.495">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1216" estimated_cost="1.3266" actual_rows="101" actual_time="0.493">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1216" estimated_cost="1.29791" actual_rows="101" actual_time="0.276">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="740003" estimated_cost="1.27475" actual_rows="740003" actual_time="0.214">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="2.08538" estimated_cost="48.5512" actual_rows="107" actual_time="20.421">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="214.794" estimated_cost="48.5434" actual_rows="181" actual_time="20.421">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="214.794" estimated_cost="0.0333664" actual_rows="9258842" actual_time="2.937">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="2.08538" estimated_cost="49.8798" actual_rows="181" actual_time="14.526">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_number>d</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.131</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="160.714" estimated_cost="30.5134" actual_rows="107" actual_time="0.151">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="7596.4" estimated_cost="30.4841" actual_rows="107" actual_time="3.27">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="7596.4" estimated_cost="6.16526" actual_rows="3998" actual_time="3.235">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="76" estimated_cost="5.91246" actual_rows="76" actual_time="3.223">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1216" estimated_cost="5.91242" actual_rows="2370" actual_time="3.221">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1216" estimated_cost="5.91049" actual_rows="2370" actual_time="3.219">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1216" estimated_cost="5.88175" actual_rows="2370" actual_time="4.294">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="740003" estimated_cost="5.57659" actual_rows="740003" actual_time="4.117">
                                              <child_nodes>
                                                <node op_name="Bitmap" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.513">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.351">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="740003" estimated_cost="1.27475" actual_rows="740003" actual_time="0.398">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="742297" actual_time="2.577">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="742297" actual_time="0.336">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="99.9526" estimated_cost="0.250813" actual_rows="3998" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="160.714" estimated_cost="24.3168" actual_rows="107" actual_time="0.007">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_number>e</query_variant_number>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0.141</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="160.714" estimated_cost="30.5134" actual_rows="107" actual_time="0.126">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="7596.4" estimated_cost="30.4841" actual_rows="107" actual_time="2.437">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="7596.4" estimated_cost="6.16526" actual_rows="3998" actual_time="2.404">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="76" estimated_cost="5.91246" actual_rows="76" actual_time="2.392">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1216" estimated_cost="5.91242" actual_rows="2370" actual_time="2.39">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1216" estimated_cost="5.91049" actual_rows="2370" actual_time="2.385">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1216" estimated_cost="5.88175" actual_rows="2370" actual_time="3.478">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="740003" estimated_cost="5.57659" actual_rows="740003" actual_time="3.312">
                                              <child_nodes>
                                                <node op_name="Bitmap" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.515">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.359">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="740003" estimated_cost="1.27475" actual_rows="740003" actual_time="0.414">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="742297" actual_time="1.757">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="742297" actual_time="0.299">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="99.9526" estimated_cost="0.250813" actual_rows="3998" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="160.714" estimated_cost="24.3168" actual_rows="107" actual_time="0.011">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_number>f</query_variant_number>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>2.313</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="740002" estimated_cost="116.7" actual_rows="107" actual_time="2.063">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="740002" estimated_cost="114.884" actual_rows="107" actual_time="64.14">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="5.75102" actual_rows="740003" actual_time="2.76">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="740003" estimated_cost="5.57659" actual_rows="740003" actual_time="3.844">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.525">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="740003" estimated_cost="1.4711" actual_rows="740003" actual_time="0.375">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="740003" estimated_cost="1.27475" actual_rows="740003" actual_time="0.398">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="742297" actual_time="2.265">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="742297" actual_time="0.346">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="740002" estimated_cost="107.799" actual_rows="740001" actual_time="54.222">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="740002" estimated_cost="105.904" actual_rows="740001" actual_time="1.534">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_number>g</query_variant_number>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_number>h</query_variant_number>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>29.911</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="740002" estimated_cost="119.871" actual_rows="107" actual_time="28.844">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="740002" estimated_cost="119.797" actual_rows="108" actual_time="28.844">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="740002" estimated_cost="116.083" actual_rows="2467" actual_time="724.134">
                          <child_nodes>
                            <node op_name="Sequence Project" estimated_rows="740002" estimated_cost="111.943" actual_rows="740001" actual_time="713.687">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740002" estimated_cost="111.941" actual_rows="740001" actual_time="713.56">
                                  <child_nodes>
                                    <node op_name="Segment" estimated_rows="740002" estimated_cost="111.94" actual_rows="740001" actual_time="713.464">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="740002" estimated_cost="111.939" actual_rows="740001" actual_time="713.397">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="740002" estimated_cost="107.799" actual_rows="740001" actual_time="63.555">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="740002" estimated_cost="105.904" actual_rows="740001" actual_time="2.794">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_number>12</test_number>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select id, groupby, local_search, padding,
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0.901</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="57000.9" estimated_cost="107.557" actual_rows="97" actual_time="1.35">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="57000.9" estimated_cost="107.391" actual_rows="97" actual_time="33.549">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="190003" estimated_cost="107.385" actual_rows="190003" actual_time="33.539">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="190003" estimated_cost="107.384" actual_rows="190003" actual_time="33.517">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="190003" estimated_cost="107.384" actual_rows="190003" actual_time="33.498">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.428" actual_rows="190003" actual_time="26.559">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190003" actual_time="1.925">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>1.293</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105" estimated_cost="33.6542" actual_rows="97" actual_time="1.613">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="105" estimated_cost="33.6255" actual_rows="97" actual_time="3.946">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="0.36488" actual_rows="21" actual_time="0.355">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="336" estimated_cost="0.364869" actual_rows="27" actual_time="0.355">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="336" estimated_cost="0.335479" actual_rows="27" actual_time="0.038">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.329531" actual_rows="190003" actual_time="0.026">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="5" estimated_cost="33.2605" actual_rows="97" actual_time="3.582">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="515" estimated_cost="33.2553" actual_rows="97" actual_time="3.582">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="515" estimated_cost="0.0191664" actual_rows="2114868" actual_time="0.506">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="5" estimated_cost="33.6255" actual_rows="97" actual_time="2.554">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_number>13</test_number>
          <test_name>Redudant GROUP BY</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>1.168</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.47847" actual_rows="1" actual_time="1.367">
                  <child_nodes>
                    <node op_name="Concatenation" estimated_rows="2" estimated_cost="3.47847" actual_rows="1" actual_time="1.367">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="1" estimated_cost="3.14295" actual_rows="0" actual_time="0.056">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="4" estimated_cost="3.14295" actual_rows="0" actual_time="0.056">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="4" estimated_cost="2.75292" actual_rows="4" actual_time="0.056">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0100073" actual_rows="0" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.335521" actual_rows="1" actual_time="1.31">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100.001" estimated_cost="0.335443" actual_rows="1" actual_time="1.31">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="100.001" estimated_cost="0.00355531" actual_rows="932516" actual_time="0.165">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.33147" actual_rows="1" actual_time="0.949">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>1.195</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.335522" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.335522" actual_rows="1" actual_time="1.289">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.335521" actual_rows="1" actual_time="1.289">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100.001" estimated_cost="0.335443" actual_rows="1" actual_time="1.289">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="100.001" estimated_cost="0.00355531" actual_rows="932516" actual_time="0.159">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.33147" actual_rows="1" actual_time="0.935">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_number>14</test_number>
          <test_name>Redundant GROUP BY in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>1.184</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.11675" estimated_cost="0.702525" actual_rows="99" actual_time="1.438">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="211.677" estimated_cost="0.702423" actual_rows="100" actual_time="1.438">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="211.677" estimated_cost="0.00386238" actual_rows="933082" actual_time="0.179">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="2.11675" estimated_cost="0.697676" actual_rows="100" actual_time="1.029">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>1.079</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.342097" actual_rows="99" actual_time="1.29">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.33881" actual_rows="566" actual_time="1.289">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.335522" actual_rows="1" actual_time="1.289">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.335521" actual_rows="1" actual_time="1.289">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="100.001" estimated_cost="0.335443" actual_rows="1" actual_time="1.289">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="100.001" estimated_cost="0.00355531" actual_rows="932516" actual_time="0.16">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.33147" actual_rows="1" actual_time="0.933">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="566" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_number>15</test_number>
          <test_name>Redundant correlated subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Correlated subquery</query_variant_name>
              <query_processing_time>1.106</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.11675" estimated_cost="0.702525" actual_rows="99" actual_time="1.284">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="211.677" estimated_cost="0.702423" actual_rows="100" actual_time="1.284">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="211.677" estimated_cost="0.00386238" actual_rows="933082" actual_time="0.162">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="2.11675" estimated_cost="0.697676" actual_rows="100" actual_time="0.923">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Independent subquery</query_variant_name>
              <query_processing_time>1.095</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.342097" actual_rows="99" actual_time="1.307">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.33881" actual_rows="566" actual_time="1.307">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.335522" actual_rows="1" actual_time="1.306">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.335521" actual_rows="1" actual_time="1.306">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="100.001" estimated_cost="0.335443" actual_rows="1" actual_time="1.306">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="100.001" estimated_cost="0.00355531" actual_rows="932516" actual_time="0.161">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.33147" actual_rows="1" actual_time="0.947">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="566" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_number>16</test_number>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (order by groupby desc, local_search desc)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>6.358</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.029">
                  <child_nodes>
                    <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.029">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.029">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.029">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="2474" actual_time="175.152">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.456">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id,
       t.groupby,
       t.local_search,
       t.padding,
       row_number() over (order by groupby desc, local_search desc)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0.084</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.08">
                  <child_nodes>
                    <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.08">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.08">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.08">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="424" actual_time="2.476">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.926">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_number>17</test_number>
          <test_name>Redundant conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1
group by groupby
</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Conditional aggregation</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.89665" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.89665" actual_rows="101" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.89625" actual_rows="575" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="571.667" estimated_cost="1.87672" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(1) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 
group by groupby</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without CASE</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.89659" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.89659" actual_rows="101" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.8962" actual_rows="575" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>227</test_id>
          <test_number>18</test_number>
          <test_name>All construct versus aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.local_search &gt;= all(
  select local_search
  from TestTable t2
  where t.groupby = t2.groupby  and local_search is not null
  ) and groupby &gt; 80 and local_search is not null</query>
              <query_variant_id>230</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>All construct</query_variant_name>
              <query_processing_time>1.432</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="190003" estimated_cost="110.603" actual_rows="20" actual_time="1.517">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="190003" estimated_cost="110.116" actual_rows="20" actual_time="47.232">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="190002" estimated_cost="3.30729" actual_rows="190001" actual_time="1.896">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="190002" estimated_cost="3.24132" actual_rows="190001" actual_time="2.06">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.577">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.539">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.329531" actual_rows="190003" actual_time="0.05">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="1.97684" actual_rows="197558" actual_time="1.277">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="1.72151" actual_rows="197558" actual_time="0.248">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.453" actual_rows="190001" actual_time="43.886">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190001" actual_time="1.536">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 80 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>231</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.089</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="166.129" estimated_cost="10.3007" actual_rows="20" actual_time="0.1">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2099.01" estimated_cost="10.2716" actual_rows="20" actual_time="2.069">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="2099.01" estimated_cost="3.43085" actual_rows="765" actual_time="2.058">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="3.36247" actual_rows="21" actual_time="2.054">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="336" estimated_cost="3.36245" actual_rows="610" actual_time="2.053">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="336" estimated_cost="3.36147" actual_rows="610" actual_time="2.053">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="336" estimated_cost="3.3329" actual_rows="610" actual_time="2.487">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="190003" estimated_cost="3.24132" actual_rows="190003" actual_time="2.445">
                                              <child_nodes>
                                                <node op_name="Bitmap" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.573">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="190003" estimated_cost="0.401129" actual_rows="190003" actual_time="0.536">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.329531" actual_rows="190003" actual_time="0.052">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.97684" actual_rows="197560" actual_time="1.658">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="197560" actual_time="0.247">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="99.9526" estimated_cost="0.0678401" actual_rows="765" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="166.129" estimated_cost="6.84024" actual_rows="20" actual_time="0.002">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>255</test_id>
          <test_number>19</test_number>
          <test_name>Distinct pushdown</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select count(t.groupby) 
from (
  select distinct groupby
  from TestTable
) t</query>
              <query_variant_id>256</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex, Distinct in subquery</query_variant_name>
              <query_processing_time>0.122</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.25304" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.25304" actual_rows="1" actual_time="0.158">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.25298" actual_rows="103" actual_time="0.158">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.108">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select count(distinct groupby) from TestTable</query>
              <query_variant_id>257</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple, Aggregation with distinct</query_variant_name>
              <query_processing_time>0.122</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.25304" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.25304" actual_rows="1" actual_time="0.158">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.25298" actual_rows="103" actual_time="0.158">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.108">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>264</test_id>
          <test_number>20</test_number>
          <test_name>UNION vs JOIN</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>98</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby, sum(c1), sum(c2)
from
(
    select groupby, global_search c1, NULL c2
    from TestTable
    where local_search = 1
    union all
    select groupby, NULL c1, global_search c2
    from TestTable
    where local_search = 100
) t
group by groupby</query>
              <query_variant_id>265</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102.005" estimated_cost="3.54613" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="102.005" estimated_cost="3.54613" actual_rows="101" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Concatenation" estimated_rows="1071.83" estimated_cost="3.51914" actual_rows="1141" actual_time="0.003">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="571.667" estimated_cost="1.87672" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="500.167" estimated_cost="1.64231" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="500.167" estimated_cost="1.64226" actual_rows="566" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="500.167" estimated_cost="0.0039169" actual_rows="566" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.63626" actual_rows="566" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select coalesce(t1.groupby, t2.groupby) groupby, t1.c1, t2.c2
from
(
    select groupby, sum(global_search) c1
    from TestTable
    where local_search = 1
    group by groupby
) t1
full join
(   
    select groupby, sum(global_search) c2
    from TestTable
    where local_search = 100
    group by groupby
) t2 on t1.groupby= t2.groupby</query>
              <query_variant_id>266</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>FULL JOIN</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="101.945" estimated_cost="3.56362" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="101.945" estimated_cost="3.56361" actual_rows="101" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.8966" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.6848" estimated_cost="1.89659" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.6848" estimated_cost="1.89659" actual_rows="101" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="571.667" estimated_cost="1.8962" actual_rows="575" actual_time="0.001">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.001">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                                              <child_nodes />
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Compute Scalar" estimated_rows="99.3484" estimated_cost="1.66098" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.3484" estimated_cost="1.66097" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.3484" estimated_cost="1.66097" actual_rows="99" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="500.167" estimated_cost="1.66062" actual_rows="566" actual_time="0.001">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="500.167" estimated_cost="1.64226" actual_rows="566" actual_time="0.001">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="500.167" estimated_cost="0.0039169" actual_rows="566" actual_time="0">
                                              <child_nodes />
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.63626" actual_rows="566" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_number>1</test_number>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having groupby is not null and sum(local_search) &lt; 1000000</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.048</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="2.58049" actual_rows="4" actual_time="0.055">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.58044" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.58043" actual_rows="102" actual_time="0.055">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.55191" actual_rows="102" actual_time="1.604">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.55185" actual_rows="782" actual_time="1.604">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.54948" actual_rows="782" actual_time="1.604">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.52056" actual_rows="782" actual_time="0.384">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.166">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.147</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="5.2907" actual_rows="4" actual_time="0.144">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="1" estimated_cost="5.2622" actual_rows="4" actual_time="1.941">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="38" actual_time="1.634">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.633">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.318">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.149">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.71688" actual_rows="5" actual_time="0.277">
                          <child_nodes>
                            <node op_name="Filter" estimated_rows="1" estimated_cost="2.68834" actual_rows="5" actual_time="2.178">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68834" actual_rows="103" actual_time="2.178">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68827" actual_rows="784" actual_time="2.178">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.6859" actual_rows="784" actual_time="2.178">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65698" actual_rows="784" actual_time="0.505">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.211">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_number>2</test_number>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>3</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search in (1, 500)
group by groupby
having count(distinct local_search) = 2
</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="0.0188343" actual_rows="95" actual_time="0">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9815" estimated_cost="0.0187863" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9815" estimated_cost="0.0187863" actual_rows="100" actual_time="0">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="99.9827" estimated_cost="0.0186763" actual_rows="195" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.9827" estimated_cost="0.00627881" actual_rows="195" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="915.833" estimated_cost="0.0057709" actual_rows="916" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 1 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.189</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="96.2069" estimated_cost="9.70389" actual_rows="95" actual_time="0.229">
                  <child_nodes>
                    <node op_name="Sort" estimated_rows="100" estimated_cost="9.6833" actual_rows="102" actual_time="0.228">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="100" estimated_cost="9.6709" actual_rows="103" actual_time="0.228">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.108">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Merge Join" estimated_rows="96.2069" estimated_cost="0.0145623" actual_rows="95" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00465667" actual_rows="101" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Stream Aggregate" estimated_rows="96.5944" estimated_cost="0.00388096" actual_rows="96" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00366058" actual_rows="344" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search = 500
intersect
select groupby
from TestTable
where groupby is not null and local_search = 1</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="96.2069" estimated_cost="0.0145623" actual_rows="95" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00465667" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="573" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Stream Aggregate" estimated_rows="96.5944" estimated_cost="0.00388096" actual_rows="95" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00366058" actual_rows="343" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_number>3</test_number>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.073</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10" estimated_cost="2.7232" actual_rows="9" actual_time="0.082">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.72315" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.72314" actual_rows="103" actual_time="0.082">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.69461" actual_rows="103" actual_time="2.431">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.69455" actual_rows="784" actual_time="2.429">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.69218" actual_rows="784" actual_time="2.417">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.66323" actual_rows="784" actual_time="0.577">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.09073" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.207">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.125</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.6061" actual_rows="9" actual_time="0.135">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.5776" actual_rows="9" actual_time="1.902">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.57">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.57">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.389">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.188">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.0325985" actual_rows="94" actual_time="0.322">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0284592" actual_rows="94" actual_time="0.322">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0.139</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.6061" actual_rows="9" actual_time="0.136">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.5776" actual_rows="9" actual_time="1.894">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.496">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.491">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.286">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.131">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.0325985" actual_rows="94" actual_time="0.387">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0284592" actual_rows="94" actual_time="0.387">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_number>4</test_number>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0.074</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10" estimated_cost="2.7232" actual_rows="9" actual_time="0.082">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.72315" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.72314" actual_rows="103" actual_time="0.082">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.69461" actual_rows="103" actual_time="2.53">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.69455" actual_rows="784" actual_time="2.53">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.69218" actual_rows="784" actual_time="2.53">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.66323" actual_rows="784" actual_time="0.573">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.09073" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.204">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="2.72309" actual_rows="9" actual_time="0.069">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.72304" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.72303" actual_rows="103" actual_time="0.069">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.69451" actual_rows="103" actual_time="2.114">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.69445" actual_rows="784" actual_time="2.114">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.69208" actual_rows="784" actual_time="2.114">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.66323" actual_rows="784" actual_time="0.411">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.09073" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.163">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_number>5</test_number>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select *
from 
(
    select id, 
           groupby, 
           local_search, 
           count(*) over (partition by groupby) ct
    from TestTable
) t
where local_search = 500</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0.387</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="344.167" estimated_cost="113.133" actual_rows="344" actual_time="0.407">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="344.167" estimated_cost="113.104" actual_rows="344" actual_time="10.615">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1000010" estimated_cost="113.074" actual_rows="1000008" actual_time="10.543">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="100" estimated_cost="112.131" actual_rows="135" actual_time="9.748">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="1000010" estimated_cost="112.013" actual_rows="1000008" actual_time="4.409">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1000010" estimated_cost="111.896" actual_rows="1000008" actual_time="4.245">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.177" actual_rows="1000008" actual_time="3.422">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="3.554">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="10000.1" estimated_cost="0.0235763" actual_rows="1000008" actual_time="0.698">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.012967" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0117882" actual_rows="103" actual_time="0.304">
                                      <child_nodes>
                                        <node op_name="Table Spool" estimated_rows="10000.1" estimated_cost="0" actual_rows="1000008" actual_time="0.246">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="10000.1" estimated_cost="0" actual_rows="1000008" actual_time="0.255">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby or 
               (b.groupby is null and a.groupby is null)
       ) ct
from TestTable a
where local_search = 500</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.072</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="344.167" estimated_cost="3.87525" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="344.167" estimated_cost="3.87521" actual_rows="344" actual_time="0.082">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="344.167" estimated_cost="3.84662" actual_rows="344" actual_time="2.297">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68799" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68799" actual_rows="103" actual_time="2.05">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68793" actual_rows="784" actual_time="2.05">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.68556" actual_rows="784" actual_time="2.05">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65672" actual_rows="784" actual_time="0.495">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.213">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="344.167" estimated_cost="1.15822" actual_rows="344" actual_time="0.233">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="344.167" estimated_cost="1.12877" actual_rows="344" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="344.167" estimated_cost="0.00315847" actual_rows="344" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.12553" actual_rows="344" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_number>6</test_number>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby
</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.58691" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.5869" actual_rows="102" actual_time="0.07">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.55838" actual_rows="102" actual_time="2.146">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="2.55831" actual_rows="782" actual_time="2.146">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.55594" actual_rows="782" actual_time="2.146">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.527" actual_rows="782" actual_time="0.471">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.12073" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.208">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search = 2 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.196</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="16333.6" estimated_cost="6.04107" actual_rows="102" actual_time="0.217">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="16333.6" estimated_cost="6.00911" actual_rows="102" actual_time="6.677">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1004000" estimated_cost="5.53897" actual_rows="1000003" actual_time="6.393">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1004000" estimated_cost="5.23341" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1004000" estimated_cost="5.22714" actual_rows="1000003" actual_time="1.027">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="99.5988" estimated_cost="0.033476" actual_rows="3168" actual_time="0.046">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="99" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="571" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="3.66859" actual_rows="1000003" actual_time="0.644">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.5988" estimated_cost="0.033476" actual_rows="3232" actual_time="0.032">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="101" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.267">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_number>7</test_number>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from TestTable g1</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.096</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1278.03" estimated_cost="4.2082" actual_rows="103" actual_time="0.116">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1278.03" estimated_cost="4.17949" actual_rows="103" actual_time="3.525">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="20448.5" estimated_cost="4.15048" actual_rows="784" actual_time="3.524">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="20448.5" estimated_cost="4.11763" actual_rows="784" actual_time="0.892">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="3.64484" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="3.63859" actual_rows="1000008" actual_time="0.531">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.5988" estimated_cost="0.033476" actual_rows="3232" actual_time="0.037">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="101" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.209">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from (select distinct groupby from TestTable) g1</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct in subquery</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.59447" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.59446" actual_rows="103" actual_time="0.048">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="100" estimated_cost="2.56594" actual_rows="103" actual_time="1.251">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.236">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.23">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.265">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.12">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.0209489" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0209489" actual_rows="100" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.0207777" actual_rows="573" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_number>8</test_number>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.58691" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.5869" actual_rows="102" actual_time="0.078">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.55838" actual_rows="102" actual_time="2.415">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="2.55831" actual_rows="782" actual_time="2.415">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.55594" actual_rows="782" actual_time="2.402">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.527" actual_rows="782" actual_time="0.489">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.12073" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.189">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.115</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="515492" estimated_cost="8.7134" actual_rows="102" actual_time="0.144">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="515492" estimated_cost="8.57563" actual_rows="102" actual_time="3.663">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="6.81528" actual_rows="1000003" actual_time="3.308">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="6.51083" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="6.50458" actual_rows="1000003" actual_time="3.307">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.132724" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="100" estimated_cost="0.132724" actual_rows="24" actual_time="0.203">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="30061" estimated_cost="0.0982036" actual_rows="30000" actual_time="0.192">
                                              <child_nodes>
                                                <node op_name="Index Seek" estimated_rows="30061" estimated_cost="0.0652015" actual_rows="30000" actual_time="0.003">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="4.85121" actual_rows="1000003" actual_time="2.752">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="1.03783" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="1.03783" actual_rows="102" actual_time="0.48">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1600" estimated_cost="1.03777" actual_rows="1532" actual_time="0.48">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="1.0354" actual_rows="1532" actual_time="0.48">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="1.00656" actual_rows="1532" actual_time="0.136">
                                                          <child_nodes>
                                                            <node op_name="Index Seek" estimated_rows="373198" estimated_cost="0.779903" actual_rows="373242" actual_time="0.054">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.29275" actual_rows="1000003" actual_time="1.693">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.614">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_number>9</test_number>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.053</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.58691" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.5869" actual_rows="102" actual_time="0.069">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.55838" actual_rows="102" actual_time="2.146">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1600" estimated_cost="2.55831" actual_rows="782" actual_time="2.146">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.55594" actual_rows="782" actual_time="2.146">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.527" actual_rows="782" actual_time="0.523">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="2.12073" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.212">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.141</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="630035" estimated_cost="10.6068" actual_rows="102" actual_time="0.163">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="630035" estimated_cost="10.4448" actual_rows="102" actual_time="3.437">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="8.38799" actual_rows="1000003" actual_time="3.08">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="8.08353" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="8.07728" actual_rows="1000003" actual_time="3.949">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.378073" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="0.378072" actual_rows="49" actual_time="0.335">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1600" estimated_cost="0.378009" actual_rows="199" actual_time="0.335">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="0.375638" actual_rows="199" actual_time="0.332">
                                                  <child_nodes>
                                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="0.346795" actual_rows="199" actual_time="0.032">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="122724" estimated_cost="0.258239" actual_rows="122500" actual_time="0.011">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="6.17858" actual_rows="1000003" actual_time="3.24">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.36519" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.36519" actual_rows="102" actual_time="1.128">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.36513" actual_rows="2812" actual_time="1.124">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.36276" actual_rows="2812" actual_time="1.122">
                                                      <child_nodes>
                                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.33392" actual_rows="2812" actual_time="0.716">
                                                          <child_nodes>
                                                            <node op_name="Index Seek" estimated_rows="877231" estimated_cost="1.82937" actual_rows="877454" actual_time="0.481">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.29275" actual_rows="1000003" actual_time="1.562">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.586">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_number>10</test_number>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 80
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.09</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="4.72747" actual_rows="20" actual_time="0.095">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="4.57331" actual_rows="20" actual_time="0.095">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="19" estimated_cost="4.51309" actual_rows="21" actual_time="0.095">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="192345" estimated_cost="3.11588" actual_rows="190003" actual_time="0.063">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="10.6305" estimated_cost="0.0592796" actual_rows="20" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.153321" actual_rows="20" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 80 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>1.747</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="107.928" actual_rows="20" actual_time="1.047">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="192345" estimated_cost="107.434" actual_rows="20" actual_time="26.951">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="192345" estimated_cost="107.429" actual_rows="190001" actual_time="26.943">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="26.919">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="26.895">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="192345" estimated_cost="107.428" actual_rows="190001" actual_time="26.879">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="22.482">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="1.365">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_number>11</test_number>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>5</distinct_query_plans>
          <successfully_completed_variants>6</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>19.879</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="741256" estimated_cost="113.795" actual_rows="107" actual_time="16.306">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="741256" estimated_cost="111.976" actual_rows="107" actual_time="454.779">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="741256" estimated_cost="111.954" actual_rows="740001" actual_time="454.75">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="741256" estimated_cost="111.951" actual_rows="740001" actual_time="454.651">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="741256" estimated_cost="111.95" actual_rows="740001" actual_time="454.567">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="741256" estimated_cost="111.949" actual_rows="740001" actual_time="454.51">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="741256" estimated_cost="107.802" actual_rows="740001" actual_time="91.084">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="741256" estimated_cost="105.904" actual_rows="740001" actual_time="1.149">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>25.396</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74125.8" estimated_cost="113.028" actual_rows="107" actual_time="25.118">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="74125.8" estimated_cost="112.82" actual_rows="107" actual_time="714.987">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="741258" estimated_cost="112.798" actual_rows="740003" actual_time="714.947">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="74" estimated_cost="112.099" actual_rows="108" actual_time="714.32">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="741258" estimated_cost="112.012" actual_rows="740003" actual_time="569.941">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="741258" estimated_cost="111.924" actual_rows="740003" actual_time="569.81">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="107.777" actual_rows="740003" actual_time="85.414">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="741258" estimated_cost="105.904" actual_rows="740003" actual_time="1.283">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="10017" estimated_cost="0.017476" actual_rows="740003" actual_time="0.566">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.008738" actual_rows="76" actual_time="0.288">
                                  <child_nodes>
                                    <node op_name="Table Spool" estimated_rows="10017" estimated_cost="0" actual_rows="740003" actual_time="0.226">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="10017" estimated_cost="0" actual_rows="740003" actual_time="0.197">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and
    t2.local_search is not null
    order by t2.local_search desc
) t</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0.885</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="156.641" estimated_cost="3.20211" actual_rows="107" actual_time="0.945">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="156.641" estimated_cost="3.17323" actual_rows="107" actual_time="6.915">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="74" estimated_cost="2.37638" actual_rows="76" actual_time="1.067">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1184" estimated_cost="2.37449" actual_rows="670" actual_time="1.063">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1184" estimated_cost="2.34581" actual_rows="670" actual_time="0.238">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="741258" estimated_cost="2.08448" actual_rows="740003" actual_time="0.129">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="2.11676" estimated_cost="0.796817" actual_rows="107" actual_time="5.828">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="2.11676" estimated_cost="0.796801" actual_rows="181" actual_time="5.828">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.11676" estimated_cost="0.0323974" actual_rows="181" actual_time="5.823">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.0236" actual_rows="181" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_number>d</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.064</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="201.979" estimated_cost="3.2142" actual_rows="107" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="3.18521" actual_rows="107" actual_time="1.817">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="201.979" estimated_cost="2.68873" actual_rows="107" actual_time="1.802">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="201.979" estimated_cost="2.68786" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="2.68786" actual_rows="107" actual_time="1.801">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="74" estimated_cost="2.45074" actual_rows="76" actual_time="1.792">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1184" estimated_cost="2.4507" actual_rows="670" actual_time="1.792">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1184" estimated_cost="2.44881" actual_rows="670" actual_time="1.788">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1184" estimated_cost="2.42007" actual_rows="670" actual_time="0.38">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="741258" estimated_cost="2.08448" actual_rows="740003" actual_time="0.184">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="2.72944" estimated_cost="0.23697" actual_rows="107" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.496433" actual_rows="107" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_number>e</query_variant_number>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0.054</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="201.979" estimated_cost="3.2142" actual_rows="107" actual_time="0.041">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="3.18521" actual_rows="107" actual_time="1.216">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="201.979" estimated_cost="2.68873" actual_rows="107" actual_time="1.2">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="201.979" estimated_cost="2.68786" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="2.68786" actual_rows="107" actual_time="1.198">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="74" estimated_cost="2.45074" actual_rows="76" actual_time="1.185">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1184" estimated_cost="2.4507" actual_rows="670" actual_time="1.185">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1184" estimated_cost="2.44881" actual_rows="670" actual_time="1.184">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1184" estimated_cost="2.42007" actual_rows="670" actual_time="0.251">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="741258" estimated_cost="2.08448" actual_rows="740003" actual_time="0.114">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="2.72944" estimated_cost="0.23697" actual_rows="107" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.496433" actual_rows="107" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_number>f</query_variant_number>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>2.883</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="741256" estimated_cost="113.247" actual_rows="107" actual_time="3.012">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="741256" estimated_cost="111.428" actual_rows="107" actual_time="96.155">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="741258" estimated_cost="2.28916" actual_rows="740003" actual_time="1.628">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="741258" estimated_cost="2.08448" actual_rows="740003" actual_time="0.198">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="741256" estimated_cost="107.802" actual_rows="740001" actual_time="82.252">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="741256" estimated_cost="105.904" actual_rows="740001" actual_time="1.979">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_number>g</query_variant_number>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_number>h</query_variant_number>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_number>12</test_number>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select id, groupby, local_search, padding,
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>1.582</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="57703.7" estimated_cost="107.577" actual_rows="97" actual_time="1.036">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="57703.7" estimated_cost="107.409" actual_rows="97" actual_time="28.564">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="192345" estimated_cost="107.404" actual_rows="190003" actual_time="28.555">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="192345" estimated_cost="107.403" actual_rows="190003" actual_time="28.533">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="192345" estimated_cost="107.403" actual_rows="190003" actual_time="28.515">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.433" actual_rows="190003" actual_time="24.003">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190003" actual_time="1.293">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>1.109</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="95" estimated_cost="4.89058" actual_rows="97" actual_time="1.156">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="19" estimated_cost="4.49382" actual_rows="21" actual_time="0.084">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="192345" estimated_cost="3.11588" actual_rows="190003" actual_time="0.061">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="5" estimated_cost="0.396369" actual_rows="97" actual_time="1.071">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="5" estimated_cost="0.396359" actual_rows="97" actual_time="1.071">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="5" estimated_cost="0.0175623" actual_rows="97" actual_time="1.07">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.609998" actual_rows="97" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_number>13</test_number>
          <test_name>Redudant GROUP BY</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.146</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="1.93413" actual_rows="1" actual_time="0.153">
                  <child_nodes>
                    <node op_name="Concatenation" estimated_rows="2" estimated_cost="1.93413" actual_rows="1" actual_time="0.153">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="1" estimated_cost="1.93052" actual_rows="0" actual_time="0.08">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1" estimated_cost="1.54434" actual_rows="0" actual_time="0.08">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.00361303" actual_rows="1" actual_time="0.073">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1" estimated_cost="1.54434" actual_rows="1" actual_time="0.073">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.076</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.00361423" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00361413" actual_rows="1" actual_time="0.069">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.00361303" actual_rows="1" actual_time="0.069">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.00354621" actual_rows="1" actual_time="0.069">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_number>14</test_number>
          <test_name>Redundant GROUP BY in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.531</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.29797" estimated_cost="0.0148218" actual_rows="99" actual_time="0.56">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2.29797" estimated_cost="0.0148215" actual_rows="100" actual_time="0.56">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="2.29797" estimated_cost="0.00389177" actual_rows="100" actual_time="0.559">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0108261" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.074</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0101887" actual_rows="99" actual_time="0.068">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00690141" actual_rows="99" actual_time="0.068">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00361413" actual_rows="1" actual_time="0.067">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.00361303" actual_rows="1" actual_time="0.067">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.00354621" actual_rows="1" actual_time="0.067">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_number>15</test_number>
          <test_name>Redundant correlated subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Correlated subquery</query_variant_name>
              <query_processing_time>0.52</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.29797" estimated_cost="0.0148218" actual_rows="99" actual_time="0.543">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2.29797" estimated_cost="0.0148215" actual_rows="100" actual_time="0.543">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="2.29797" estimated_cost="0.00389177" actual_rows="100" actual_time="0.542">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0108261" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Independent subquery</query_variant_name>
              <query_processing_time>0.074</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0101887" actual_rows="99" actual_time="0.072">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00690141" actual_rows="99" actual_time="0.071">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00361413" actual_rows="1" actual_time="0.071">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.00361303" actual_rows="1" actual_time="0.071">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.00354621" actual_rows="1" actual_time="0.071">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_number>16</test_number>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (order by groupby desc, local_search desc)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>6.471</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.056">
                  <child_nodes>
                    <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.056">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.056">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="6.056">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="2475" actual_time="170.877">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.426">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id,
       t.groupby,
       t.local_search,
       t.padding,
       row_number() over (order by groupby desc, local_search desc)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0.097</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sequence Project" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                  <child_nodes>
                    <node op_name="Segment" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="111.651" actual_rows="50" actual_time="0.077">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="50" estimated_cost="111.622" actual_rows="424" actual_time="2.406">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.893">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_number>17</test_number>
          <test_name>Redundant conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1
group by groupby
</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Conditional aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="0.00477101" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00477101" actual_rows="101" actual_time="0">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="571.667" estimated_cost="0.00437821" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(1) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 
group by groupby</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without CASE</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="0.00471384" actual_rows="101" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>227</test_id>
          <test_number>18</test_number>
          <test_name>All construct versus aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.local_search &gt;= all(
  select local_search
  from TestTable t2
  where t.groupby = t2.groupby  and local_search is not null
  ) and groupby &gt; 80 and local_search is not null</query>
              <query_variant_id>230</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>All construct</query_variant_name>
              <query_processing_time>0.645</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="192345" estimated_cost="109.492" actual_rows="20" actual_time="1.078">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="192345" estimated_cost="108.999" actual_rows="20" actual_time="33.783">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="2.18091" actual_rows="190001" actual_time="0.54">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="192345" estimated_cost="2.08448" actual_rows="190001" actual_time="0.092">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="192345" estimated_cost="106.458" actual_rows="190001" actual_time="28.19">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="192345" estimated_cost="105.904" actual_rows="190001" actual_time="2.044">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 80 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>231</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.091</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="4.72747" actual_rows="20" actual_time="0.097">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="201.979" estimated_cost="4.57331" actual_rows="20" actual_time="0.097">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="19" estimated_cost="4.51309" actual_rows="21" actual_time="0.097">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="192345" estimated_cost="3.11588" actual_rows="190003" actual_time="0.063">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="10.6305" estimated_cost="0.0592796" actual_rows="20" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.153321" actual_rows="20" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>255</test_id>
          <test_number>19</test_number>
          <test_name>Distinct pushdown</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select count(t.groupby) 
from (
  select distinct groupby
  from TestTable
) t</query>
              <query_variant_id>256</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex, Distinct in subquery</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="2.57359" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="2.57359" actual_rows="1" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.57353" actual_rows="103" actual_time="0.056">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.54502" actual_rows="103" actual_time="1.698">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.54497" actual_rows="784" actual_time="1.698">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.698">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.362">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.17">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select count(distinct groupby) from TestTable</query>
              <query_variant_id>257</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple, Aggregation with distinct</query_variant_name>
              <query_processing_time>0.033</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="2.57359" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="2.57359" actual_rows="1" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.57353" actual_rows="103" actual_time="0.056">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.54502" actual_rows="103" actual_time="1.699">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1600" estimated_cost="2.54497" actual_rows="784" actual_time="1.699">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.699">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.304">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.141">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>264</test_id>
          <test_number>20</test_number>
          <test_name>UNION vs JOIN</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>99</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby, sum(c1), sum(c2)
from
(
    select groupby, global_search c1, NULL c2
    from TestTable
    where local_search = 1
    union all
    select groupby, NULL c1, global_search c2
    from TestTable
    where local_search = 100
) t
group by groupby</query>
              <query_variant_id>265</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="3.54648" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100" estimated_cost="3.54648" actual_rows="101" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Concatenation" estimated_rows="1071.83" estimated_cost="3.51953" actual_rows="1141" actual_time="0.003">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="571.667" estimated_cost="1.87693" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="575" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="500.167" estimated_cost="1.64249" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="500.167" estimated_cost="1.64244" actual_rows="566" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="500.167" estimated_cost="0.00409844" actual_rows="566" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.63626" actual_rows="566" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select coalesce(t1.groupby, t2.groupby) groupby, t1.c1, t2.c2
from
(
    select groupby, sum(global_search) c1
    from TestTable
    where local_search = 1
    group by groupby
) t1
full join
(   
    select groupby, sum(global_search) c2
    from TestTable
    where local_search = 100
    group by groupby
) t2 on t1.groupby= t2.groupby</query>
              <query_variant_id>266</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>FULL JOIN</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.9969" estimated_cost="3.52612" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="99.9969" estimated_cost="3.52611" actual_rows="101" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="1.87728" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.5988" estimated_cost="1.87727" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.5988" estimated_cost="1.87727" actual_rows="101" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="575" actual_time="0.001">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Compute Scalar" estimated_rows="99.2211" estimated_cost="1.6428" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.2211" estimated_cost="1.64279" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="99.2211" estimated_cost="1.64279" actual_rows="99" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="500.167" estimated_cost="1.64244" actual_rows="566" actual_time="0.001">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="500.167" estimated_cost="0.00409844" actual_rows="566" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.63626" actual_rows="566" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>38</test_id>
          <test_number>1</test_number>
          <test_name>HAVING vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having groupby is not null and sum(local_search) &lt; 1000000</query>
              <query_variant_id>39</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.186</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="3.71598" actual_rows="4" actual_time="0.227">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="3.71593" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="3.71593" actual_rows="102" actual_time="0.227">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="3.11588" actual_rows="1000003" actual_time="0.12">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (select distinct groupby from TestTable) t
where 1000000 &gt; (
  select sum(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
)</query>
              <query_variant_id>40</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.192</query_processing_time>
              <result_size>4</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.79465" actual_rows="4" actual_time="0.228">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="9708.77" estimated_cost="3.78979" actual_rows="30001" actual_time="0.225">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="3.71599" actual_rows="5" actual_time="0.22">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.71594" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.71594" actual_rows="103" actual_time="0.22">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.114">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="9708.77" estimated_cost="0.0332209" actual_rows="30001" actual_time="0.003">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>41</test_id>
          <test_number>2</test_number>
          <test_name>Property groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>3</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search in (1, 500)
group by groupby
having count(distinct local_search) = 2
</query>
              <query_variant_id>42</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="3.99672" actual_rows="95" actual_time="0.078">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="100.002" estimated_cost="3.99667" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="100.002" estimated_cost="3.99667" actual_rows="100" actual_time="0.078">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="122.706" estimated_cost="3.99655" actual_rows="195" actual_time="0.078">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="1207.78" estimated_cost="3.11588" actual_rows="916" actual_time="0.078">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where exists (
  select 1
  from TestTable b
  where b.local_search = 500 and
        a.groupby = b.groupby
) and exists (
  select 1
  from TestTable b
  where b.local_search = 1 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>43</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.12</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="92.6665" estimated_cost="3.79619" actual_rows="95" actual_time="0.156">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="94.5269" estimated_cost="3.74617" actual_rows="95" actual_time="0.155">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.154">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.104">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.129803" actual_rows="95" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0496245" actual_rows="95" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
where groupby is not null and local_search = 500
intersect
select groupby
from TestTable
where groupby is not null and local_search = 1</query>
              <query_variant_id>44</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>INTERSECT variant</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>95</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="92.6666" estimated_cost="3.64614" actual_rows="95" actual_time="0.046">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="94.527" estimated_cost="3.59607" actual_rows="95" actual_time="0.045">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="289.027" estimated_cost="3.11588" actual_rows="343" actual_time="0.045">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0496243" actual_rows="95" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>45</test_id>
          <test_number>3</test_number>
          <test_name>Exceptional groups</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>46</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING variant</query_variant_name>
              <query_processing_time>0.222</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10.3" estimated_cost="3.81599" actual_rows="9" actual_time="0.261">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.81594" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.81594" actual_rows="103" actual_time="0.261">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.115">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from (
  select distinct groupby from TestTable
) a
where not exists (
  select 1
  from TestTable b
  where b.local_search &gt;= 600 and
        a.groupby = b.groupby
)</query>
              <query_variant_id>47</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>NOT EXISTS subquery variant</query_variant_name>
              <query_processing_time>0.12</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.5274" estimated_cost="3.63603" actual_rows="9" actual_time="0.158">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.157">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.105">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.0196507" actual_rows="94" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0196404" actual_rows="94" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct groupby
from TestTable
except
select groupby
from TestTable
where local_search &gt;= 600</query>
              <query_variant_id>48</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>DIFFERENCE variant</query_variant_name>
              <query_processing_time>0.12</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="3.63603" actual_rows="9" actual_time="0.158">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.157">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.104">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.0196507" actual_rows="94" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0196404" actual_rows="94" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>49</test_id>
          <test_number>4</test_number>
          <test_name>Aggregate function elimination</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &lt; 600 or local_search IS NULL then 1 end) = count(*)</query>
              <query_variant_id>50</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>HAVING with two aggregates</query_variant_name>
              <query_processing_time>0.223</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="10.3" estimated_cost="3.81599" actual_rows="9" actual_time="0.258">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.81594" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.81594" actual_rows="103" actual_time="0.258">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.114">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select groupby
from TestTable
group by groupby
having count(case when local_search &gt;= 600 then 1 end) = 0</query>
              <query_variant_id>51</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>HAVING with one aggregate</query_variant_name>
              <query_processing_time>0.199</query_processing_time>
              <result_size>9</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="3.81599" actual_rows="9" actual_time="0.231">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.81594" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.81594" actual_rows="103" actual_time="0.231">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.116">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>52</test_id>
          <test_number>5</test_number>
          <test_name>Window function vs subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select *
from 
(
    select id, 
           groupby, 
           local_search, 
           count(*) over (partition by groupby) ct
    from TestTable
) t
where local_search = 500</query>
              <query_variant_id>53</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function variant</query_variant_name>
              <query_processing_time>0.336</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="113.133" actual_rows="344" actual_time="0.372">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="289.028" estimated_cost="113.104" actual_rows="344" actual_time="9.683">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1000010" estimated_cost="113.074" actual_rows="1000008" actual_time="9.591">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="103" estimated_cost="112.131" actual_rows="135" actual_time="8.763">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="1000010" estimated_cost="112.013" actual_rows="1000008" actual_time="4.106">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1000010" estimated_cost="111.896" actual_rows="1000008" actual_time="3.94">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.177" actual_rows="1000008" actual_time="3.149">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="3.271">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="9708.82" estimated_cost="0.0235764" actual_rows="1000008" actual_time="0.726">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.012967" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0117882" actual_rows="103" actual_time="0.319">
                                      <child_nodes>
                                        <node op_name="Table Spool" estimated_rows="9708.82" estimated_cost="0" actual_rows="1000008" actual_time="0.269">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="9708.82" estimated_cost="0" actual_rows="1000008" actual_time="0.253">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select id, 
       groupby, 
       local_search, 
       (
         select count(*) 
         from TestTable b
         where b.groupby = a.groupby or 
               (b.groupby is null and a.groupby is null)
       ) ct
from TestTable a
where local_search = 500</query>
              <query_variant_id>54</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery variant</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>344</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="289.028" estimated_cost="5.27111" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="5.27108" actual_rows="344" actual_time="0.063">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="289.028" estimated_cost="5.24251" actual_rows="344" actual_time="1.584">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15338" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15338" actual_rows="103" actual_time="1.149">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15331" actual_rows="112" actual_time="1.148">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15088" actual_rows="112" actual_time="1.136">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.229">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.152">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="289.028" estimated_cost="3.08872" actual_rows="344" actual_time="0.429">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="289.028" estimated_cost="3.05943" actual_rows="344" actual_time="0.06">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="289.028" estimated_cost="2.08448" actual_rows="344" actual_time="0.059">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.944878" actual_rows="344" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>55</test_id>
          <test_number>6</test_number>
          <test_name>Conditional aggregation high-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search = 1 then 1 end) as orderby1,
       count(case when local_search = 2 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby
</query>
              <query_variant_id>56</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.232</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="3.81593" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="3.81593" actual_rows="102" actual_time="0.266">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="3.11588" actual_rows="1000003" actual_time="0.113">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search = 1 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search = 2 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>57</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.605</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="29811.1" estimated_cost="10.19" actual_rows="102" actual_time="0.705">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="29811.1" estimated_cost="10.1552" actual_rows="102" actual_time="21.463">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1019290" estimated_cost="9.64394" actual_rows="1000003" actual_time="21.222">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1019290" estimated_cost="9.33416" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1019290" estimated_cost="9.32779" actual_rows="1000003" actual_time="21.052">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="2.14459" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="2.14459" actual_rows="99" actual_time="0.385">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="718.111" estimated_cost="2.14456" actual_rows="99" actual_time="0.384">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="718.111" estimated_cost="2.14319" actual_rows="99" actual_time="0.384">
                                                  <child_nodes>
                                                    <node op_name="Stream Aggregate" estimated_rows="718.111" estimated_cost="2.11454" actual_rows="99" actual_time="0.067">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="571" actual_time="0.067">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="7.04521" actual_rows="1000003" actual_time="20.523">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="2.14459" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="2.14459" actual_rows="101" actual_time="0.384">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="718.111" estimated_cost="2.14456" actual_rows="101" actual_time="0.384">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="718.111" estimated_cost="2.14319" actual_rows="101" actual_time="0.384">
                                                      <child_nodes>
                                                        <node op_name="Stream Aggregate" estimated_rows="718.111" estimated_cost="2.11454" actual_rows="101" actual_time="0.067">
                                                          <child_nodes>
                                                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.067">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.76275" actual_rows="1000003" actual_time="19.985">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.113">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>58</test_id>
          <test_number>7</test_number>
          <test_name>Aggregation pushdown with subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from TestTable g1</query>
              <query_variant_id>59</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.093</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1760.87" estimated_cost="6.37304" actual_rows="103" actual_time="0.101">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1760.87" estimated_cost="6.34425" actual_rows="103" actual_time="2.67">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="28173.9" estimated_cost="6.31098" actual_rows="112" actual_time="2.66">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="28173.9" estimated_cost="6.27648" actual_rows="112" actual_time="1.112">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="5.78611" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="5.77986" actual_rows="1000008" actual_time="0.822">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="99.9967" estimated_cost="2.17475" actual_rows="3232" actual_time="0.412">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="2.14598" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="2.14598" actual_rows="101" actual_time="0.011">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14538" actual_rows="575" actual_time="0.011">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.066">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.17">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       (
         select count(*) from TestTable g2 
         where local_search = 1 and g1.groupby = g2.groupby
       ) as cnt
from (select distinct groupby from TestTable) g1</query>
              <query_variant_id>60</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct in subquery</query_variant_name>
              <query_processing_time>0.121</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.94586" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103" estimated_cost="3.94585" actual_rows="103" actual_time="0.161">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.16">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.107">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.329476" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.329476" actual_rows="100" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.329299" actual_rows="573" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>61</test_id>
          <test_number>8</test_number>
          <test_name>Conditional aggregation med-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 1000 then 1 end) as orderby1,
       count(case when local_search &gt; 7500 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>62</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.284</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="3.81593" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="3.81593" actual_rows="102" actual_time="0.317">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="3.11588" actual_rows="1000003" actual_time="0.114">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 1000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 7500 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>63</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.527</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="536817" estimated_cost="11.6271" actual_rows="102" actual_time="0.623">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="536817" estimated_cost="11.4848" actual_rows="102" actual_time="18.417">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1018600" estimated_cost="9.66165" actual_rows="1000003" actual_time="18.182">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1018600" estimated_cost="9.35206" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1018600" estimated_cost="9.3457" actual_rows="1000003" actual_time="18.552">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100.22" estimated_cost="2.14704" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="100.22" estimated_cost="2.14704" actual_rows="24" actual_time="0.354">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1603.52" estimated_cost="2.14698" actual_rows="24" actual_time="0.354">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1603.52" estimated_cost="2.14461" actual_rows="24" actual_time="0.354">
                                                  <child_nodes>
                                                    <node op_name="Stream Aggregate" estimated_rows="1603.52" estimated_cost="2.11576" actual_rows="24" actual_time="0.072">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="32895.1" estimated_cost="2.08448" actual_rows="30000" actual_time="0.07">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="7.06067" actual_rows="1000003" actual_time="18.092">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="101.665" estimated_cost="2.16005" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="101.665" estimated_cost="2.16005" actual_rows="102" actual_time="0.833">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1626.64" estimated_cost="2.15999" actual_rows="106" actual_time="0.833">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1626.64" estimated_cost="2.15759" actual_rows="106" actual_time="0.832">
                                                      <child_nodes>
                                                        <node op_name="Stream Aggregate" estimated_rows="1626.64" estimated_cost="2.12874" actual_rows="106" actual_time="0.146">
                                                          <child_nodes>
                                                            <node op_name="Index Scan" estimated_rows="378865" estimated_cost="2.08448" actual_rows="373242" actual_time="0.116">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.76275" actual_rows="1000003" actual_time="17.113">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.128">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>64</test_id>
          <test_number>9</test_number>
          <test_name>Conditional aggregation low-sel</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby,
       count(case when local_search &lt; 5000 then 1 end) as orderby1,
       count(case when local_search &gt; 5000 then 1 end) as orderby2
from TestTable
where groupby is not null
group by groupby</query>
              <query_variant_id>65</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Conditional aggregation</query_variant_name>
              <query_processing_time>0.264</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102" estimated_cost="3.81593" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="102" estimated_cost="3.81593" actual_rows="102" actual_time="0.297">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="3.21588" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="3.11588" actual_rows="1000003" actual_time="0.117">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct g1.groupby,
       (select count(*) from TestTable g2 where local_search &lt; 5000 and g1.groupby = g2.groupby) as orderby1,
       (select count(*) from TestTable g2 where local_search &gt; 5000 and g1.groupby = g2.groupby) as orderby2
from TestTable g1
where groupby is not null</query>
              <query_variant_id>66</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Subquery + distinct</query_variant_name>
              <query_processing_time>0.64</query_processing_time>
              <result_size>102</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="647315" estimated_cost="11.9573" actual_rows="102" actual_time="0.719">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="647315" estimated_cost="11.7916" actual_rows="102" actual_time="20.86">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1016850" estimated_cost="9.68324" actual_rows="1000003" actual_time="20.593">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="1016850" estimated_cost="9.37414" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="1016850" estimated_cost="9.36778" actual_rows="1000003" actual_time="21.415">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="100.74" estimated_cost="2.15053" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="100.74" estimated_cost="2.15053" actual_rows="49" actual_time="0.546">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="1611.84" estimated_cost="2.15047" actual_rows="50" actual_time="0.546">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1611.84" estimated_cost="2.14808" actual_rows="50" actual_time="0.546">
                                                  <child_nodes>
                                                    <node op_name="Stream Aggregate" estimated_rows="1611.84" estimated_cost="2.11924" actual_rows="50" actual_time="0.082">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="125601" estimated_cost="2.08448" actual_rows="122500" actual_time="0.073">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Merge Join" estimated_rows="1000000" estimated_cost="7.07928" actual_rows="1000003" actual_time="20.723">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="102.749" estimated_cost="2.17866" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="102.749" estimated_cost="2.17866" actual_rows="102" actual_time="1.248">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1643.98" estimated_cost="2.17859" actual_rows="110" actual_time="1.248">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1643.98" estimated_cost="2.17617" actual_rows="110" actual_time="1.248">
                                                      <child_nodes>
                                                        <node op_name="Stream Aggregate" estimated_rows="1643.98" estimated_cost="2.14732" actual_rows="110" actual_time="0.266">
                                                          <child_nodes>
                                                            <node op_name="Index Scan" estimated_rows="874356" estimated_cost="2.08448" actual_rows="877454" actual_time="0.195">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000000" estimated_cost="4.76275" actual_rows="1000003" actual_time="19.324">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="2.08448" actual_rows="1000003" actual_time="0.169">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>67</test_id>
          <test_number>10</test_number>
          <test_name>Greatest in group 1</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 80
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>68</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.039</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="0.931702" actual_rows="20" actual_time="0.046">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="0.774435" actual_rows="20" actual_time="0.045">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="0.70852" actual_rows="21" actual_time="0.045">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.594508" actual_rows="190003" actual_time="0.024">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="9.90657" estimated_cost="0.0649456" actual_rows="20" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.156398" actual_rows="20" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 80 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>69</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function</query_variant_name>
              <query_processing_time>1.497</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="190003" estimated_cost="107.903" actual_rows="20" actual_time="1.154">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="190003" estimated_cost="107.416" actual_rows="20" actual_time="30.652">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="190003" estimated_cost="107.41" actual_rows="190001" actual_time="30.642">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="190003" estimated_cost="107.41" actual_rows="190001" actual_time="30.617">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="190003" estimated_cost="107.409" actual_rows="190001" actual_time="30.593">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="190003" estimated_cost="107.409" actual_rows="190001" actual_time="30.577">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.453" actual_rows="190001" actual_time="26.063">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190001" actual_time="1.154">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>70</test_id>
          <test_number>11</test_number>
          <test_name>Greatest in group 2</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>6</distinct_query_plans>
          <successfully_completed_variants>7</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding, 
            dense_rank() over (partition by groupby order by local_search desc) rn
    from TestTable
    where groupby &gt; 25 and 
          local_search is not null
) t
where t.rn = 1</query>
              <query_variant_id>71</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window function 1</query_variant_name>
              <query_processing_time>15.162</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="740003" estimated_cost="113.782" actual_rows="107" actual_time="17.5">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="740003" estimated_cost="111.966" actual_rows="107" actual_time="462.531">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="740003" estimated_cost="111.943" actual_rows="740001" actual_time="462.501">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="740003" estimated_cost="111.941" actual_rows="740001" actual_time="462.406">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740003" estimated_cost="111.94" actual_rows="740001" actual_time="462.323">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="740003" estimated_cost="111.939" actual_rows="740001" actual_time="462.264">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="107.799" actual_rows="740001" actual_time="81.033">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="740003" estimated_cost="105.904" actual_rows="740001" actual_time="1.846">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
    select id, groupby, local_search, padding,
            max(local_search) over (partition by groupby) maxLocalSearch
    from TestTable 
    where groupby &gt; 25

) t
where t.maxLocalSearch = t.local_search</query>
              <query_variant_id>72</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Window function 2</query_variant_name>
              <query_processing_time>27.231</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="74000.3" estimated_cost="113.016" actual_rows="107" actual_time="25.928">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="74000.3" estimated_cost="112.808" actual_rows="107" actual_time="726.646">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="740003" estimated_cost="112.786" actual_rows="740003" actual_time="726.605">
                          <child_nodes>
                            <node op_name="Table Spool" estimated_rows="76" estimated_cost="112.088" actual_rows="108" actual_time="725.993">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740003" estimated_cost="112.001" actual_rows="740003" actual_time="591.592">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="740003" estimated_cost="111.914" actual_rows="740003" actual_time="591.446">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="107.774" actual_rows="740003" actual_time="103.446">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="740003" estimated_cost="105.904" actual_rows="740003" actual_time="0.888">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="9736.88" estimated_cost="0.0174464" actual_rows="740003" actual_time="0.559">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00872322" actual_rows="76" actual_time="0.287">
                                  <child_nodes>
                                    <node op_name="Table Spool" estimated_rows="9736.88" estimated_cost="0" actual_rows="740003" actual_time="0.229">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Table Spool" estimated_rows="9736.88" estimated_cost="0" actual_rows="740003" actual_time="0.193">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 25
  group by groupby
) t1
cross apply
(
    SELECT top 1 with ties t2.id, t2.groupby, t2.local_search, t2.padding
    from TestTable t2
    where t1.groupby = t2.groupby and
    t2.local_search is not null
    order by t2.local_search desc
) t</query>
              <query_variant_id>73</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>CROSS JOIN and TOP 1 with ties</query_variant_name>
              <query_processing_time>0.09</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="168.964" estimated_cost="3.49712" actual_rows="107" actual_time="0.118">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="76" estimated_cost="2.67695" actual_rows="76" actual_time="0.116">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="740003" estimated_cost="2.30691" actual_rows="740003" actual_time="0.079">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="2.22322" estimated_cost="0.819457" actual_rows="107" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="2.22322" estimated_cost="0.81944" actual_rows="181" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="2.22322" estimated_cost="0.0156194" actual_rows="181" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.10396" actual_rows="181" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
join
(
    SELECT groupby, max(local_search) gmax
    from TestTable
    where groupby &gt; 25
    group by groupby
) t2 on t.groupby = t2.groupby and 
        t.local_search = t2.gmax</query>
              <query_variant_id>74</query_variant_id>
              <query_variant_number>d</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.142</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="3.50885" actual_rows="107" actual_time="0.173">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="2.99426" actual_rows="107" actual_time="0.172">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="76" estimated_cost="2.75095" actual_rows="76" actual_time="0.171">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="740003" estimated_cost="2.30691" actual_rows="740003" actual_time="0.089">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.73734" estimated_cost="0.242332" actual_rows="107" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.513719" actual_rows="107" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>75</query_variant_id>
              <query_variant_number>e</query_variant_number>
              <query_variant_name>Subquery with aggregation</query_variant_name>
              <query_processing_time>0.154</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="3.50885" actual_rows="107" actual_time="0.185">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="2.99426" actual_rows="107" actual_time="0.184">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="76" estimated_cost="2.75095" actual_rows="76" actual_time="0.183">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="740003" estimated_cost="2.30691" actual_rows="740003" actual_time="0.096">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.73734" estimated_cost="0.242332" actual_rows="107" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.513719" actual_rows="107" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where NOT EXISTS
    (
        SELECT 1
        from TestTable t2
        where t2.groupby = t.groupby and
              t2.local_search &gt; t.local_search
    ) and 
    t.groupby &gt; 25 and
    t.local_search is not null</query>
              <query_variant_id>76</query_variant_id>
              <query_variant_number>f</query_variant_number>
              <query_variant_name>NOT EXISTS</query_variant_name>
              <query_processing_time>2.715</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="740003" estimated_cost="112.667" actual_rows="107" actual_time="3.517">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="740003" estimated_cost="110.851" actual_rows="107" actual_time="111.797">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="1.71807" actual_rows="740003" actual_time="0.754">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="740003" estimated_cost="1.54364" actual_rows="740003" actual_time="0.618">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="740003" estimated_cost="107.799" actual_rows="740001" actual_time="105.972">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="740003" estimated_cost="105.904" actual_rows="740001" actual_time="0.971">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
left join TestTable t2 on t2.groupby = t.groupby and
                       t2.local_search &gt; t.local_search
where t.groupby &gt; 25 and
      t.local_search is not null and
      t2.groupby is null</query>
              <query_variant_id>77</query_variant_id>
              <query_variant_number>g</query_variant_number>
              <query_variant_name>LEFT JOIN + NULL</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>0</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message>Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.</error_message>
            </query_variant_result>
            <query_variant_result>
              <query>select top(1) with ties t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 25 and
      t.local_search is not null
order by dense_rank() over (partition by groupby order by local_search desc)</query>
              <query_variant_id>78</query_variant_id>
              <query_variant_number>h</query_variant_number>
              <query_variant_name>TOP 1 with ties</query_variant_name>
              <query_processing_time>28.252</query_processing_time>
              <result_size>107</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="740003" estimated_cost="119.871" actual_rows="107" actual_time="29.1">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="740003" estimated_cost="119.797" actual_rows="108" actual_time="29.1">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="740003" estimated_cost="116.083" actual_rows="2461" actual_time="719.656">
                          <child_nodes>
                            <node op_name="Sequence Project" estimated_rows="740003" estimated_cost="111.943" actual_rows="740001" actual_time="703.364">
                              <child_nodes>
                                <node op_name="Segment" estimated_rows="740003" estimated_cost="111.941" actual_rows="740001" actual_time="703.241">
                                  <child_nodes>
                                    <node op_name="Segment" estimated_rows="740003" estimated_cost="111.94" actual_rows="740001" actual_time="703.141">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="740003" estimated_cost="111.939" actual_rows="740001" actual_time="703.078">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="740003" estimated_cost="107.799" actual_rows="740001" actual_time="56.983">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="740003" estimated_cost="105.904" actual_rows="740001" actual_time="3.737">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>79</test_id>
          <test_number>12</test_number>
          <test_name>Greatest N per group</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from
(
   select id, groupby, local_search, padding,
       row_number() over (partition by groupby order by local_search desc) rn
   from TestTable
   where groupby &gt; 80
) t
where t.rn &lt;= 5</query>
              <query_variant_id>80</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Window fun</query_variant_name>
              <query_processing_time>0.983</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="57000.9" estimated_cost="107.557" actual_rows="97" actual_time="1.42">
                  <child_nodes>
                    <node op_name="Filter" estimated_rows="57000.9" estimated_cost="107.391" actual_rows="97" actual_time="40.92">
                      <child_nodes>
                        <node op_name="Sequence Project" estimated_rows="190003" estimated_cost="107.385" actual_rows="190003" actual_time="40.913">
                          <child_nodes>
                            <node op_name="Segment" estimated_rows="190003" estimated_cost="107.384" actual_rows="190003" actual_time="40.888">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="190003" estimated_cost="107.384" actual_rows="190003" actual_time="40.875">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.428" actual_rows="190003" actual_time="34.096">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190003" actual_time="1.03">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from (
  select groupby
  from TestTable
  where groupby &gt; 80
  group by groupby
) t1
cross apply
(
    SELECT top 5 t2.*
    from TestTable t2
    where t1.groupby = t2.groupby
    order by t2.local_search desc
) t</query>
              <query_variant_id>81</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS APPLY</query_variant_name>
              <query_processing_time>0.027</query_processing_time>
              <result_size>97</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="105" estimated_cost="1.11033" actual_rows="97" actual_time="0.032">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="0.68952" actual_rows="21" actual_time="0.031">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.594508" actual_rows="190003" actual_time="0.021">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Top" estimated_rows="5" estimated_cost="0.42037" actual_rows="97" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="5" estimated_cost="0.420359" actual_rows="97" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="5" estimated_cost="0.00676366" actual_rows="97" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.675534" actual_rows="97" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>82</test_id>
          <test_number>13</test_number>
          <test_name>Redudant GROUP BY</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>SELECT groupby, max(local_search) gmax
from TestTable
where groupby = 1
group by groupby</query>
              <query_variant_id>83</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0396749" actual_rows="1" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0336744" actual_rows="10000" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>SELECT 1 groupby, max(local_search) gmax
from TestTable
where groupby = 1</query>
              <query_variant_id>84</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.00328478" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>85</test_id>
          <test_number>14</test_number>
          <test_name>Redundant GROUP BY in subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select groupby, max(local_search) gmax
    from TestTable
    group by groupby
) t on t2.groupby = t.groupby and
       t2.local_search = t.gmax and
       t2.groupby = 1</query>
              <query_variant_id>86</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY construct</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.25817" estimated_cost="0.0139915" actual_rows="99" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2.25817" estimated_cost="0.0139913" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="2.25817" estimated_cost="0.00328692" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0106949" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t2.*
from TestTable t2
join
(
    select max(local_search) gmax
    from TestTable
    where groupby = 1
) t on t2.local_search = t.gmax and 
       groupby = 1</query>
              <query_variant_id>87</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without GROUP BY</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00985924" actual_rows="99" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00657196" actual_rows="99" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>88</test_id>
          <test_number>15</test_number>
          <test_name>Redundant correlated subquery</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search)
  from TestTable t2
  where t2.groupby = t.groupby
) and t.groupby = 1</query>
              <query_variant_id>89</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Correlated subquery</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="2.25817" estimated_cost="0.0139915" actual_rows="99" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="2.25817" estimated_cost="0.0139913" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="2.25817" estimated_cost="0.00328692" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0106949" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.*
from TestTable t
where local_search = (
  select max(local_search) gmax
  from TestTable t2
  where t2.groupby = 1
) and t.groupby = 1</query>
              <query_variant_id>90</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Independent subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>99</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00985924" actual_rows="99" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.00657196" actual_rows="99" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                          <child_nodes>
                            <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="99" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>91</test_id>
          <test_number>16</test_number>
          <test_name>Compute column liftup</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, 
   groupby, 
   local_search,
   padding, 
   row_number() over (order by groupby desc, local_search desc)
from TestTable
order by groupby desc, local_search desc
offset 0 ROWS 
fetch next 50 rows only</query>
              <query_variant_id>92</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic computation</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Top" estimated_rows="50" estimated_cost="0.171061" actual_rows="50" actual_time="0">
                  <child_nodes>
                    <node op_name="Sequence Project" estimated_rows="50" estimated_cost="0.171056" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Segment" estimated_rows="50" estimated_cost="0.171052" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="50" estimated_cost="0.171051" actual_rows="50" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="50" estimated_cost="0.00343562" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.167406" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id,
       t.groupby,
       t.local_search,
       t.padding,
       row_number() over (order by groupby desc, local_search desc)
from
(
    select id, 
           groupby, 
           local_search,
           padding
    from TestTable
    order by groupby desc, local_search desc
    offset 0 ROWS 
    fetch next 50 rows only
) t</query>
              <query_variant_id>93</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Using subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sequence Project" estimated_rows="50" estimated_cost="0.171061" actual_rows="50" actual_time="0">
                  <child_nodes>
                    <node op_name="Segment" estimated_rows="50" estimated_cost="0.171057" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Top" estimated_rows="50" estimated_cost="0.171056" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="50" estimated_cost="0.171051" actual_rows="50" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="50" estimated_cost="0.00343562" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.167406" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>94</test_id>
          <test_number>17</test_number>
          <test_name>Redundant conditional aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select g1.groupby,
       count(case when local_search = 1 then 1 end) as c,
       max(case when local_search = 1 then local_search end) as local_search
from TestTable g1
where local_search = 1
group by groupby
</query>
              <query_variant_id>95</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Conditional aggregation</query_variant_name>
              <query_processing_time>0.053</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="3.59658" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="3.59658" actual_rows="101" actual_time="0.053">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="918.757" estimated_cost="3.59598" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="3.11588" actual_rows="575" actual_time="0.053">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select g1.groupby,
       count(1) as c,
       max(local_search) as local_search
from TestTable g1
where local_search = 1 
group by groupby</query>
              <query_variant_id>96</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Without CASE</query_variant_name>
              <query_processing_time>0.045</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="3.59649" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="3.59649" actual_rows="101" actual_time="0.046">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="3.11588" actual_rows="575" actual_time="0.046">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>227</test_id>
          <test_number>18</test_number>
          <test_name>All construct versus aggregation</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.local_search &gt;= all(
  select local_search
  from TestTable t2
  where t.groupby = t2.groupby  and local_search is not null
  ) and groupby &gt; 80 and local_search is not null</query>
              <query_variant_id>230</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>All construct</query_variant_name>
              <query_processing_time>1.596</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="190003" estimated_cost="107.766" actual_rows="20" actual_time="0.459">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="190003" estimated_cost="107.278" actual_rows="20" actual_time="14.559">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="190003" estimated_cost="0.470089" actual_rows="190001" actual_time="0.391">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.39842" actual_rows="190001" actual_time="0.191">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="190003" estimated_cost="106.453" actual_rows="190001" actual_time="13.818">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="190003" estimated_cost="105.904" actual_rows="190001" actual_time="1.791">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.id, t.groupby, t.local_search, t.padding
from TestTable t
where t.groupby &gt; 80 and t.local_search =
    (
        SELECT max(t1.local_search) gmax
        from TestTable t1
        where t1.groupby = t.groupby
    )</query>
              <query_variant_id>231</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY</query_variant_name>
              <query_processing_time>0.035</query_processing_time>
              <result_size>20</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="0.931702" actual_rows="20" actual_time="0.042">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="208.038" estimated_cost="0.774435" actual_rows="20" actual_time="0.041">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="21" estimated_cost="0.70852" actual_rows="21" actual_time="0.041">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="190003" estimated_cost="0.594508" actual_rows="190003" actual_time="0.022">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="9.90657" estimated_cost="0.0649456" actual_rows="20" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.156398" actual_rows="20" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>255</test_id>
          <test_number>19</test_number>
          <test_name>Distinct pushdown</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select count(t.groupby) 
from (
  select distinct groupby
  from TestTable
) t</query>
              <query_variant_id>256</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex, Distinct in subquery</query_variant_name>
              <query_processing_time>0.125</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.616" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.616" actual_rows="1" actual_time="0.156">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.156">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.105">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select count(distinct groupby) from TestTable</query>
              <query_variant_id>257</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple, Aggregation with distinct</query_variant_name>
              <query_processing_time>0.123</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.616" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.616" actual_rows="1" actual_time="0.156">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.156">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.105">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>264</test_id>
          <test_number>20</test_number>
          <test_name>UNION vs JOIN</test_name>
          <test_group_id>37</test_group_id>
          <configuration_id>279</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select groupby, sum(c1), sum(c2)
from
(
    select groupby, global_search c1, NULL c2
    from TestTable
    where local_search = 1
    union all
    select groupby, NULL c1, global_search c2
    from TestTable
    where local_search = 100
) t
group by groupby</query>
              <query_variant_id>265</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="102.007" estimated_cost="9.12741" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="102.007" estimated_cost="9.1274" actual_rows="101" actual_time="0.017">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="102.007" estimated_cost="9.09887" actual_rows="101" actual_time="0.047">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="994.65" estimated_cost="9.09883" actual_rows="200" actual_time="0.047">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="994.65" estimated_cost="9.09715" actual_rows="200" actual_time="0.047">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="994.65" estimated_cost="9.06828" actual_rows="200" actual_time="0.161">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1478.92" estimated_cost="9.06819" actual_rows="1141" actual_time="0.161">
                                          <child_nodes>
                                            <node op_name="Concatenation" estimated_rows="1478.92" estimated_cost="9.06597" actual_rows="1141" actual_time="0.157">
                                              <child_nodes>
                                                <node op_name="Compute Scalar" estimated_rows="918.757" estimated_cost="5.11879" actual_rows="0" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="575" actual_time="0.086">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.081">
                                                          <child_nodes />
                                                        </node>
                                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="3.00407" actual_rows="575" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Compute Scalar" estimated_rows="560.163" estimated_cost="3.94717" actual_rows="0" actual_time="0">
                                                  <child_nodes>
                                                    <node op_name="Nested Loops" estimated_rows="560.163" estimated_cost="3.94716" actual_rows="566" actual_time="0.069">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="560.163" estimated_cost="2.08448" actual_rows="566" actual_time="0.066">
                                                          <child_nodes />
                                                        </node>
                                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.83254" actual_rows="566" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select coalesce(t1.groupby, t2.groupby) groupby, t1.c1, t2.c2
from
(
    select groupby, sum(global_search) c1
    from TestTable
    where local_search = 1
    group by groupby
) t1
full join
(   
    select groupby, sum(global_search) c2
    from TestTable
    where local_search = 100
    group by groupby
) t2 on t1.groupby= t2.groupby</query>
              <query_variant_id>266</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>FULL JOIN</query_variant_name>
              <query_processing_time>0.034</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="101.961" estimated_cost="9.15483" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="101.961" estimated_cost="9.15482" actual_rows="101" actual_time="0.029">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="101.961" estimated_cost="9.1263" actual_rows="101" actual_time="0.834">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="5.14893" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="99.9967" estimated_cost="5.14893" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="99.9967" estimated_cost="5.14893" actual_rows="101" actual_time="0.386">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="718.111" estimated_cost="5.1489" actual_rows="101" actual_time="0.386">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="718.111" estimated_cost="5.14753" actual_rows="101" actual_time="0.384">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="718.111" estimated_cost="5.11884" actual_rows="101" actual_time="0.082">
                                                  <child_nodes>
                                                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="575" actual_time="0.081">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.076">
                                                          <child_nodes />
                                                        </node>
                                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="3.00407" actual_rows="575" actual_time="0.001">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="99.6456" estimated_cost="3.97698" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="99.6456" estimated_cost="3.97698" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="99.6456" estimated_cost="3.97698" actual_rows="99" actual_time="0.448">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="486.846" estimated_cost="3.97696" actual_rows="99" actual_time="0.448">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="486.846" estimated_cost="3.97583" actual_rows="99" actual_time="0.448">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="486.846" estimated_cost="3.9472" actual_rows="99" actual_time="0.073">
                                                  <child_nodes>
                                                    <node op_name="Nested Loops" estimated_rows="560.163" estimated_cost="3.94716" actual_rows="566" actual_time="0.072">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="560.163" estimated_cost="2.08448" actual_rows="566" actual_time="0.068">
                                                          <child_nodes />
                                                        </node>
                                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.83254" actual_rows="566" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.134</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.135">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.207">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.095">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.094">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.017">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.084">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.952">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.145</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.126">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.953">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.032">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.032">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.965">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.891">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.785">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.132</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.127">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.96">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.954">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.954">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.888">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.983">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.878">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0.137</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.121">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.776">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.87">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.87">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.76">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.887">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.78">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.126</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.12">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.744">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.844">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.841">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.768">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.887">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.763">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0.136</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.123">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.855">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.922">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.921">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.845">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.919">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.792">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.135</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.138">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.335">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.051">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.051">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.982">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.27">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="2.12">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0.133</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.152">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.753">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.357">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.356">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.272">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.367">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="2.254">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.13</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.131">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.096">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.018">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.018">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.946">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.047">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.939">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0.201</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1.09647" estimated_cost="317.964" actual_rows="10" actual_time="0.2">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1.09647" estimated_cost="317.935" actual_rows="10" actual_time="6.305">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="111.548" estimated_cost="211.927" actual_rows="102" actual_time="4.208">
                          <child_nodes>
                            <node op_name="Merge Join" estimated_rows="111.548" estimated_cost="211.927" actual_rows="102" actual_time="4.208">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="2.153">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.147">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.069">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="2.048">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.048">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.888">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.078">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.92">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.127</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.136">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.254">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.274">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.274">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.189">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.951">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.848">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0.129</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.135">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.225">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.062">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.058">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.995">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.143">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="2.038">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0.147</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.142">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.427">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.986">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.986">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.915">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.429">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="2.301">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0.131</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.128">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.995">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.957">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.955">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.889">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.015">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.888">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.123</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.128">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="3.998">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.985">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.984">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.91">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="1.983">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.887">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0.129</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.133">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.161">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.096">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.094">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.018">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.046">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.902">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.137</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="212.616" actual_rows="101" actual_time="0.157">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100" estimated_cost="212.587" actual_rows="101" actual_time="2.604">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13650.2" estimated_cost="212.564" actual_rows="575" actual_time="2.604">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13650.2" estimated_cost="212.533" actual_rows="575" actual_time="4.767">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.211">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.211">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.141">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="607" actual_time="2.528">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="607" actual_time="2.453">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>1.686</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="216.893" actual_rows="101" actual_time="1.558">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="216.865" actual_rows="101" actual_time="36.154">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="2.47">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3194" actual_time="2.462">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3194" actual_time="2.368">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.185">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="110.501" actual_rows="101" actual_time="33.668">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="73.2597" estimated_cost="1.59212" actual_rows="39898" actual_time="10.557">
                              <child_nodes />
                            </node>
                            <node op_name="Table Spool" estimated_rows="104.756" estimated_cost="108.296" actual_rows="4063839" actual_time="22.809">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="106.935" actual_rows="3264" actual_time="21.303">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.137</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="212.616" actual_rows="101" actual_time="0.133">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100" estimated_cost="212.587" actual_rows="101" actual_time="2.112">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13650.2" estimated_cost="212.564" actual_rows="575" actual_time="2.093">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13650.2" estimated_cost="212.533" actual_rows="575" actual_time="4.003">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.923">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.923">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.849">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="607" actual_time="2.05">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="607" actual_time="1.952">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.143</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="213.708" actual_rows="101" actual_time="0.146">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="213.697" actual_rows="575" actual_time="0.146">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="213.668" actual_rows="575" actual_time="4.576">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="213.613" actual_rows="1000008" actual_time="4.479">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="104.756" estimated_cost="105.963" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="1.892">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="1.892">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="1.89">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.824">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.374">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.286">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.075</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="106.066" actual_rows="573" actual_time="0.076">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="106.035" actual_rows="573" actual_time="2.435">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.989" actual_rows="573" actual_time="2.325">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="573" actual_time="2.27">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0763366" actual_rows="573" actual_time="0.095">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.058</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.989" actual_rows="573" actual_time="0.055">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="573" actual_time="1.867">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.302</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="426.251" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="426.251" actual_rows="103" actual_time="0.287">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="426.222" actual_rows="103" actual_time="6.292">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="213.35" actual_rows="100" actual_time="2.011">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="213.349" actual_rows="100" actual_time="2.011">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="213.326" actual_rows="10000" actual_time="2.011">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="213.296" actual_rows="10000" actual_time="4.623">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="9978.97" estimated_cost="106.72" actual_rows="10001" actual_time="2.687">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="106.72" actual_rows="10001" actual_time="2.687">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.427">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.396">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="1.914">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="1.882">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Merge Join" estimated_rows="100" estimated_cost="212.872" actual_rows="103" actual_time="4.256">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.508" actual_rows="103" actual_time="2.175">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="106.508" actual_rows="3195" actual_time="2.175">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3195" actual_time="2.148">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3195" actual_time="2.02">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.792">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="2.08">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3199" actual_time="2.079">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3199" actual_time="1.917">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.77">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.293</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="426.251" actual_rows="103" actual_time="0.305">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="100" estimated_cost="426.222" actual_rows="103" actual_time="6.77">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="213.35" actual_rows="100" actual_time="2.327">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="213.349" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="213.349" actual_rows="100" actual_time="2.319">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="213.326" actual_rows="10000" actual_time="2.307">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="213.296" actual_rows="10000" actual_time="5.027">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="9978.97" estimated_cost="106.72" actual_rows="10001" actual_time="2.786">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="106.72" actual_rows="10001" actual_time="2.786">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.521">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.485">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="2.208">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="2.157">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="212.872" actual_rows="103" actual_time="4.423">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.508" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.508" actual_rows="103" actual_time="2.236">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="106.508" actual_rows="3194" actual_time="2.229">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3194" actual_time="2.21">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3194" actual_time="2.081">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.866">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="106.364" actual_rows="103" actual_time="2.177">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.362" actual_rows="3194" actual_time="2.176">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.333" actual_rows="3194" actual_time="2.005">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.855">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.208</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="119.578" estimated_cost="317.96" actual_rows="52" actual_time="0.192">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="119.578" estimated_cost="317.931" actual_rows="52" actual_time="6.056">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="100" actual_time="1.94">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="100" actual_time="1.862">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Concatenation" estimated_rows="9593.16" estimated_cost="211.947" actual_rows="10576" actual_time="4.095">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="8674.4" estimated_cost="105.983" actual_rows="10001" actual_time="2.048">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="8674.4" estimated_cost="105.904" actual_rows="10001" actual_time="1.947">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="2.016">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.906">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.258</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="119.406" estimated_cost="423.954" actual_rows="52" actual_time="0.247">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="118.406" estimated_cost="211.995" actual_rows="2" actual_time="0.124">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="118.406" estimated_cost="211.967" actual_rows="2" actual_time="3.844">
                          <child_nodes>
                            <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="100" actual_time="1.922">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="100" actual_time="1.922">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="100" actual_time="1.856">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="8674.4" estimated_cost="105.983" actual_rows="34" actual_time="1.914">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="8674.4" estimated_cost="105.904" actual_rows="34" actual_time="1.792">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="211.958" actual_rows="50" actual_time="0.123">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="1" estimated_cost="211.93" actual_rows="50" actual_time="3.842">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="918.757" estimated_cost="105.966" actual_rows="502" actual_time="1.891">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="1.89">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="105.964" actual_rows="575" actual_time="1.89">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="918.757" estimated_cost="105.904" actual_rows="575" actual_time="1.824">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="104.756" estimated_cost="105.963" actual_rows="27" actual_time="1.92">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="31" actual_time="1.92">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="31" actual_time="1.792">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.201</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="110.144" estimated_cost="319.189" actual_rows="2" actual_time="0.22">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="110.144" estimated_cost="319.16" actual_rows="2" actual_time="6.881">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="2.023">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.951">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Concatenation" estimated_rows="7934.91" estimated_cost="213.174" actual_rows="10005" actual_time="4.834">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="106.667" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="106.667" actual_rows="9902" actual_time="2.688">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.082" actual_rows="1000008" actual_time="2.447">
                                      <child_nodes>
                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.315">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.507" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.507" actual_rows="103" actual_time="2.116">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1600" estimated_cost="106.507" actual_rows="3191" actual_time="2.115">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3191" actual_time="2.114">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3191" actual_time="2.033">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.839">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.279</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="110.283" estimated_cost="425.106" actual_rows="2" actual_time="0.284">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="109.283" estimated_cost="212.606" actual_rows="1" actual_time="0.141">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="109.283" estimated_cost="212.578" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="109.283" estimated_cost="212.578" actual_rows="1" actual_time="2.402">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="13650.2" estimated_cost="212.55" actual_rows="575" actual_time="2.399">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="13650.2" estimated_cost="212.488" actual_rows="575" actual_time="4.227">
                                      <child_nodes>
                                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="1.922">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.963" actual_rows="102" actual_time="1.922">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="1.856">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.082" actual_rows="607" actual_time="2.276">
                                          <child_nodes>
                                            <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="607" actual_time="2.222">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="212.5" actual_rows="1" actual_time="0.143">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="1" estimated_cost="212.471" actual_rows="1" actual_time="4.447">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="106.507" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="106.507" actual_rows="84" actual_time="2.381">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1600" estimated_cost="106.507" actual_rows="2633" actual_time="2.381">
                                      <child_nodes>
                                        <node op_name="Bitmap" estimated_rows="1600" estimated_cost="106.505" actual_rows="3200" actual_time="2.37">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="106.505" actual_rows="3200" actual_time="2.37">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="106.476" actual_rows="3200" actual_time="2.272">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.037">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="104.756" estimated_cost="105.963" actual_rows="24" actual_time="2.048">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.963" actual_rows="30" actual_time="2.048">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="30" actual_time="1.92">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>145</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.138</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.134">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.177">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.091">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.088">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.018">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.064">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="1.947">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.141</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="133.851" estimated_cost="212" actual_rows="10" actual_time="0.142">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="133.851" estimated_cost="211.971" actual_rows="10" actual_time="4.449">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.174">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="105.962" actual_rows="102" actual_time="2.174">
                              <child_nodes>
                                <node op_name="Table Scan" estimated_rows="104.756" estimated_cost="105.904" actual_rows="102" actual_time="2.09">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.987" actual_rows="41" actual_time="2.268">
                          <child_nodes>
                            <node op_name="Table Scan" estimated_rows="9805.85" estimated_cost="105.904" actual_rows="41" actual_time="2.141">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.0294086" actual_rows="10" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0294076" actual_rows="10" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0261203" actual_rows="10" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.022833" actual_rows="102" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="106.483" estimated_cost="0.0227793" actual_rows="102" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="1.06483" estimated_cost="0.0189422" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100" estimated_cost="0.445941" actual_rows="101" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="8789.5" estimated_cost="0.369243" actual_rows="575" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="87.8948" estimated_cost="0.329111" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.056</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="2.98832" actual_rows="101" actual_time="0.061">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100" estimated_cost="2.95981" actual_rows="101" actual_time="1.824">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.666">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.665">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.348">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.162">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="8789.5" estimated_cost="0.393303" actual_rows="575" actual_time="0.128">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="8789.5" estimated_cost="0.363487" actual_rows="575" actual_time="0.022">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0320794" actual_rows="102" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="87.8948" estimated_cost="0.329111" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100" estimated_cost="0.445941" actual_rows="101" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="8789.5" estimated_cost="0.369243" actual_rows="575" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="87.8948" estimated_cost="0.329111" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.044</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="3.73224" actual_rows="101" actual_time="0.054">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="3.72088" actual_rows="575" actual_time="0.054">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="3.69238" actual_rows="575" actual_time="0.46">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="3.63738" actual_rows="1000008" actual_time="0.371">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="99.9994" estimated_cost="0.0322652" actual_rows="3264" actual_time="0.026">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="99.9994" estimated_cost="0.003502" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="99.9994" estimated_cost="0.003502" actual_rows="102" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.171">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.013</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.92825" actual_rows="573" actual_time="0.009">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="573" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="571.667" estimated_cost="1.87016" actual_rows="573" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0487082" actual_rows="573" actual_time="0.006">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="573" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="571.665" estimated_cost="1.87016" actual_rows="573" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.23</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="114.793" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="114.793" actual_rows="103" actual_time="0.241">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="114.764" actual_rows="103" actual_time="5.447">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="109.53" actual_rows="100" actual_time="2.309">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="109.53" actual_rows="100" actual_time="2.309">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="109.507" actual_rows="10000" actual_time="2.307">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="109.476" actual_rows="10000" actual_time="4.276">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="2.037">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="2.032">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="1.773">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.234">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="2.208">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="2.146">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Merge Join" estimated_rows="100" estimated_cost="5.23368" actual_rows="103" actual_time="3.134">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68834" actual_rows="103" actual_time="1.952">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68827" actual_rows="784" actual_time="1.952">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.6859" actual_rows="784" actual_time="1.952">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65698" actual_rows="784" actual_time="0.415">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.165">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.152">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.152">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.251">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.113">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.219</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="114.793" actual_rows="103" actual_time="0.258">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="100" estimated_cost="114.764" actual_rows="103" actual_time="6.093">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="109.53" actual_rows="100" actual_time="2.197">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="109.53" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="109.53" actual_rows="100" actual_time="2.195">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="109.507" actual_rows="10000" actual_time="2.185">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="109.476" actual_rows="10000" actual_time="4.062">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.955">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.955">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="1.714">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.238">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="2.06">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="2.032">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="5.23368" actual_rows="103" actual_time="3.872">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68834" actual_rows="103" actual_time="2.176">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68827" actual_rows="784" actual_time="2.176">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.6859" actual_rows="784" actual_time="2.176">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65698" actual_rows="784" actual_time="0.454">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.186">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.666">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.664">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.35">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.166">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="74.2808" estimated_cost="0.601629" actual_rows="52" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="76.243" estimated_cost="0.57332" actual_rows="2" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="76.243" estimated_cost="0.324022" actual_rows="2" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.319786" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.248979" actual_rows="2" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0283013" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.025014" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.0207778" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="77.243" estimated_cost="0.59858" actual_rows="52" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="76.243" estimated_cost="0.570809" actual_rows="2" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="76.243" estimated_cost="0.323363" actual_rows="2" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.247127" actual_rows="2" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0277629" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0244756" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0206656" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.069</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="89.4554" estimated_cost="3.49082" actual_rows="2" actual_time="0.076">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="88.7358" estimated_cost="0.75204" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="88.7358" estimated_cost="0.752031" actual_rows="1" actual_time="0.008">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="88.7358" estimated_cost="0.72332" actual_rows="1" actual_time="0.145">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1417.48" estimated_cost="0.723264" actual_rows="1" actual_time="0.145">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1417.48" estimated_cost="0.721107" actual_rows="1" actual_time="0.145">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1417.48" estimated_cost="0.68907" actual_rows="1" actual_time="0.042">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="8789.5" estimated_cost="0.688696" actual_rows="575" actual_time="0.042">
                                              <child_nodes>
                                                <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357289" actual_rows="102" actual_time="0.036">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321829" actual_rows="102" actual_time="0.02">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="87.8948" estimated_cost="0.329111" actual_rows="575" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.73878" actual_rows="1" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.71024" actual_rows="1" actual_time="1.964">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.70695" actual_rows="1" actual_time="1.964">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68799" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68799" actual_rows="103" actual_time="1.946">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68793" actual_rows="784" actual_time="1.945">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.68556" actual_rows="784" actual_time="1.94">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65672" actual_rows="784" actual_time="0.446">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.198">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.018935" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="89.7358" estimated_cost="3.49082" actual_rows="2" actual_time="0.082">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="88.7358" estimated_cost="0.75204" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="88.7358" estimated_cost="0.752031" actual_rows="1" actual_time="0.014">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="88.7358" estimated_cost="0.72332" actual_rows="1" actual_time="0.35">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1417.48" estimated_cost="0.723264" actual_rows="1" actual_time="0.35">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1417.48" estimated_cost="0.721107" actual_rows="1" actual_time="0.349">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1417.48" estimated_cost="0.68907" actual_rows="1" actual_time="0.054">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="8789.5" estimated_cost="0.688696" actual_rows="575" actual_time="0.054">
                                              <child_nodes>
                                                <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357289" actual_rows="102" actual_time="0.042">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321829" actual_rows="102" actual_time="0.031">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="87.8948" estimated_cost="0.329111" actual_rows="575" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.73878" actual_rows="1" actual_time="0.067">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.71024" actual_rows="1" actual_time="2.013">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.70695" actual_rows="1" actual_time="2.013">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68799" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68799" actual_rows="103" actual_time="1.998">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68793" actual_rows="784" actual_time="1.998">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.68556" actual_rows="784" actual_time="1.989">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65672" actual_rows="784" actual_time="0.466">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.198">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.018935" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>146</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.603483" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="86.1878" estimated_cost="0.323363" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.319553" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.27976" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1.06741" estimated_cost="0.0294086" actual_rows="10" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0294076" actual_rows="10" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.0261203" actual_rows="10" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.022833" actual_rows="102" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="106.483" estimated_cost="0.0227793" actual_rows="102" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="1.06483" estimated_cost="0.0189422" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.09" estimated_cost="2.86513" actual_rows="101" actual_time="0.019">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.09" estimated_cost="2.83662" actual_rows="101" actual_time="0.361">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13030.4" estimated_cost="2.81335" actual_rows="575" actual_time="0.359">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13030.4" estimated_cost="2.7829" actual_rows="575" actual_time="0.15">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.013">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.008">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="585" actual_time="0.119">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="585" actual_time="0.1">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.122</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="100.09" estimated_cost="4.43918" actual_rows="101" actual_time="0.163">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.61594" actual_rows="103" actual_time="0.16">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="3.11588" actual_rows="1000008" actual_time="0.109">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Merge Join" estimated_rows="3.57475" estimated_cost="0.822814" actual_rows="101" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="274.341" estimated_cost="0.113621" actual_rows="10578" actual_time="0.001">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.8257" estimated_cost="0.0196162" actual_rows="204" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.027</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.09" estimated_cost="2.86513" actual_rows="101" actual_time="0.02">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.09" estimated_cost="2.83662" actual_rows="101" actual_time="0.371">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13030.4" estimated_cost="2.81335" actual_rows="575" actual_time="0.363">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13030.4" estimated_cost="2.7829" actual_rows="575" actual_time="0.148">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.024">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.017">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="585" actual_time="0.111">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="585" actual_time="0.088">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.046</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="3.73224" actual_rows="101" actual_time="0.059">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="3.72088" actual_rows="575" actual_time="0.059">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="3.69238" actual_rows="575" actual_time="0.51">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="3.63738" actual_rows="1000008" actual_time="0.415">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="99.9994" estimated_cost="0.0322652" actual_rows="3264" actual_time="0.027">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="99.9994" estimated_cost="0.003502" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="99.9994" estimated_cost="0.003502" actual_rows="102" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.192">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.22606" actual_rows="573" actual_time="0.015">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.19539" actual_rows="573" actual_time="0.315">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="573" actual_time="0.189">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.168">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.075">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="918.757" estimated_cost="3.00407" actual_rows="573" actual_time="0.001">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0763366" actual_rows="573" actual_time="0.108">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.019</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.755" estimated_cost="5.14949" actual_rows="573" actual_time="0.012">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="573" actual_time="0.195">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.172">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.064">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="918.755" estimated_cost="3.00407" actual_rows="573" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.214</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="105.896" estimated_cost="113.86" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="105.896" estimated_cost="113.86" actual_rows="103" actual_time="0.237">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="105.896" estimated_cost="113.832" actual_rows="103" actual_time="5.223">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100.061" estimated_cost="109.53" actual_rows="100" actual_time="2.595">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.061" estimated_cost="109.53" actual_rows="100" actual_time="2.595">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="109.507" actual_rows="10000" actual_time="2.578">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="109.476" actual_rows="10000" actual_time="4.488">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.985">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.984">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="1.704">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.251">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="2.467">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="2.413">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Merge Join" estimated_rows="103" estimated_cost="4.30079" actual_rows="103" actual_time="2.625">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15345" actual_rows="103" actual_time="1.695">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15339" actual_rows="112" actual_time="1.695">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15096" actual_rows="112" actual_time="1.695">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.325">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.169">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="103" estimated_cost="2.14695" actual_rows="103" actual_time="0.919">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.14453" actual_rows="112" actual_time="0.899">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.11578" actual_rows="112" actual_time="0.169">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.114">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.192</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105.896" estimated_cost="113.86" actual_rows="103" actual_time="0.23">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="105.896" estimated_cost="113.832" actual_rows="103" actual_time="5.104">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100.061" estimated_cost="109.53" actual_rows="100" actual_time="2.065">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100.061" estimated_cost="109.53" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.061" estimated_cost="109.53" actual_rows="100" actual_time="2.061">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="8884.53" estimated_cost="109.507" actual_rows="10000" actual_time="2.053">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="8884.53" estimated_cost="109.476" actual_rows="10000" actual_time="3.998">
                                          <child_nodes>
                                            <node op_name="Bitmap" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.99">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="2.90061" actual_rows="10001" actual_time="1.989">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="1.753">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.254">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="10032" actual_time="1.964">
                                              <child_nodes>
                                                <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="10032" actual_time="1.952">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Merge Join" estimated_rows="103" estimated_cost="4.30079" actual_rows="103" actual_time="3.034">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15345" actual_rows="103" actual_time="1.792">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15339" actual_rows="112" actual_time="1.792">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15096" actual_rows="112" actual_time="1.792">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.345">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.184">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="103" estimated_cost="2.14695" actual_rows="103" actual_time="1.216">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.14453" actual_rows="112" actual_time="1.216">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.11578" actual_rows="112" actual_time="0.224">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.149">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.162" estimated_cost="1.74449" actual_rows="52" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="Concatenation" estimated_rows="4.03957" estimated_cost="1.73941" actual_rows="52" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="0.759187" actual_rows="2" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.0987898" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.659553" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="0.980183" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.319786" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.659553" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="852.357" estimated_cost="3.21798" actual_rows="52" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.316" estimated_cost="0.527727" actual_rows="2" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="130.316" estimated_cost="0.102648" actual_rows="2" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1.30316" estimated_cost="0.098711" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424535" actual_rows="2" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="722.04" estimated_cost="2.69016" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="722.04" estimated_cost="0.325408" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="7.22039" estimated_cost="0.318998" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="2.36174" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.088</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105.15" estimated_cost="5.43873" actual_rows="2" actual_time="0.103">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="105.15" estimated_cost="5.40998" actual_rows="2" actual_time="3.137">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.386024" actual_rows="102" actual_time="0.099">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357289" actual_rows="102" actual_time="0.015">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321829" actual_rows="102" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Concatenation" estimated_rows="7937.91" estimated_cost="5.00066" actual_rows="10005" actual_time="3.011">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="9902" actual_time="1.825">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.26274" actual_rows="1000008" actual_time="1.585">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.229">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15338" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15338" actual_rows="103" actual_time="1.157">
                                  <child_nodes>
                                    <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15331" actual_rows="112" actual_time="1.157">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15088" actual_rows="112" actual_time="1.154">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.274">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.189">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.064</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="184.875" estimated_cost="5.67034" actual_rows="2" actual_time="0.069">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="104.321" estimated_cost="3.20752" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.321" estimated_cost="3.20751" actual_rows="1" actual_time="0.029">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="104.321" estimated_cost="3.17876" actual_rows="1" actual_time="0.095">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1599.66" estimated_cost="3.1787" actual_rows="1" actual_time="0.095">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1599.66" estimated_cost="3.17633" actual_rows="1" actual_time="0.095">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1599.66" estimated_cost="3.14384" actual_rows="1" actual_time="0.581">
                                          <child_nodes>
                                            <node op_name="Sort" estimated_rows="13030.4" estimated_cost="3.1433" actual_rows="575" actual_time="0.581">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="13030.4" estimated_cost="3.09149" actual_rows="575" actual_time="0.577">
                                                  <child_nodes>
                                                    <node op_name="Bitmap" estimated_rows="100" estimated_cost="0.38603" actual_rows="102" actual_time="0.1">
                                                      <child_nodes>
                                                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.38603" actual_rows="102" actual_time="0.1">
                                                          <child_nodes>
                                                            <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357289" actual_rows="102" actual_time="0.017">
                                                              <child_nodes>
                                                                <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321829" actual_rows="102" actual_time="0">
                                                                  <child_nodes>
                                                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                                                      <child_nodes />
                                                                    </node>
                                                                  </child_nodes>
                                                                </node>
                                                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                                                  <child_nodes />
                                                                </node>
                                                              </child_nodes>
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.26274" actual_rows="585" actual_time="0.447">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="585" actual_time="0.089">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="80.5542" estimated_cost="2.4628" actual_rows="1" actual_time="0.04">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="80.5542" estimated_cost="2.43411" actual_rows="1" actual_time="1.134">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="80.5542" estimated_cost="2.17281" actual_rows="1" actual_time="1.134">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15338" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15338" actual_rows="103" actual_time="1.125">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15331" actual_rows="112" actual_time="1.125">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15088" actual_rows="112" actual_time="1.123">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.194">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.131">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0194093" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.261274" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>147</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.527677" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="130.303" estimated_cost="0.10264" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.30303" estimated_cost="0.0987035" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.424492" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0.056</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.058">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.058">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.057">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.062</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.054">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.054">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.053">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.057">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.057">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.056">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.063</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.058">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.058">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.057">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.057">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.057">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.056">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.057</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0.05</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1.02721" estimated_cost="3.71441" actual_rows="10" actual_time="0.052">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="3.71441" actual_rows="10" actual_time="0.052">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="3.71113" actual_rows="10" actual_time="0.052">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1" estimated_cost="3.70784" actual_rows="102" actual_time="0.052">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="104.756" estimated_cost="3.69538" actual_rows="102" actual_time="0.052">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.051">
                                      <child_nodes />
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0990044" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.057">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.057">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.056">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0.054</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.048">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0.053</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.047</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100" estimated_cost="4.07477" actual_rows="101" actual_time="0.047">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="10579.4" estimated_cost="3.98638" actual_rows="575" actual_time="0.046">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.045">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.34627" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.097</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="4.74272" actual_rows="101" actual_time="0.105">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="4.7142" actual_rows="101" actual_time="1.787">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.666">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.666">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.332">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.157">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.16921" actual_rows="101" actual_time="0.103">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="1" estimated_cost="1.0881" actual_rows="305" actual_time="0.098">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.622497" actual_rows="101" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.047</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100" estimated_cost="4.07477" actual_rows="101" actual_time="0.047">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="10579.4" estimated_cost="3.98638" actual_rows="575" actual_time="0.047">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.046">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.34627" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.094</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="6.06895" actual_rows="101" actual_time="0.104">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="6.05759" actual_rows="575" actual_time="0.104">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="6.02909" actual_rows="575" actual_time="3.086">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="5.97409" actual_rows="1000008" actual_time="2.995">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="102" actual_time="0.517">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="102" actual_time="0.517">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.055">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="2.283">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.253">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.014</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.92825" actual_rows="573" actual_time="0.009">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="573" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="571.667" estimated_cost="1.87016" actual_rows="573" actual_time="0.002">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0487082" actual_rows="573" actual_time="0.006">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.008</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87687" actual_rows="573" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00432104" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="571.667" estimated_cost="1.87016" actual_rows="573" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.194</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="41.5807" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="41.5807" actual_rows="103" actual_time="0.223">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="41.5522" actual_rows="103" actual_time="4.419">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="36.3181" actual_rows="100" actual_time="0.502">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="36.3174" actual_rows="100" actual_time="0.502">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="9978.97" estimated_cost="36.2939" actual_rows="10000" actual_time="0.498">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="36.2634" actual_rows="10000" actual_time="2.841">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="4.56578" actual_rows="10000" actual_time="2.743">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="2.90056" actual_rows="10001" actual_time="2.574">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="2.304">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.249">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.66261" actual_rows="10000" actual_time="0.13">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.695" actual_rows="10000" actual_time="0.065">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Merge Join" estimated_rows="100" estimated_cost="5.23368" actual_rows="103" actual_time="3.904">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68834" actual_rows="103" actual_time="2.08">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68827" actual_rows="784" actual_time="2.08">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.6859" actual_rows="784" actual_time="2.08">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65698" actual_rows="784" actual_time="0.466">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.189">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.794">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.792">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.378">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.175">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.182</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100" estimated_cost="41.5807" actual_rows="103" actual_time="0.225">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="100" estimated_cost="41.5522" actual_rows="103" actual_time="4.452">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="36.3181" actual_rows="100" actual_time="0.564">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="36.3174" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="36.3174" actual_rows="100" actual_time="0.56">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="9978.97" estimated_cost="36.2939" actual_rows="10000" actual_time="0.551">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="36.2634" actual_rows="10000" actual_time="2.863">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="4.56578" actual_rows="10000" actual_time="2.761">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="2.90056" actual_rows="10001" actual_time="2.581">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="2.31">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.211">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.66261" actual_rows="10000" actual_time="0.146">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.695" actual_rows="10000" actual_time="0.071">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Merge Join" estimated_rows="100" estimated_cost="5.23368" actual_rows="103" actual_time="3.871">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68834" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68834" actual_rows="103" actual_time="2.111">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68827" actual_rows="784" actual_time="2.111">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.6859" actual_rows="784" actual_time="2.111">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65698" actual_rows="784" actual_time="0.444">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.18">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="100" estimated_cost="2.54497" actual_rows="103" actual_time="1.736">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.5426" actual_rows="784" actual_time="1.729">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.51386" actual_rows="784" actual_time="0.339">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.16">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.019</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="97.817" estimated_cost="3.88363" actual_rows="52" actual_time="0.018">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="97.817" estimated_cost="3.8549" actual_rows="52" actual_time="0.432">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="100" actual_time="0.419">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="100" actual_time="0.062">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Concatenation" estimated_rows="4.03957" estimated_cost="1.74031" actual_rows="52" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="1.0268" actual_rows="2" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.334865" actual_rows="2" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.691049" actual_rows="2" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="0.713469" actual_rows="50" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.0215351" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.691049" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.021</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="92.769" estimated_cost="4.77244" actual_rows="52" actual_time="0.022">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="91.769" estimated_cost="2.77606" actual_rows="2" actual_time="0.017">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="91.769" estimated_cost="2.74735" actual_rows="2" actual_time="0.347">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="91.769" estimated_cost="2.44925" actual_rows="2" actual_time="0.346">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14325" actual_rows="100" actual_time="0.33">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="100" actual_time="0.05">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="2" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.298073" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="1.99636" actual_rows="50" actual_time="0.005">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="1.96783" actual_rows="50" actual_time="0.004">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.8739" actual_rows="575" actual_time="0.002">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00358432" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0935055" actual_rows="50" actual_time="0.001">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="105.804" estimated_cost="5.60747" actual_rows="2" actual_time="0.073">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="104.746" estimated_cost="2.86863" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.746" estimated_cost="2.86862" actual_rows="1" actual_time="0.017">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="104.746" estimated_cost="2.83987" actual_rows="1" actual_time="0.419">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1673.54" estimated_cost="2.83981" actual_rows="1" actual_time="0.419">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1673.54" estimated_cost="2.83735" actual_rows="1" actual_time="0.419">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1673.54" estimated_cost="2.80467" actual_rows="1" actual_time="0.06">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="10579.4" estimated_cost="2.80422" actual_rows="575" actual_time="0.06">
                                              <child_nodes>
                                                <node op_name="Nested Loops" estimated_rows="104.756" estimated_cost="2.45519" actual_rows="102" actual_time="0.056">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.054">
                                                      <child_nodes />
                                                    </node>
                                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.340684" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.34627" actual_rows="575" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.73882" actual_rows="1" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.71029" actual_rows="1" actual_time="1.617">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.707" actual_rows="1" actual_time="1.617">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68799" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68799" actual_rows="103" actual_time="1.595">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68793" actual_rows="784" actual_time="1.593">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.68556" actual_rows="784" actual_time="1.587">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65672" actual_rows="784" actual_time="0.31">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.125">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.018935" actual_rows="1" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.081</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="105.746" estimated_cost="5.60747" actual_rows="2" actual_time="0.066">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="104.746" estimated_cost="2.86863" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.746" estimated_cost="2.86862" actual_rows="1" actual_time="0.012">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="104.746" estimated_cost="2.83987" actual_rows="1" actual_time="0.318">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="1673.54" estimated_cost="2.83981" actual_rows="1" actual_time="0.318">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1673.54" estimated_cost="2.83735" actual_rows="1" actual_time="0.318">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1673.54" estimated_cost="2.80467" actual_rows="1" actual_time="0.054">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="10579.4" estimated_cost="2.80422" actual_rows="575" actual_time="0.054">
                                              <child_nodes>
                                                <node op_name="Nested Loops" estimated_rows="104.756" estimated_cost="2.45519" actual_rows="102" actual_time="0.051">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.05">
                                                      <child_nodes />
                                                    </node>
                                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.340684" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.34627" actual_rows="575" actual_time="0">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.73882" actual_rows="1" actual_time="0.053">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.71029" actual_rows="1" actual_time="1.574">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.707" actual_rows="1" actual_time="1.574">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="2.68799" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="2.68799" actual_rows="103" actual_time="1.551">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1600" estimated_cost="2.68793" actual_rows="784" actual_time="1.551">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1600" estimated_cost="2.68556" actual_rows="784" actual_time="1.544">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1600" estimated_cost="2.65672" actual_rows="784" actual_time="0.305">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.12">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.018935" actual_rows="1" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>148</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.05">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.05">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.049">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="4.26885" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="103.739" estimated_cost="3.93107" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.337346" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.054</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.048">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.058">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.058">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.057">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.051">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.051">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.05">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.058">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.058">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.057">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.058">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.057">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.056">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.065</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.052">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.052">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.051">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.056">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.055">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.056">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.055">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="1.04756" estimated_cost="3.7028" actual_rows="10" actual_time="0.051">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1.04756" estimated_cost="3.69951" actual_rows="10" actual_time="0.051">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1.04756" estimated_cost="3.69619" actual_rows="10" actual_time="0.051">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="104.756" estimated_cost="3.59599" actual_rows="102" actual_time="0.05">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.05">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0997612" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.00331094" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.00329062" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.066</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.054">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.054">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.053">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.055">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.055">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.054">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.051">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.051">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.05">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0.063</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.056">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.056">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.054">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0.001">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.056</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.05">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.05">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.049">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0.056</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.05">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.05">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.049">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.036</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.092" estimated_cost="4.97656" actual_rows="101" actual_time="0.031">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.092" estimated_cost="4.94805" actual_rows="101" actual_time="0.435">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13370.6" estimated_cost="4.92464" actual_rows="575" actual_time="0.433">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13370.6" estimated_cost="4.89414" actual_rows="575" actual_time="0.51">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="102" actual_time="0.322">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="102" actual_time="0.32">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.048">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="585" actual_time="0.187">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="585" actual_time="0.089">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.067</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.092" estimated_cost="6.98204" actual_rows="101" actual_time="0.079">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100.092" estimated_cost="6.95352" actual_rows="101" actual_time="1.255">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="103" estimated_cost="2.14695" actual_rows="103" actual_time="1.172">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.14453" actual_rows="112" actual_time="1.17">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.11578" actual_rows="112" actual_time="0.28">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.192">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="3.66518" estimated_cost="4.80654" actual_rows="101" actual_time="0.065">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="274.125" estimated_cost="0.113546" actual_rows="10578" actual_time="0.002">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="4.60676" actual_rows="101" actual_time="0.051">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.031</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.092" estimated_cost="4.97656" actual_rows="101" actual_time="0.034">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.092" estimated_cost="4.94805" actual_rows="101" actual_time="0.408">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="13370.6" estimated_cost="4.92464" actual_rows="575" actual_time="0.39">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="13370.6" estimated_cost="4.89414" actual_rows="575" actual_time="0.632">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="102" actual_time="0.45">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="102" actual_time="0.45">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.067">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="585" actual_time="0.176">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="585" actual_time="0.104">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.091</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="6.06895" actual_rows="101" actual_time="0.102">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="6.05759" actual_rows="575" actual_time="0.102">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="6.02909" actual_rows="575" actual_time="3.12">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="5.97409" actual_rows="1000008" actual_time="3.028">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="102" actual_time="0.573">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14326" actual_rows="102" actual_time="0.573">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="102" actual_time="0.059">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="2.26">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.288">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.021</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.22606" actual_rows="573" actual_time="0.017">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.19539" actual_rows="573" actual_time="0.374">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="573" actual_time="0.25">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.229">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.081">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="918.757" estimated_cost="3.00407" actual_rows="573" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0763366" actual_rows="573" actual_time="0.108">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.019</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="5.14949" actual_rows="573" actual_time="0.01">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="918.757" estimated_cost="5.11878" actual_rows="573" actual_time="0.184">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="918.757" estimated_cost="2.14315" actual_rows="575" actual_time="0.162">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="918.757" estimated_cost="2.08448" actual_rows="575" actual_time="0.058">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="918.757" estimated_cost="3.00407" actual_rows="573" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.166</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="105.894" estimated_cost="40.6478" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="105.894" estimated_cost="40.6478" actual_rows="103" actual_time="0.191">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="105.894" estimated_cost="40.6193" actual_rows="103" actual_time="3.349">
                          <child_nodes>
                            <node op_name="Merge Join" estimated_rows="103" estimated_cost="4.30079" actual_rows="103" actual_time="2.754">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15345" actual_rows="103" actual_time="1.516">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15339" actual_rows="112" actual_time="1.515">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15096" actual_rows="112" actual_time="1.508">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.271">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.143">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="103" estimated_cost="2.14695" actual_rows="103" actual_time="1.216">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.14453" actual_rows="112" actual_time="1.216">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.11578" actual_rows="112" actual_time="0.239">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.16">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="100.069" estimated_cost="36.3181" actual_rows="100" actual_time="0.588">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.069" estimated_cost="36.3174" actual_rows="100" actual_time="0.568">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="9978.97" estimated_cost="36.2939" actual_rows="10000" actual_time="0.566">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="36.2634" actual_rows="10000" actual_time="2.875">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="4.56578" actual_rows="10000" actual_time="2.783">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="2.90056" actual_rows="10001" actual_time="2.61">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="2.33">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.212">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.66261" actual_rows="10000" actual_time="0.13">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.695" actual_rows="10000" actual_time="0.065">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.179</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105.894" estimated_cost="40.6478" actual_rows="103" actual_time="0.175">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="105.894" estimated_cost="40.6193" actual_rows="103" actual_time="3.485">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="103" estimated_cost="4.30079" actual_rows="103" actual_time="2.939">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15345" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15345" actual_rows="103" actual_time="1.583">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15339" actual_rows="112" actual_time="1.583">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15096" actual_rows="112" actual_time="1.582">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.312">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.168">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="103" estimated_cost="2.14695" actual_rows="103" actual_time="1.344">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.14453" actual_rows="112" actual_time="1.33">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.11578" actual_rows="112" actual_time="0.247">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.169">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="100.069" estimated_cost="36.3181" actual_rows="100" actual_time="0.539">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100.069" estimated_cost="36.3174" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.069" estimated_cost="36.3174" actual_rows="100" actual_time="0.534">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="9978.97" estimated_cost="36.2939" actual_rows="10000" actual_time="0.513">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="36.2634" actual_rows="10000" actual_time="2.207">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="9978.97" estimated_cost="4.56578" actual_rows="10000" actual_time="2.113">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="9978.97" estimated_cost="2.90056" actual_rows="10001" actual_time="1.938">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.31018" actual_rows="1000008" actual_time="1.666">
                                                      <child_nodes>
                                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.179">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.66261" actual_rows="10000" actual_time="0.137">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.695" actual_rows="10000" actual_time="0.063">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="145.606" estimated_cost="3.96209" actual_rows="52" actual_time="0.017">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="145.606" estimated_cost="3.93325" actual_rows="52" actual_time="0.414">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="100" actual_time="0.399">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="100" actual_time="0.061">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Concatenation" estimated_rows="4.03957" estimated_cost="1.81866" actual_rows="52" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="0.79182" actual_rows="2" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.0998864" actual_rows="2" actual_time="0.001">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.691049" actual_rows="2" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Nested Loops" estimated_rows="2.01979" estimated_cost="1.0268" actual_rows="50" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="2.01979" estimated_cost="0.334865" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.691049" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.036</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="134.718" estimated_cost="5.15994" actual_rows="52" actual_time="0.037">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="133.718" estimated_cost="2.67885" actual_rows="2" actual_time="0.019">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="133.718" estimated_cost="2.65004" actual_rows="2" actual_time="0.241">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="133.718" estimated_cost="2.21431" actual_rows="2" actual_time="0.24">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14299" actual_rows="100" actual_time="0.143">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="100" actual_time="0.05">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1.27647" estimated_cost="0.0998007" actual_rows="2" actual_time="0.013">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.435694" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.48107" actual_rows="50" actual_time="0.018">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.45254" actual_rows="50" actual_time="0.427">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.44925" actual_rows="50" actual_time="0.427">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="2.14325" actual_rows="100" actual_time="0.4">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="2.08448" actual_rows="100" actual_time="0.067">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.334748" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.092</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105.832" estimated_cost="6.71519" actual_rows="2" actual_time="0.11">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="105.832" estimated_cost="6.68644" actual_rows="2" actual_time="3.399">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="105.832" estimated_cost="6.3456" actual_rows="2" actual_time="3.393">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="105.832" estimated_cost="6.34482" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="105.832" estimated_cost="6.34482" actual_rows="2" actual_time="3.393">
                                  <child_nodes>
                                    <node op_name="Concatenation" estimated_rows="7937.91" estimated_cost="5.00066" actual_rows="10005" actual_time="3.221">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="9902" actual_time="1.867">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.26274" actual_rows="1000008" actual_time="1.616">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.244">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15338" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15338" actual_rows="103" actual_time="1.336">
                                              <child_nodes>
                                                <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15331" actual_rows="112" actual_time="1.335">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15088" actual_rows="112" actual_time="1.334">
                                                      <child_nodes>
                                                        <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.281">
                                                          <child_nodes>
                                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.195">
                                                              <child_nodes />
                                                            </node>
                                                          </child_nodes>
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.33828" actual_rows="2" actual_time="0.135">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.340813" actual_rows="2" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.092</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="105.756" estimated_cost="6.74919" actual_rows="2" actual_time="0.112">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="104.756" estimated_cost="4.5445" actual_rows="1" actual_time="0.068">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="104.756" estimated_cost="4.51575" actual_rows="1" actual_time="1.963">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="104.756" estimated_cost="4.17504" actual_rows="1" actual_time="1.963">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.84723" actual_rows="9902" actual_time="1.797">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="2.26274" actual_rows="1000008" actual_time="1.551">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.237">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.322" actual_rows="1" actual_time="0.131">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.340684" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="2.20468" actual_rows="1" actual_time="0.043">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.17615" actual_rows="1" actual_time="1.255">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="1" estimated_cost="2.17286" actual_rows="1" actual_time="1.255">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="2.15338" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="2.15338" actual_rows="103" actual_time="1.224">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="2.15331" actual_rows="112" actual_time="1.224">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="2.15088" actual_rows="112" actual_time="1.222">
                                              <child_nodes>
                                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="2.12203" actual_rows="112" actual_time="0.244">
                                                  <child_nodes>
                                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.08448" actual_rows="1000008" actual_time="0.162">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0194093" actual_rows="1" actual_time="0.004">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>149</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.055</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.049">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.049">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.048">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="4.13245" actual_rows="10" actual_time="0.05">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="133.705" estimated_cost="3.69624" actual_rows="10" actual_time="0.05">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="104.756" estimated_cost="3.11588" actual_rows="102" actual_time="0.049">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0997931" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.43565" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>103</test_id>
          <test_number>1</test_number>
          <test_name>Selection/projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>104</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.029">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.027">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.005">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.017">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select * from TestTable where groupby = 10
) b
join 
(
    select * from TestTable where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>105</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.026">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.023">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.014">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>106</test_id>
          <test_number>2</test_number>
          <test_name>CROSS JOIN</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>107</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.024</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.026">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.023">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.014">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from (
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.local_search b_local_search, 
         b.padding b_padding,
         a.id a_id, 
         a.global_search a_global_search
  from TestTable b
  cross join TestTable a
) t
where b_local_search = a_id and 
      a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>108</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.015">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>109</test_id>
          <test_number>3</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>110</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.025">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.023">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.014">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
cross apply (
  select global_search 
  from TestTable a 
  where b.local_search = a.id
) a
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>111</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN lateral</query_variant_name>
              <query_processing_time>0.024</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.025">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.023">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.014">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>112</test_id>
          <test_number>4</test_number>
          <test_name>Subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>113</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.026">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.024">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.015">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b_id, b_groupby, b_orderby, b_padding
from
(
  select b.groupby b_groupby, 
         b.id b_id, 
         b.orderby b_orderby, 
         b.padding b_padding,
         a.global_search a_global_search
  from TestTable b
  join TestTable a on b.local_search = a.id
) t
where a_global_search = 1 and 
      b_groupby = 10</query>
              <query_variant_id>114</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>JOIN in subquery</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.036">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.033">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.005">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.021">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>115</test_id>
          <test_number>5</test_number>
          <test_name>Redundant predicate 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>116</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10 and
      exists( -- this exists can be eliminated since join and predicate is already part of the outer join
        select 1 
        from TestTable a 
        where a.global_search = 1 and b.local_search = a.id
      )</query>
              <query_variant_id>117</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Exists construct</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.696015" actual_rows="10" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.696014" actual_rows="10" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="1" estimated_cost="0.692726" actual_rows="575" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1" estimated_cost="0.689439" actual_rows="102" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100" estimated_cost="0.677041" actual_rows="102" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.0032831" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0032831" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>118</test_id>
          <test_number>6</test_number>
          <test_name>Redundant predicate 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>119</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.025</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join (
  select * from TestTable 
  where global_search = 1
) a on b.local_search = a.id
where a.global_search = 1 and -- this predicate can be eliminated since it is covered by the predicate in the subquery
      b.groupby = 10</query>
              <query_variant_id>120</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Same predicate twice</query_variant_name>
              <query_processing_time>0.032</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.036">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.033">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.006">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.021">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>121</test_id>
          <test_number>7</test_number>
          <test_name>Redundant OUTER JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>122</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal, INNER JOIN</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id
where a.global_search = 1 and 
      b.groupby = 10</query>
              <query_variant_id>123</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 1</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.028">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.026">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>124</test_id>
          <test_number>8</test_number>
          <test_name>Redundant OUTER JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>125</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
left join TestTable a on b.local_search = a.id and 
                        a.global_search = 1
where a.id is not null and b.groupby = 10</query>
              <query_variant_id>126</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, LEFT JOIN 2</query_variant_name>
              <query_processing_time>0.025</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.027">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.016">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>127</test_id>
          <test_number>9</test_number>
          <test_name>Magic set rewriting</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>128</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.011</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.07" estimated_cost="32.8363" actual_rows="101" actual_time="0.011">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.07" estimated_cost="32.8078" actual_rows="101" actual_time="0.257">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="10099" estimated_cost="32.7857" actual_rows="575" actual_time="0.251">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="32.7557" actual_rows="575" actual_time="0.057">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="0.689329" actual_rows="575" actual_time="0.055">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357213" actual_rows="102" actual_time="0.037">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.032107" actual_rows="102" actual_time="0.031">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.329478" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="32.0638" actual_rows="575" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select t.groupby
from 
(
    select distinct groupby from TestTable
) t
where exists
(
    select 1 
    from TestTable a 
    join TestTable b on b.local_search = a.id
    where a.global_search = 1 and 
          (b.groupby = t.groupby or
          (b.groupby is null and t.groupby is null))
)
</query>
              <query_variant_id>129</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.052</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.07" estimated_cost="34.114" actual_rows="101" actual_time="0.053">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.07" estimated_cost="34.0855" actual_rows="101" actual_time="1.561">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="103" estimated_cost="1.78399" actual_rows="103" actual_time="1.251">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="1.78156" actual_rows="109" actual_time="1.25">
                              <child_nodes>
                                <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="1.75282" actual_rows="109" actual_time="0.22">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.148">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="10099" estimated_cost="32.2795" actual_rows="575" actual_time="0.284">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="32.2494" actual_rows="575" actual_time="0.058">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="0.183053" actual_rows="575" actual_time="0.055">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.0543193" actual_rows="102" actual_time="0.04">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="100" estimated_cost="0.0328824" actual_rows="102" actual_time="0.032">
                                          <child_nodes>
                                            <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.0321076" actual_rows="0" actual_time="0">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.032107" actual_rows="102" actual_time="0.029">
                                                  <child_nodes>
                                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.0214107" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.126095" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="32.0638" actual_rows="575" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>130</test_id>
          <test_number>10</test_number>
          <test_name>CROSS JOIN lateral</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1</query>
              <query_variant_id>131</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.013</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="100.07" estimated_cost="32.8363" actual_rows="101" actual_time="0.011">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="100.07" estimated_cost="32.8078" actual_rows="101" actual_time="0.247">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="10099" estimated_cost="32.7857" actual_rows="575" actual_time="0.241">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="32.7557" actual_rows="575" actual_time="0.066">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="0.689329" actual_rows="575" actual_time="0.064">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357213" actual_rows="102" actual_time="0.048">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.032107" actual_rows="102" actual_time="0.037">
                                          <child_nodes>
                                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.329478" actual_rows="575" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="32.0638" actual_rows="575" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.groupby
from TestTable b
cross apply (
  select count(*) table1_c 
  from TestTable a 
  where b.local_search = a.id and 
        a.global_search = 1
) t
where t.table1_c &gt; 0</query>
              <query_variant_id>132</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>CROSS JOIN LATERAL</query_variant_name>
              <query_processing_time>0.086</query_processing_time>
              <result_size>101</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Sort" estimated_rows="1" estimated_cost="108.132" actual_rows="101" actual_time="0.096">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="1" estimated_cost="108.12" actual_rows="575" actual_time="0.095">
                      <child_nodes>
                        <node op_name="Filter" estimated_rows="1" estimated_cost="108.092" actual_rows="575" actual_time="2.915">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1000010" estimated_cost="108.037" actual_rows="1000008" actual_time="2.818">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.386509" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="100" estimated_cost="0.386509" actual_rows="102" actual_time="0.138">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="100" estimated_cost="0.386502" actual_rows="102" actual_time="0.137">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.385728" actual_rows="102" actual_time="0.132">
                                              <child_nodes>
                                                <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.357213" actual_rows="102" actual_time="0.037">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.032107" actual_rows="102" actual_time="0.025">
                                                      <child_nodes>
                                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.476">
                                  <child_nodes>
                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.376">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>133</test_id>
          <test_number>11</test_number>
          <test_name>Redundant subquery</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IN (
    SELECT a.global_search 
    FROM TestTable
  ) and a.local_search = 1</query>
              <query_variant_id>134</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, IN construct</query_variant_name>
              <query_processing_time>0.014</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.92804" actual_rows="573" actual_time="0.009">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="573" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="571.667" estimated_cost="1.87016" actual_rows="573" actual_time="0.002">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Table Scan" estimated_rows="1" estimated_cost="0.0487082" actual_rows="573" actual_time="0.005">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.global_search IS NOT NULL and 
      a.local_search = 1</query>
              <query_variant_id>135</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>573</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="573" actual_time="0.002">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="571.665" estimated_cost="1.87016" actual_rows="573" actual_time="0.001">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>136</test_id>
          <test_number>12</test_number>
          <test_name>Independent summaries</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b1.groupby,
     (
        select sum(b2.local_search)
        from TestTable b2
        where b2.groupby = b1.groupby
     )  sum_local_search,
     (
        select min(a.id)
        from TestTable b2
        join TestTable a on b2.id = a.global_search
        where b2.groupby = b1.groupby
     ) min_id
from (select distinct groupby from TestTable ) b1</query>
              <query_variant_id>137</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Subquery behind SELECT</query_variant_name>
              <query_processing_time>0.232</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="105.894" estimated_cost="248.511" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="105.894" estimated_cost="248.511" actual_rows="103" actual_time="0.205">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="105.894" estimated_cost="248.483" actual_rows="103" actual_time="3.7">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="100.069" estimated_cost="140.19" actual_rows="100" actual_time="0.557">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.069" estimated_cost="140.19" actual_rows="100" actual_time="0.556">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="10000" estimated_cost="140.166" actual_rows="10000" actual_time="0.547">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="140.136" actual_rows="10000" actual_time="3.09">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="108.373" actual_rows="10000" actual_time="3.015">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="106.72" actual_rows="10001" actual_time="2.737">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.475">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.423">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.65078" actual_rows="10000" actual_time="0.23">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.036">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Merge Join" estimated_rows="103" estimated_cost="108.292" actual_rows="103" actual_time="3.135">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.508" actual_rows="103" actual_time="2.079">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="106.508" actual_rows="3189" actual_time="2.078">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.505" actual_rows="3189" actual_time="2.078">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.476" actual_rows="3189" actual_time="1.909">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.693">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="103" estimated_cost="1.78399" actual_rows="103" actual_time="1.025">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1648" estimated_cost="1.78156" actual_rows="109" actual_time="1.025">
                                      <child_nodes>
                                        <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="1.75282" actual_rows="109" actual_time="0.167">
                                          <child_nodes>
                                            <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.11">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.groupby, t1.sum_local_search, t2.min_id
from (select distinct groupby from TestTable ) b1
left join (
    select b2.groupby, sum(b2.local_search) sum_local_search
    from TestTable b2
    group by b2.groupby
) t1 on b1.groupby = t1.groupby
left join (
    select b2.groupby, min(a.id) min_id
    from TestTable b2
    join TestTable a on b2.id = a.global_search
    group by b2.groupby
) t2 on b1.groupby = t2.groupby</query>
              <query_variant_id>138</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>GROUP BY with JOIN</query_variant_name>
              <query_processing_time>0.204</query_processing_time>
              <result_size>103</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="105.894" estimated_cost="248.511" actual_rows="103" actual_time="0.24">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="105.894" estimated_cost="248.483" actual_rows="103" actual_time="4.748">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="103" estimated_cost="108.292" actual_rows="103" actual_time="4.089">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.508" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="106.508" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="106.508" actual_rows="103" actual_time="2.385">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="1648" estimated_cost="106.508" actual_rows="3192" actual_time="2.384">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1648" estimated_cost="106.505" actual_rows="3192" actual_time="2.371">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="1648" estimated_cost="106.476" actual_rows="3192" actual_time="2.233">
                                                  <child_nodes>
                                                    <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="1.995">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Sort" estimated_rows="103" estimated_cost="1.78399" actual_rows="103" actual_time="1.696">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1648" estimated_cost="1.78156" actual_rows="109" actual_time="1.692">
                                  <child_nodes>
                                    <node op_name="Stream Aggregate" estimated_rows="1648" estimated_cost="1.75282" actual_rows="109" actual_time="0.206">
                                      <child_nodes>
                                        <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.142">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="100.069" estimated_cost="140.19" actual_rows="100" actual_time="0.636">
                          <child_nodes>
                            <node op_name="Compute Scalar" estimated_rows="100.069" estimated_cost="140.19" actual_rows="0" actual_time="0">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="100.069" estimated_cost="140.19" actual_rows="100" actual_time="0.635">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="10000" estimated_cost="140.166" actual_rows="10000" actual_time="0.635">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="140.136" actual_rows="10000" actual_time="3.105">
                                          <child_nodes>
                                            <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="108.373" actual_rows="10000" actual_time="3.034">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="10001" estimated_cost="106.72" actual_rows="10001" actual_time="2.77">
                                                  <child_nodes>
                                                    <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.13" actual_rows="1000008" actual_time="2.5">
                                                      <child_nodes>
                                                        <node op_name="Table Scan" estimated_rows="1000010" estimated_cost="105.904" actual_rows="1000008" actual_time="2.461">
                                                          <child_nodes />
                                                        </node>
                                                      </child_nodes>
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                                <node op_name="Index Seek" estimated_rows="1" estimated_cost="1.65078" actual_rows="10000" actual_time="0.218">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.036">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>139</test_id>
          <test_number>13</test_number>
          <test_name>UNION with JOIN 1</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, t.p
from TestTable a
join (
  select local_search c1, padding p
  from TestTable 
  where groupby = 99
  union all
  select groupby c1, padding p
  from TestTable 
  where local_search = 1
) t on a.id = t.c1 and a.global_search = 2</query>
              <query_variant_id>140</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="106.773" estimated_cost="24.4939" actual_rows="52" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Concatenation" estimated_rows="66.4275" estimated_cost="24.1372" actual_rows="52" actual_time="0.059">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="10.0995" estimated_cost="10.2725" actual_rows="2" actual_time="0.008">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="1.01" estimated_cost="9.94376" actual_rows="2" actual_time="0.008">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100.991" estimated_cost="0.329478" actual_rows="571" actual_time="0.001">
                                  <child_nodes />
                                </node>
                                <node op_name="Index Seek" estimated_rows="10001" estimated_cost="1.1347" actual_rows="10001" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32836" actual_rows="2" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="56.328" estimated_cost="13.864" actual_rows="50" actual_time="0.05">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="5.55016" estimated_cost="12.046" actual_rows="50" actual_time="0.05">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.0819112" actual_rows="57500" actual_time="0.013">
                                  <child_nodes />
                                </node>
                                <node op_name="Index Seek" estimated_rows="9708.82" estimated_cost="2.89296" actual_rows="10000" actual_time="0.01">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.81571" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.local_search and 
       a.global_search = 2 and
       t.groupby = 99
union all
select a.id, t.padding
from TestTable a
join TestTable t on a.id = t.groupby and 
       a.global_search = 2 and
       t.local_search = 1</query>
              <query_variant_id>141</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.034</query_processing_time>
              <result_size>52</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="656.014" estimated_cost="34.4772" actual_rows="52" actual_time="0.038">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="101" estimated_cost="32.2481" actual_rows="2" actual_time="0.036">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="100" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="10001" estimated_cost="31.8346" actual_rows="10001" actual_time="0.033">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="10001" estimated_cost="0.0300476" actual_rows="10001" actual_time="0.006">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7627" actual_rows="10001" actual_time="0.022">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Hash Match" estimated_rows="555.015" estimated_cost="2.22905" actual_rows="50" actual_time="0.002">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="100" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="100" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Nested Loops" estimated_rows="571.667" estimated_cost="1.87667" actual_rows="575" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="571.667" estimated_cost="0.00411355" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.87016" actual_rows="575" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>142</test_id>
          <test_number>14</test_number>
          <test_name>UNION with JOIN 2</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
  union all
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and a.global_search = 1</query>
              <query_variant_id>143</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>UNION in subquery</query_variant_name>
              <query_processing_time>0.003</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="101.02" estimated_cost="4.14087" actual_rows="2" actual_time="0.003">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Concatenation" estimated_rows="2" estimated_cost="3.81115" actual_rows="2" actual_time="0.003">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.335588" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.335588" actual_rows="1" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100.991" estimated_cost="0.329478" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.47554" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.47554" actual_rows="1" actual_time="0.002">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="9708.82" estimated_cost="2.89296" actual_rows="10000" actual_time="0.001">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.padding, cnt
from TestTable a
join (
  select local_search c1, count(*) cnt
  from TestTable
  group by local_search
) t on a.id = t.c1 and 
       a.global_search = 1
union all
select a.id, a.padding, cnt
from TestTable a
join (
  select groupby c1, count(*) cnt
  from TestTable
  group by groupby
) t on a.id = t.c1 and 
       a.global_search = 1</query>
              <query_variant_id>144</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>UNION in outer query</query_variant_name>
              <query_processing_time>0.139</query_processing_time>
              <result_size>2</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Concatenation" estimated_rows="199.019" estimated_cost="4.40701" actual_rows="2" actual_time="0.184">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="99.9901" estimated_cost="0.706691" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="99.9901" estimated_cost="0.706691" actual_rows="1" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="10099" estimated_cost="0.700582" actual_rows="575" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="0.329478" actual_rows="575" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Merge Join" estimated_rows="99.0293" estimated_cost="3.7003" actual_rows="1" actual_time="0.183">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="103" estimated_cost="3.35298" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="103" estimated_cost="3.35298" actual_rows="103" actual_time="0.182">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="2.75292" actual_rows="1000008" actual_time="0.124">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Sort" estimated_rows="100" estimated_cost="0.341288" actual_rows="2" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>252</test_id>
          <test_number>15</test_number>
          <test_name>Projection pushdown</test_name>
          <test_group_id>102</test_group_id>
          <configuration_id>150</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable a
join TestTable b on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>253</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Simple</query_variant_name>
              <query_processing_time>0.035</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.036">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.033">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.006">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.021">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from 
(
    select id, groupby, local_search, orderby, padding 
    from TestTable 
    where groupby = 10
) b
join 
(
    select global_search, id 
    from TestTable 
    where global_search = 1
) a on b.local_search = a.id</query>
              <query_variant_id>254</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Complex</query_variant_name>
              <query_processing_time>0.031</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Hash Match" estimated_rows="100.989" estimated_cost="32.245" actual_rows="10" actual_time="0.029">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.8315" actual_rows="10000" actual_time="0.027">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                        <node op_name="RID Lookup" estimated_rows="1" estimated_cost="31.7596" actual_rows="10000" actual_time="0.018">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>152</test_id>
          <test_number>1</test_number>
          <test_name>Redundant GROUP BY and aggregation</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id</query>
              <query_variant_id>153</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY and aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.0137724" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Clustered Index Seek" estimated_rows="100" estimated_cost="0.0137624" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100</query>
              <query_variant_id>154</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Aggregation removed</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Clustered Index Seek" estimated_rows="100" estimated_cost="0.0137624" actual_rows="100" actual_time="0">
                  <child_nodes />
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>155</test_id>
          <test_number>2</test_number>
          <test_name>Redundant GROUP BY and aggregation in subquery</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t</query>
              <query_variant_id>156</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY in subquery</query_variant_name>
              <query_processing_time>0.027</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.958" actual_rows="1" actual_time="0.029">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.958" actual_rows="32" actual_time="0.029">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.929" actual_rows="32" actual_time="0.85">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="0.71">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from
(
    select local_search
    from TestTable
) t</query>
              <query_variant_id>157</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Aggregation removed</query_variant_name>
              <query_processing_time>0.038</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.958" actual_rows="1" actual_time="0.042">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.958" actual_rows="32" actual_time="0.042">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.929" actual_rows="32" actual_time="1.267">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="1.133">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from TestTable</query>
              <query_variant_id>158</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>Minimal, Nested query removal</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.958" actual_rows="1" actual_time="0.033">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.958" actual_rows="32" actual_time="0.033">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.929" actual_rows="32" actual_time="0.963">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="0.812">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>159</test_id>
          <test_number>3</test_number>
          <test_name>Redundant NOT NULL predicate</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>168</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000</query>
              <query_variant_id>160</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="105.951" actual_rows="50" actual_time="0.019">
                  <child_nodes>
                    <node op_name="Clustered Index Scan" estimated_rows="50.8362" estimated_cost="105.892" actual_rows="50" actual_time="0.543">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>161</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0.019</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="105.951" actual_rows="50" actual_time="0.018">
                  <child_nodes>
                    <node op_name="Clustered Index Scan" estimated_rows="50.8362" estimated_cost="105.892" actual_rows="50" actual_time="0.527">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>152</test_id>
          <test_number>1</test_number>
          <test_name>Redundant GROUP BY and aggregation</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, max(b.local_search)
from TestTable b
where b.id &lt; 100
group by b.id</query>
              <query_variant_id>153</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY and aggregation</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="100" estimated_cost="0.0137724" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Clustered Index Seek" estimated_rows="100" estimated_cost="0.0137624" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select distinct b.id, b.local_search
from TestTable b
where b.id &lt; 100</query>
              <query_variant_id>154</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Aggregation removed</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Clustered Index Seek" estimated_rows="100" estimated_cost="0.0137624" actual_rows="100" actual_time="0">
                  <child_nodes />
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>155</test_id>
          <test_number>2</test_number>
          <test_name>Redundant GROUP BY and aggregation in subquery</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>3</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select min(min_local_search)
from
(
    select max(local_search) min_local_search
    from TestTable
    group by id
) t</query>
              <query_variant_id>156</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, GROUP BY in subquery</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from
(
    select local_search
    from TestTable
) t</query>
              <query_variant_id>157</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, Aggregation removed</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select min(local_search)
from TestTable</query>
              <query_variant_id>158</query_variant_id>
              <query_variant_number>c</query_variant_number>
              <query_variant_name>Minimal, Nested query removal</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.00328468" actual_rows="1" actual_time="0">
                  <child_nodes>
                    <node op_name="Top" estimated_rows="1" estimated_cost="0.00328358" actual_rows="1" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Scan" estimated_rows="1" estimated_cost="0.0032831" actual_rows="1" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>159</test_id>
          <test_number>3</test_number>
          <test_name>Redundant NOT NULL predicate</test_name>
          <test_group_id>151</test_group_id>
          <configuration_id>169</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.id IS NOT NULL and
      a.local_search = 5000</query>
              <query_variant_id>160</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 5000</query>
              <query_variant_id>161</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Predicate elimination</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>183</test_id>
          <test_number>1</test_number>
          <test_name>Semi-join</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>184</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>INNER JOIN</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.696" actual_rows="10" actual_time="0.021">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.667" actual_rows="10" actual_time="0.624">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.524">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.066">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where exists( 
        select 1 
        from TestTable a 
        where global_search = 1 and b.local_search = a.id
    ) and
    b.groupby = 10</query>
              <query_variant_id>185</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>SEMI JOIN</query_variant_name>
              <query_processing_time>0.024</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.696" actual_rows="10" actual_time="0.026">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.667" actual_rows="10" actual_time="0.759">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.666">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.063">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>186</test_id>
          <test_number>2</test_number>
          <test_name>Redundant JOIN elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>187</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.021</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.696" actual_rows="10" actual_time="0.021">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.667" actual_rows="10" actual_time="0.625">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.51">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.077">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.local_search = m1.id
join TestTable m2 on b.local_search = m2.id -- this join can be eliminated if the Table1.id attribute is the primary key
where m1.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>188</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Unnecessary JOIN</query_variant_name>
              <query_processing_time>0.022</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.719" actual_rows="10" actual_time="0.021">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.691" actual_rows="10" actual_time="0.596">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.667" actual_rows="10" actual_time="0.596">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.464">
                              <child_nodes />
                            </node>
                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.078">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.0238533" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>189</test_id>
          <test_number>3</test_number>
          <test_name>Predicate rewrite</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>190</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Predicate with equality</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.696" actual_rows="10" actual_time="0.024">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.667" actual_rows="10" actual_time="0.729">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.636">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.064">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &gt; 9 and b.groupby &lt; 11</query>
              <query_variant_id>191</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Predicate with lower and greater</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="131.109" estimated_cost="111.721" actual_rows="10" actual_time="0.022">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="131.109" estimated_cost="111.692" actual_rows="10" actual_time="0.637">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.508">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.73758" actual_rows="10" actual_time="0.092">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>192</test_id>
          <test_number>4</test_number>
          <test_name>Redundant subquery elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where b.local_search = 5000</query>
              <query_variant_id>193</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="105.951" actual_rows="50" actual_time="0.018">
                  <child_nodes>
                    <node op_name="Clustered Index Scan" estimated_rows="50.8362" estimated_cost="105.892" actual_rows="50" actual_time="0.531">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.id, b1.groupby, b1.orderby, (
         select b2.padding
         from TestTable b2
         where b1.id = b2.id -- this subquery can be eliminated if the TestTable.id attribute is the primary key
       )
from TestTable b1
where b1.local_search = 5000</query>
              <query_variant_id>194</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Subquery + JOIN</query_variant_name>
              <query_processing_time>0.024</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50.8362" estimated_cost="106.114" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="106.114" actual_rows="50" actual_time="0.022">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="50.8362" estimated_cost="106.086" actual_rows="50" actual_time="0.533">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="50.8362" estimated_cost="105.951" actual_rows="50" actual_time="0.517">
                              <child_nodes>
                                <node op_name="Clustered Index Scan" estimated_rows="50.8362" estimated_cost="105.892" actual_rows="50" actual_time="0.52">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.163749" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>195</test_id>
          <test_number>5</test_number>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.local_search
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>196</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.045</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1076.44" estimated_cost="112.147" actual_rows="10" actual_time="0.065">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1076.44" estimated_cost="112.118" actual_rows="10" actual_time="1.941">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="106.512" actual_rows="9902" actual_time="1.772">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.07" actual_rows="1000008" actual_time="1.579">
                              <child_nodes>
                                <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="1.451">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.60052" actual_rows="10" actual_time="0.123">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.local_search
from 
(
    select distinct local_search from TestTable
) b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>197</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.058</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1076.44" estimated_cost="112.147" actual_rows="10" actual_time="0.05">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1076.44" estimated_cost="112.118" actual_rows="10" actual_time="1.44">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="106.512" actual_rows="9902" actual_time="1.266">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.07" actual_rows="1000008" actual_time="1.057">
                              <child_nodes>
                                <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="0.923">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.60052" actual_rows="10" actual_time="0.127">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>198</test_id>
          <test_number>6</test_number>
          <test_name>Attribute removal</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.global_search, count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id, a.global_search</query>
              <query_variant_id>199</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Attribute behind GROUP BY</query_variant_name>
              <query_processing_time>0.046</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1076.44" estimated_cost="112.29" actual_rows="10" actual_time="0.051">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="1076.44" estimated_cost="112.261" actual_rows="10" actual_time="1.5">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="106.655" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="106.655" actual_rows="9902" actual_time="1.326">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.07" actual_rows="1000008" actual_time="1.066">
                                  <child_nodes>
                                    <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="0.986">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.60052" actual_rows="10" actual_time="0.132">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, min(a.global_search), count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id</query>
              <query_variant_id>200</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Adding aggregation, Removal of attribute from GROUP BY</query_variant_name>
              <query_processing_time>0.05</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="8.43376" estimated_cost="212.698" actual_rows="10" actual_time="0.054">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="8.43376" estimated_cost="212.669" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="8.43376" estimated_cost="212.669" actual_rows="10" actual_time="1.541">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="137392" estimated_cost="212.598" actual_rows="15616" actual_time="1.538">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="1076.44" estimated_cost="105.951" actual_rows="1002" actual_time="0.798">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1076.44" estimated_cost="105.951" actual_rows="1002" actual_time="0.797">
                                      <child_nodes>
                                        <node op_name="Clustered Index Scan" estimated_rows="1076.44" estimated_cost="105.892" actual_rows="1002" actual_time="0.712">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.07" actual_rows="15647" actual_time="0.725">
                                  <child_nodes>
                                    <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="15647" actual_time="0.59">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>201</test_id>
          <test_number>7</test_number>
          <test_name>Join merge</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and m1.groupby = 20 
join TestTable m2 on b.id = m2.local_search and m2.groupby = 10
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding</query>
              <query_variant_id>202</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.054</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="29.5494" estimated_cost="215.825" actual_rows="1" actual_time="0.052">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="29.5494" estimated_cost="215.797" actual_rows="1" actual_time="1.494">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="2210.05" estimated_cost="211.972" actual_rows="1001" actual_time="1.473">
                          <child_nodes>
                            <node op_name="Merge Join" estimated_rows="17748" estimated_cost="211.971" actual_rows="49991" actual_time="1.456">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="7920.11" estimated_cost="105.973" actual_rows="5036" actual_time="0.65">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="7920.11" estimated_cost="105.952" actual_rows="10000" actual_time="0.641">
                                      <child_nodes>
                                        <node op_name="Clustered Index Scan" estimated_rows="7920.11" estimated_cost="105.892" actual_rows="10000" actual_time="0.535">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Sort" estimated_rows="9805.85" estimated_cost="105.989" actual_rows="10000" actual_time="0.703">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="9805.85" estimated_cost="105.952" actual_rows="10000" actual_time="0.703">
                                      <child_nodes>
                                        <node op_name="Clustered Index Scan" estimated_rows="9805.85" estimated_cost="105.892" actual_rows="10000" actual_time="0.527">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="3.82333" actual_rows="1" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and 
                 (m1.groupby = 10 or m1.groupby = 20)
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding 
having count(distinct m1.groupby) = 2</query>
              <query_variant_id>203</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Join merge</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="110.058" actual_rows="1" actual_time="0.028">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="110.058" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="110.058" actual_rows="1" actual_time="0.028">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="2" estimated_cost="110.058" actual_rows="1" actual_time="0.028">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="2" estimated_cost="110.058" actual_rows="2" actual_time="0.028">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="132.947" estimated_cost="110.047" actual_rows="2" actual_time="0.028">
                                      <child_nodes>
                                        <node op_name="Nested Loops" estimated_rows="132.947" estimated_cost="110.018" actual_rows="2" actual_time="0.768">
                                          <child_nodes>
                                            <node op_name="Hash Match" estimated_rows="9943.3" estimated_cost="106.027" actual_rows="3002" actual_time="0.707">
                                              <child_nodes>
                                                <node op_name="Parallelism" estimated_rows="17726" estimated_cost="105.979" actual_rows="20000" actual_time="0.695">
                                                  <child_nodes>
                                                    <node op_name="Clustered Index Scan" estimated_rows="17726" estimated_cost="105.892" actual_rows="20000" actual_time="0.579">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="3.9841" actual_rows="2" actual_time="0.029">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>204</test_id>
          <test_number>8</test_number>
          <test_name>Redundant JOIN 1</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>205</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.045</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="284.91" estimated_cost="113.651" actual_rows="100" actual_time="0.047">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="284.91" estimated_cost="113.622" actual_rows="100" actual_time="1.376">
                      <child_nodes>
                        <node op_name="Clustered Index Scan" estimated_rows="21308.9" estimated_cost="105.892" actual_rows="20000" actual_time="0.405">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="7.68424" actual_rows="100" actual_time="0.923">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, r.padding
from TestTable b
join TestTable a on b.local_search = a.id
join TestTable r on r.id = b.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>206</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN</query_variant_name>
              <query_processing_time>0.059</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="284.91" estimated_cost="114.583" actual_rows="100" actual_time="0.063">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="284.91" estimated_cost="114.553" actual_rows="100" actual_time="1.932">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="284.91" estimated_cost="113.622" actual_rows="100" actual_time="1.931">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="21308.9" estimated_cost="105.892" actual_rows="20000" actual_time="0.576">
                              <child_nodes />
                            </node>
                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="7.68424" actual_rows="100" actual_time="1.283">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.931384" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>246</test_id>
          <test_number>9</test_number>
          <test_name>Redundant JOIN 2</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>171</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, groupby, local_search, padding
from TestTable
where global_search = 1 and groupby &lt; 2</query>
              <query_variant_id>247</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.02</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="15.2918" estimated_cost="105.975" actual_rows="100" actual_time="0.021">
                  <child_nodes>
                    <node op_name="Clustered Index Scan" estimated_rows="15.2918" estimated_cost="105.892" actual_rows="100" actual_time="0.642">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.groupby, t.local_search, a.padding
from TestTable a
join
(
    select id, groupby, local_search, padding
    from TestTable
    where global_search = 1
) t on a.id = t.id
where t.groupby = 1</query>
              <query_variant_id>248</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN in the subquery</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="11.327" estimated_cost="106.009" actual_rows="100" actual_time="0.023">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="11.327" estimated_cost="105.981" actual_rows="100" actual_time="0.625">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="11.327" estimated_cost="105.975" actual_rows="100" actual_time="0.625">
                          <child_nodes>
                            <node op_name="Clustered Index Scan" estimated_rows="11.327" estimated_cost="105.892" actual_rows="100" actual_time="0.542">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.0340617" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>183</test_id>
          <test_number>1</test_number>
          <test_name>Semi-join</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>184</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>INNER JOIN</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where exists( 
        select 1 
        from TestTable a 
        where global_search = 1 and b.local_search = a.id
    ) and
    b.groupby = 10</query>
              <query_variant_id>185</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>SEMI JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>186</test_id>
          <test_number>2</test_number>
          <test_name>Redundant JOIN elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>187</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.local_search = m1.id
join TestTable m2 on b.local_search = m2.id -- this join can be eliminated if the Table1.id attribute is the primary key
where m1.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>188</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Unnecessary JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.663791" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.0187814" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>189</test_id>
          <test_number>3</test_number>
          <test_name>Predicate rewrite</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>190</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Predicate with equality</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &gt; 9 and b.groupby &lt; 11</query>
              <query_variant_id>191</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Predicate with lower and greater</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.644596" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="99.0288" estimated_cost="0.322289" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.321892" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>192</test_id>
          <test_number>4</test_number>
          <test_name>Redundant subquery elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where b.local_search = 5000</query>
              <query_variant_id>193</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.id, b1.groupby, b1.orderby, (
         select b2.padding
         from TestTable b2
         where b1.id = b2.id -- this subquery can be eliminated if the TestTable.id attribute is the primary key
       )
from TestTable b1
where b1.local_search = 5000</query>
              <query_variant_id>194</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Subquery + JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="48.7475" estimated_cost="0.317535" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.31753" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="48.7475" estimated_cost="0.160433" actual_rows="50" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="48.7475" estimated_cost="0.00333562" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.156894" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>195</test_id>
          <test_number>5</test_number>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.local_search
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>196</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="9.90094" estimated_cost="3.28905" actual_rows="10" actual_time="0.006">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100990" estimated_cost="3.23855" actual_rows="15616" actual_time="0.006">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="1000" estimated_cost="0.0320307" actual_rows="1002" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.00512274" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="2.78438" actual_rows="15616" actual_time="0.004">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.local_search
from 
(
    select distinct local_search from TestTable
) b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>197</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="999.901" estimated_cost="3.26263" actual_rows="10" actual_time="0.007">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100990" estimated_cost="3.21164" actual_rows="15616" actual_time="0.006">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.00512274" actual_rows="1002" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="2.78438" actual_rows="15616" actual_time="0.004">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>198</test_id>
          <test_number>6</test_number>
          <test_name>Attribute removal</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.global_search, count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id, a.global_search</query>
              <query_variant_id>199</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Attribute behind GROUP BY</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="9.90094" estimated_cost="3.27224" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="9.90094" estimated_cost="3.27224" actual_rows="10" actual_time="0.007">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="100990" estimated_cost="3.21164" actual_rows="15616" actual_time="0.006">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.00512274" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="2.78438" actual_rows="15616" actual_time="0.004">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, min(a.global_search), count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id</query>
              <query_variant_id>200</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Adding aggregation, Removal of attribute from GROUP BY</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="9.90094" estimated_cost="3.27224" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="9.90094" estimated_cost="3.27224" actual_rows="10" actual_time="0.008">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="100990" estimated_cost="3.21164" actual_rows="15616" actual_time="0.006">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.00512274" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="100.99" estimated_cost="2.78438" actual_rows="15616" actual_time="0.004">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>201</test_id>
          <test_number>7</test_number>
          <test_name>Join merge</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and m1.groupby = 20 
join TestTable m2 on b.id = m2.local_search and m2.groupby = 10
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding</query>
              <query_variant_id>202</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.664416" actual_rows="1" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="163.599" estimated_cost="0.664333" actual_rows="50" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="79.9848" estimated_cost="0.647787" actual_rows="5" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1" estimated_cost="0.318479" actual_rows="5" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.04538" estimated_cost="0.0158626" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and 
                 (m1.groupby = 10 or m1.groupby = 20)
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding 
having count(distinct m1.groupby) = 2</query>
              <query_variant_id>203</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Join merge</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="0.648296" actual_rows="1" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.648295" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.648295" actual_rows="1" actual_time="0.001">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="1.00001" estimated_cost="0.648294" actual_rows="2" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Nested Loops" estimated_rows="179.014" estimated_cost="0.648204" actual_rows="15" actual_time="0.001">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Index Seek" estimated_rows="1.79013" estimated_cost="0.318566" actual_rows="15" actual_time="0">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>204</test_id>
          <test_number>8</test_number>
          <test_name>Redundant JOIN 1</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>205</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.002</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="215.197" estimated_cost="1.02669" actual_rows="100" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="215.197" estimated_cost="0.322898" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.15197" estimated_cost="0.318606" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.702889" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, r.padding
from TestTable b
join TestTable a on b.local_search = a.id
join TestTable r on r.id = b.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>206</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="215.197" estimated_cost="1.02669" actual_rows="100" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="215.197" estimated_cost="0.322898" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.15197" estimated_cost="0.318606" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.702889" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>246</test_id>
          <test_number>9</test_number>
          <test_name>Redundant JOIN 2</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>172</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, groupby, local_search, padding
from TestTable
where global_search = 1 and groupby &lt; 2</query>
              <query_variant_id>247</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="100" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="14.5975" estimated_cost="0.32508" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.groupby, t.local_search, a.padding
from TestTable a
join
(
    select id, groupby, local_search, padding
    from TestTable
    where global_search = 1
) t on a.id = t.id
where t.groupby = 1</query>
              <query_variant_id>248</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN in the subquery</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="10.8127" estimated_cost="0.361356" actual_rows="100" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="100" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="10.8127" estimated_cost="0.32508" actual_rows="100" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.0323734" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>183</test_id>
          <test_number>1</test_number>
          <test_name>Semi-join</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>184</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>INNER JOIN</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.504922" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.0886519" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.415737" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where exists( 
        select 1 
        from TestTable a 
        where global_search = 1 and b.local_search = a.id
    ) and
    b.groupby = 10</query>
              <query_variant_id>185</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>SEMI JOIN</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.504922" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.0886519" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.415737" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>186</test_id>
          <test_number>2</test_number>
          <test_name>Redundant JOIN elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>187</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.504922" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.0886519" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.415737" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.local_search = m1.id
join TestTable m2 on b.local_search = m2.id -- this join can be eliminated if the Table1.id attribute is the primary key
where m1.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>188</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Unnecessary JOIN</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.52876" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.504922" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.0886519" actual_rows="10" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.415737" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.023304" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>189</test_id>
          <test_number>3</test_number>
          <test_name>Predicate rewrite</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby = 10</query>
              <query_variant_id>190</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Predicate with equality</query_variant_name>
              <query_processing_time>0</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.504922" actual_rows="10" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.0886519" actual_rows="10" actual_time="0">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.415737" actual_rows="10" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &gt; 9 and b.groupby &lt; 11</query>
              <query_variant_id>191</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Predicate with lower and greater</query_variant_name>
              <query_processing_time>0.061</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="127.634" estimated_cost="31.9187" actual_rows="10" actual_time="0.067">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="127.634" estimated_cost="31.8899" actual_rows="10" actual_time="2.044">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.002">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.001">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="10000" estimated_cost="31.8357" actual_rows="10" actual_time="2.013">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="10000" estimated_cost="31.7823" actual_rows="10000" actual_time="0.061">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0201186" actual_rows="10000" actual_time="0.009">
                                  <child_nodes />
                                </node>
                                <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="31.7595" actual_rows="10000" actual_time="0.044">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>192</test_id>
          <test_number>4</test_number>
          <test_name>Redundant subquery elimination</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
where b.local_search = 5000</query>
              <query_variant_id>193</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="50.8362" estimated_cost="3.39689" actual_rows="50" actual_time="0.048">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="50.8362" estimated_cost="2.75292" actual_rows="50" actual_time="0.047">
                      <child_nodes />
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.163749" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b1.id, b1.groupby, b1.orderby, (
         select b2.padding
         from TestTable b2
         where b1.id = b2.id -- this subquery can be eliminated if the TestTable.id attribute is the primary key
       )
from TestTable b1
where b1.local_search = 5000</query>
              <query_variant_id>194</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, Subquery + JOIN</query_variant_name>
              <query_processing_time>0.049</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50.8362" estimated_cost="3.56085" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="50.8362" estimated_cost="3.56085" actual_rows="50" actual_time="0.047">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="50.8362" estimated_cost="3.39689" actual_rows="50" actual_time="0.047">
                          <child_nodes>
                            <node op_name="Index Scan" estimated_rows="50.8362" estimated_cost="2.75292" actual_rows="50" actual_time="0.046">
                              <child_nodes />
                            </node>
                            <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.163749" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.163749" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>195</test_id>
          <test_number>5</test_number>
          <test_name>Aggregate pushdown</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select distinct b.local_search
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>196</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.058</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1000" estimated_cost="2.42554" actual_rows="10" actual_time="0.081">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1000" estimated_cost="2.39692" actual_rows="10" actual_time="2.452">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000" estimated_cost="0.0325941" actual_rows="1002" actual_time="0.068">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.0039443" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.34141" actual_rows="9902" actual_time="2.368">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.89978" actual_rows="1000008" actual_time="2.152">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.212">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.local_search
from 
(
    select distinct local_search from TestTable
) b
join TestTable a on b.local_search = a.id
where a.global_search &lt; 10</query>
              <query_variant_id>197</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Aggregation pushdown</query_variant_name>
              <query_processing_time>0.043</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1000" estimated_cost="2.42554" actual_rows="10" actual_time="0.055">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1000" estimated_cost="2.39692" actual_rows="10" actual_time="1.635">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000" estimated_cost="0.0325941" actual_rows="1002" actual_time="0.067">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.0039443" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.34141" actual_rows="9902" actual_time="1.536">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.89978" actual_rows="1000008" actual_time="1.375">
                              <child_nodes>
                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.14">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>198</test_id>
          <test_number>6</test_number>
          <test_name>Attribute removal</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.global_search, count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id, a.global_search</query>
              <query_variant_id>199</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Attribute behind GROUP BY</query_variant_name>
              <query_processing_time>0.081</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="1000" estimated_cost="2.56871" actual_rows="10" actual_time="0.083">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1000" estimated_cost="2.54" actual_rows="10" actual_time="2.537">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="1000" estimated_cost="0.0326415" actual_rows="1002" actual_time="0.064">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.0039443" actual_rows="1002" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Compute Scalar" estimated_rows="7834.91" estimated_cost="2.48427" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="2.48427" actual_rows="9902" actual_time="2.459">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.89978" actual_rows="1000008" actual_time="2.233">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="1000008" actual_time="0.219">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, min(a.global_search), count(*)
from TestTable a
join TestTable b on a.id = b.local_search
where a.global_search &lt; 10
group by a.id</query>
              <query_variant_id>200</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Adding aggregation, Removal of attribute from GROUP BY</query_variant_name>
              <query_processing_time>0.045</query_processing_time>
              <result_size>10</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="7.83486" estimated_cost="2.59489" actual_rows="10" actual_time="0.044">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="7.83486" estimated_cost="2.56639" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Hash Match" estimated_rows="7.83486" estimated_cost="2.56639" actual_rows="10" actual_time="1.312">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="127635" estimated_cost="2.49937" actual_rows="15616" actual_time="1.3">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="1000" estimated_cost="0.0326415" actual_rows="1002" actual_time="0.065">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1000" estimated_cost="0.0326415" actual_rows="1002" actual_time="0.065">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="1000" estimated_cost="0.0039443" actual_rows="1002" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.89978" actual_rows="153575" actual_time="1.207">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.72151" actual_rows="153575" actual_time="0.097">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>201</test_id>
          <test_number>7</test_number>
          <test_name>Join merge</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and m1.groupby = 20 
join TestTable m2 on b.id = m2.local_search and m2.groupby = 10
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding</query>
              <query_variant_id>202</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.001</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.438999" actual_rows="1" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="291.676" estimated_cost="0.438853" actual_rows="50" actual_time="0.001">
                      <child_nodes>
                        <node op_name="Nested Loops" estimated_rows="127.634" estimated_cost="0.414149" actual_rows="10" actual_time="0">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Index Seek" estimated_rows="1.27634" estimated_cost="0.0847264" actual_rows="10" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Index Seek" estimated_rows="2.28525" estimated_cost="0.0234844" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.orderby, b.padding
from TestTable b
join TestTable m1 on b.id = m1.local_search and 
                 (m1.groupby = 10 or m1.groupby = 20)
where b.global_search = 1
group by b.id, b.groupby, b.orderby, b.padding 
having count(distinct m1.groupby) = 2</query>
              <query_variant_id>203</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Join merge</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Filter" estimated_rows="1" estimated_cost="0.529156" actual_rows="1" actual_time="0.005">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="0.529156" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="0.529156" actual_rows="1" actual_time="0.005">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="1.22703" estimated_cost="0.529155" actual_rows="2" actual_time="0.005">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="122.704" estimated_cost="0.517792" actual_rows="2" actual_time="0.005">
                                  <child_nodes>
                                    <node op_name="Nested Loops" estimated_rows="100" estimated_cost="0.32889" actual_rows="102" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.32508" actual_rows="102" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Stream Aggregate" estimated_rows="9613.71" estimated_cost="0.0726814" actual_rows="3002" actual_time="0.004">
                                      <child_nodes>
                                        <node op_name="Index Seek" estimated_rows="20000" estimated_cost="0.0578746" actual_rows="20000" actual_time="0.002">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>204</test_id>
          <test_number>8</test_number>
          <test_name>Redundant JOIN 1</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, b.padding
from TestTable b
join TestTable a on b.local_search = a.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>205</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.071</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="255.268" estimated_cost="61.689" actual_rows="100" actual_time="0.076">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="255.268" estimated_cost="61.6599" actual_rows="100" actual_time="2.363">
                      <child_nodes>
                        <node op_name="Bitmap" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.016">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="100" estimated_cost="0.0321316" actual_rows="102" actual_time="0.014">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="20000" estimated_cost="61.6015" actual_rows="100" actual_time="2.333">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="20000" estimated_cost="61.524" actual_rows="20000" actual_time="0.068">
                              <child_nodes>
                                <node op_name="Index Seek" estimated_rows="20000" estimated_cost="0.0371024" actual_rows="20000" actual_time="0.003">
                                  <child_nodes />
                                </node>
                                <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="61.4817" actual_rows="20000" actual_time="0.052">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.id, b.groupby, b.local_search, r.padding
from TestTable b
join TestTable a on b.local_search = a.id
join TestTable r on r.id = b.id
where a.global_search = 1 and b.groupby &lt; 2</query>
              <query_variant_id>206</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN</query_variant_name>
              <query_processing_time>0.005</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="255.268" estimated_cost="1.04672" actual_rows="100" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="255.268" estimated_cost="0.211406" actual_rows="100" actual_time="0.004">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="20000" estimated_cost="0.0578746" actual_rows="20000" actual_time="0.002">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.834242" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>246</test_id>
          <test_number>9</test_number>
          <test_name>Redundant JOIN 2</test_name>
          <test_group_id>170</test_group_id>
          <configuration_id>173</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select id, groupby, local_search, padding
from TestTable
where global_search = 1 and groupby &lt; 2</query>
              <query_variant_id>247</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="14.1421" estimated_cost="0.176508" actual_rows="100" actual_time="0.004">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1.99999" estimated_cost="0.171496" actual_rows="100" actual_time="0.004">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="20000" estimated_cost="0.0578746" actual_rows="20000" actual_time="0.002">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.00500367" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, t.groupby, t.local_search, a.padding
from TestTable a
join
(
    select id, groupby, local_search, padding
    from TestTable
    where global_search = 1
) t on a.id = t.id
where t.groupby = 1</query>
              <query_variant_id>248</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Redundant, JOIN in the subquery</query_variant_name>
              <query_processing_time>0.008</query_processing_time>
              <result_size>100</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="9.99998" estimated_cost="0.127663" actual_rows="100" actual_time="0.006">
                  <child_nodes>
                    <node op_name="Hash Match" estimated_rows="1" estimated_cost="0.0979156" actual_rows="100" actual_time="0.005">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="100" estimated_cost="0.003392" actual_rows="102" actual_time="0">
                          <child_nodes />
                        </node>
                        <node op_name="Index Seek" estimated_rows="10000" estimated_cost="0.0300448" actual_rows="10000" actual_time="0.004">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.0297051" actual_rows="100" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>211</test_id>
          <test_number>1</test_number>
          <test_name>Redundant JOIN 1</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>209</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select sum(cast(a.local_search as bigint))
from TestTable a 
join TestTable b on b.id = a.local_search</query>
              <query_variant_id>216</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redudant, JOIN</query_variant_name>
              <query_processing_time>0.052</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="112.301" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="112.301" actual_rows="1" actual_time="0.06">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="7834.91" estimated_cost="112.296" actual_rows="9901" actual_time="0.058">
                          <child_nodes>
                            <node op_name="Nested Loops" estimated_rows="7834.91" estimated_cost="112.266" actual_rows="9901" actual_time="1.699">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="7834.91" estimated_cost="106.664" actual_rows="9902" actual_time="1.521">
                                  <child_nodes>
                                    <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="106.076" actual_rows="0" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="106.07" actual_rows="1000008" actual_time="1.193">
                                          <child_nodes>
                                            <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000008" actual_time="1.078">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="5.60052" actual_rows="9901" actual_time="0.13">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select sum(cast(a.local_search as bigint))
from TestTable a 
where a.local_search is not null</query>
              <query_variant_id>217</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.03</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="105.994" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.994" actual_rows="1" actual_time="0.031">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.994" actual_rows="32" actual_time="0.031">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.966" actual_rows="32" actual_time="0.893">
                              <child_nodes>
                                <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="105.928" actual_rows="0" actual_time="0">
                                  <child_nodes>
                                    <node op_name="Clustered Index Scan" estimated_rows="1000010" estimated_cost="105.892" actual_rows="1000004" actual_time="0.71">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>212</test_id>
          <test_number>2</test_number>
          <test_name>Redudant JOIN 2</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>209</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select sum(b.id)
from TestTable a 
join TestTable b on b.id = a.local_search
where b.id &lt; 1000</query>
              <query_variant_id>218</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, JOIN</query_variant_name>
              <query_processing_time>0.037</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="106.604" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="106.604" actual_rows="1" actual_time="0.042">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="16" estimated_cost="106.604" actual_rows="32" actual_time="0.042">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="106.575" actual_rows="32" actual_time="1.202">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="378865" estimated_cost="106.561" actual_rows="373242" actual_time="1.152">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="1000" estimated_cost="0.137039" actual_rows="1000" actual_time="0.067">
                                      <child_nodes>
                                        <node op_name="Clustered Index Seek" estimated_rows="1000" estimated_cost="0.108389" actual_rows="1000" actual_time="0.003">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Parallelism" estimated_rows="378865" estimated_cost="106.007" actual_rows="373242" actual_time="0.984">
                                      <child_nodes>
                                        <node op_name="Clustered Index Scan" estimated_rows="378865" estimated_cost="105.892" actual_rows="373242" actual_time="0.769">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select sum(a.local_search)
from TestTable a 
where a.local_search &lt; 1000</query>
              <query_variant_id>219</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.023</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="105.965" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="105.965" actual_rows="1" actual_time="0.023">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="16" estimated_cost="105.965" actual_rows="32" actual_time="0.023">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="16" estimated_cost="105.936" actual_rows="32" actual_time="0.664">
                              <child_nodes>
                                <node op_name="Clustered Index Scan" estimated_rows="378865" estimated_cost="105.892" actual_rows="373242" actual_time="0.609">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>213</test_id>
          <test_number>3</test_number>
          <test_name>Redudant JOIN 3</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>209</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    join TestTable c on c.id = b.local_search
    where c.id = a.id
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>220</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redudant, JOIN in subquery</query_variant_name>
              <query_processing_time>0.029</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="2254.7" estimated_cost="106.091" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="2254.7" estimated_cost="106.09" actual_rows="50" actual_time="0.028">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="2254.7" estimated_cost="106.062" actual_rows="50" actual_time="0.815">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="44.9939" estimated_cost="106.024" actual_rows="50" actual_time="0.711">
                              <child_nodes>
                                <node op_name="Merge Join" estimated_rows="44.9939" estimated_cost="106.023" actual_rows="50" actual_time="0.711">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="50" estimated_cost="0.037142" actual_rows="50" actual_time="0">
                                      <child_nodes>
                                        <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                    <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.706">
                                      <child_nodes>
                                        <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.706">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.706">
                                              <child_nodes>
                                                <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.592">
                                                  <child_nodes>
                                                    <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.573">
                                                      <child_nodes />
                                                    </node>
                                                  </child_nodes>
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="0.037142" actual_rows="50" actual_time="0.091">
                              <child_nodes>
                                <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search and b.local_search is not null
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>221</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50" estimated_cost="106.052" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="50" estimated_cost="106.052" actual_rows="50" actual_time="0.025">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="50" estimated_cost="106.023" actual_rows="50" actual_time="0.768">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.706">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.706">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.705">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.595">
                                          <child_nodes>
                                            <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.571">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="0.037142" actual_rows="50" actual_time="0.062">
                              <child_nodes>
                                <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>214</test_id>
          <test_number>4</test_number>
          <test_name>Subquery rewrite</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>209</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>222</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.027</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50" estimated_cost="106.052" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Parallelism" estimated_rows="50" estimated_cost="106.052" actual_rows="50" actual_time="0.026">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="50" estimated_cost="106.023" actual_rows="50" actual_time="0.8">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.706">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.706">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.706">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.6">
                                          <child_nodes>
                                            <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.582">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                            <node op_name="Parallelism" estimated_rows="50" estimated_cost="0.037142" actual_rows="50" actual_time="0.062">
                              <child_nodes>
                                <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, b.sum_local_search
from TestTable a
left join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</query>
              <query_variant_id>223</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Rewrite using JOIN and GROUP BY</query_variant_name>
              <query_processing_time>0.026</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="50" estimated_cost="106.052" actual_rows="50" actual_time="0.024">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="50" estimated_cost="106.023" actual_rows="50" actual_time="0.751">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.673">
                              <child_nodes>
                                <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.673">
                                  <child_nodes>
                                    <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.666">
                                      <child_nodes>
                                        <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.554">
                                          <child_nodes>
                                            <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.533">
                                              <child_nodes />
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Parallelism" estimated_rows="50" estimated_cost="0.037142" actual_rows="50" actual_time="0.062">
                          <child_nodes>
                            <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>215</test_id>
          <test_number>5</test_number>
          <test_name>Redundant JOIN 4</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>209</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, b.sum_local_search
from TestTable a
join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</query>
              <query_variant_id>224</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.027</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="44.9939" estimated_cost="106.044" actual_rows="50" actual_time="0.024">
                  <child_nodes>
                    <node op_name="Nested Loops" estimated_rows="44.9939" estimated_cost="106.016" actual_rows="50" actual_time="0.678">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.672">
                          <child_nodes>
                            <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.672">
                              <child_nodes>
                                <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.67">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.558">
                                      <child_nodes>
                                        <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.538">
                                          <child_nodes />
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="1" estimated_cost="0.029847" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.local_search, b.sum_local_search
from (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b 
where b.local_search &lt; 50 and b.local_search is not null</query>
              <query_variant_id>225</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, JOIN removed</query_variant_name>
              <query_processing_time>0.028</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="44.9939" estimated_cost="106.014" actual_rows="50" actual_time="0.026">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="44.9939" estimated_cost="105.986" actual_rows="50" actual_time="0.707">
                      <child_nodes>
                        <node op_name="Sort" estimated_rows="719.903" estimated_cost="105.986" actual_rows="1600" actual_time="0.707">
                          <child_nodes>
                            <node op_name="Parallelism" estimated_rows="719.903" estimated_cost="105.984" actual_rows="1600" actual_time="0.707">
                              <child_nodes>
                                <node op_name="Hash Match" estimated_rows="719.903" estimated_cost="105.956" actual_rows="1600" actual_time="0.588">
                                  <child_nodes>
                                    <node op_name="Clustered Index Scan" estimated_rows="39170.3" estimated_cost="105.892" actual_rows="38456" actual_time="0.567">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>211</test_id>
          <test_number>1</test_number>
          <test_name>Redundant JOIN 1</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>210</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select sum(cast(a.local_search as bigint))
from TestTable a 
join TestTable b on b.id = a.local_search</query>
              <query_variant_id>216</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redudant, JOIN</query_variant_name>
              <query_processing_time>0.116</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="4.15014" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="4.15014" actual_rows="1" actual_time="0.132">
                      <child_nodes>
                        <node op_name="Parallelism" estimated_rows="9901" estimated_cost="4.1442" actual_rows="9901" actual_time="0.13">
                          <child_nodes>
                            <node op_name="Hash Match" estimated_rows="9901" estimated_cost="4.11373" actual_rows="9901" actual_time="4.087">
                              <child_nodes>
                                <node op_name="Bitmap" estimated_rows="9902" estimated_cost="2.12976" actual_rows="9902" actual_time="3.363">
                                  <child_nodes>
                                    <node op_name="Hash Match" estimated_rows="9902" estimated_cost="2.12976" actual_rows="9902" actual_time="3.363">
                                      <child_nodes>
                                        <node op_name="Compute Scalar" estimated_rows="1000010" estimated_cost="1.53788" actual_rows="0" actual_time="0">
                                          <child_nodes>
                                            <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.53163" actual_rows="1000008" actual_time="3.127">
                                              <child_nodes>
                                                <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.35337" actual_rows="1000008" actual_time="0.155">
                                                  <child_nodes />
                                                </node>
                                              </child_nodes>
                                            </node>
                                          </child_nodes>
                                        </node>
                                      </child_nodes>
                                    </node>
                                  </child_nodes>
                                </node>
                                <node op_name="Parallelism" estimated_rows="1000010" estimated_cost="1.53163" actual_rows="9906" actual_time="0.695">
                                  <child_nodes>
                                    <node op_name="Index Scan" estimated_rows="1000010" estimated_cost="1.35337" actual_rows="9906" actual_time="0.063">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select sum(cast(a.local_search as bigint))
from TestTable a 
where a.local_search is not null</query>
              <query_variant_id>217</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.165</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="3.08477" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="3.08477" actual_rows="1" actual_time="0.201">
                      <child_nodes>
                        <node op_name="Compute Scalar" estimated_rows="1000000" estimated_cost="2.48477" actual_rows="0" actual_time="0">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="1000000" estimated_cost="2.38477" actual_rows="1000004" actual_time="0.107">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>212</test_id>
          <test_number>2</test_number>
          <test_name>Redudant JOIN 2</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>210</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select sum(b.id)
from TestTable a 
join TestTable b on b.id = a.local_search
where b.id &lt; 1000</query>
              <query_variant_id>218</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, JOIN</query_variant_name>
              <query_processing_time>0.065</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="2.0538" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="2.0538" actual_rows="1" actual_time="0.1">
                      <child_nodes>
                        <node op_name="Merge Join" estimated_rows="373198" estimated_cost="1.82988" actual_rows="373242" actual_time="0.074">
                          <child_nodes>
                            <node op_name="Clustered Index Seek" estimated_rows="1000" estimated_cost="0.109567" actual_rows="1000" actual_time="0">
                              <child_nodes />
                            </node>
                            <node op_name="Index Seek" estimated_rows="373198" estimated_cost="0.891577" actual_rows="373242" actual_time="0.044">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select sum(a.local_search)
from TestTable a 
where a.local_search &lt; 1000</query>
              <query_variant_id>219</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.052</query_processing_time>
              <result_size>1</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="1" estimated_cost="1.1155" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="1" estimated_cost="1.1155" actual_rows="1" actual_time="0.066">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="373198" estimated_cost="0.891577" actual_rows="373242" actual_time="0.039">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>213</test_id>
          <test_number>3</test_number>
          <test_name>Redudant JOIN 3</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>210</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    join TestTable c on c.id = b.local_search
    where c.id = a.id
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>220</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redudant, JOIN in subquery</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="2500" estimated_cost="0.146801" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="2500" estimated_cost="0.146551" actual_rows="50" actual_time="0.007">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.131966" actual_rows="50" actual_time="0.007">
                          <child_nodes>
                            <node op_name="Merge Join" estimated_rows="50" estimated_cost="0.131911" actual_rows="50" actual_time="0.007">
                              <child_nodes>
                                <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                                  <child_nodes />
                                </node>
                                <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                                  <child_nodes>
                                    <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.004">
                                      <child_nodes />
                                    </node>
                                  </child_nodes>
                                </node>
                              </child_nodes>
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search and b.local_search is not null
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>221</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50" estimated_cost="0.131916" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="50" estimated_cost="0.131911" actual_rows="50" actual_time="0.007">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.004">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>214</test_id>
          <test_number>4</test_number>
          <test_name>Subquery rewrite</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>210</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id,
  (
    select sum(b.local_search)
    from TestTable b
    where a.id = b.local_search
  )
from TestTable a
where a.id &lt; 50</query>
              <query_variant_id>222</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Basic</query_variant_name>
              <query_processing_time>0.007</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Compute Scalar" estimated_rows="50" estimated_cost="0.131916" actual_rows="0" actual_time="0">
                  <child_nodes>
                    <node op_name="Merge Join" estimated_rows="50" estimated_cost="0.131911" actual_rows="50" actual_time="0.007">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.004">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                        <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, b.sum_local_search
from TestTable a
left join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</query>
              <query_variant_id>223</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Rewrite using JOIN and GROUP BY</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="50" estimated_cost="0.131916" actual_rows="50" actual_time="0.007">
                  <child_nodes>
                    <node op_name="Compute Scalar" estimated_rows="50" estimated_cost="0.117576" actual_rows="0" actual_time="0">
                      <child_nodes>
                        <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                          <child_nodes>
                            <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.004">
                              <child_nodes />
                            </node>
                          </child_nodes>
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>215</test_id>
          <test_number>5</test_number>
          <test_name>Redundant JOIN 4</test_name>
          <test_group_id>208</test_group_id>
          <configuration_id>210</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, b.sum_local_search
from TestTable a
join (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b on a.id = b.local_search
where a.id &lt; 50</query>
              <query_variant_id>224</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Merge Join" estimated_rows="50" estimated_cost="0.131911" actual_rows="50" actual_time="0.007">
                  <child_nodes>
                    <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                      <child_nodes>
                        <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.003">
                          <child_nodes />
                        </node>
                      </child_nodes>
                    </node>
                    <node op_name="Clustered Index Seek" estimated_rows="50" estimated_cost="0.00852219" actual_rows="50" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select b.local_search, b.sum_local_search
from (
    select local_search, sum(local_search) sum_local_search
    from TestTable
    group by local_search
) b 
where b.local_search &lt; 50 and b.local_search is not null</query>
              <query_variant_id>225</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal, JOIN removed</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>50</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Stream Aggregate" estimated_rows="50" estimated_cost="0.117571" actual_rows="50" actual_time="0.007">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="38456" estimated_cost="0.0944725" actual_rows="38456" actual_time="0.004">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
      </test_results>
    </test_run>
    <test_run>
      <id>332</id>
      <name>2019-01-15 20:55:45</name>
      <configuration_results>
        <configuration_result>
          <configuration_id>29</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>30</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>31</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>32</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>True</init_script_started>
          <init_script_completed>True</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>True</clean_up_script_started>
          <clean_up_script_completed>True</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>97</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>98</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>99</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>279</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>145</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>146</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>147</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>148</configuration_id>
          <configuration_number>D</configuration_number>
          <configuration_name>Non-clustered 3</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>149</configuration_id>
          <configuration_number>E</configuration_number>
          <configuration_name>Non-clustered 4</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>150</configuration_id>
          <configuration_number>F</configuration_number>
          <configuration_name>Non-clustered 5</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>168</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>169</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered index</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>171</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>172</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>173</configuration_id>
          <configuration_number>C</configuration_number>
          <configuration_name>Non-clustered 2</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>209</configuration_id>
          <configuration_number>A</configuration_number>
          <configuration_name>Heap</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
        <configuration_result>
          <configuration_id>210</configuration_id>
          <configuration_number>B</configuration_number>
          <configuration_name>Non-clustered 1</configuration_name>
          <init_script_started>False</init_script_started>
          <init_script_completed>False</init_script_completed>
          <init_error_message></init_error_message>
          <clean_up_script_started>False</clean_up_script_started>
          <clean_up_script_completed>False</clean_up_script_completed>
          <clean_up_error_message></clean_up_error_message>
        </configuration_result>
      </configuration_results>
      <test_group_results>
        <test_group_result>
          <test_group_id>1</test_group_id>
          <test_group_number>I</test_group_number>
          <test_group_name>01</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>37</test_group_id>
          <test_group_number>II</test_group_number>
          <test_group_name>02</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>102</test_group_id>
          <test_group_number>III</test_group_number>
          <test_group_name>03</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>151</test_group_id>
          <test_group_number>IV</test_group_number>
          <test_group_name>04 PK</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>170</test_group_id>
          <test_group_number>V</test_group_number>
          <test_group_name>05 PK</test_group_name>
        </test_group_result>
        <test_group_result>
          <test_group_id>208</test_group_id>
          <test_group_number>VI</test_group_number>
          <test_group_name>06 PK FK</test_group_name>
        </test_group_result>
      </test_group_results>
      <annotation_results>
        <annotation_result>
          <anntation_id>323</anntation_id>
          <anntation_number>1</anntation_number>
          <anntation_name>Redundancy removal</anntation_name>
        </annotation_result>
        <annotation_result>
          <anntation_id>324</anntation_id>
          <anntation_number>2</anntation_number>
          <anntation_name>Query rewriting</anntation_name>
        </annotation_result>
      </annotation_results>
      <test_results>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>29</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.062</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="330.884" estimated_cost="105.964" actual_rows="260" actual_time="0.057">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="330.884" estimated_cost="105.892" actual_rows="260" actual_time="1.813">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.063</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Parallelism" estimated_rows="330.884" estimated_cost="105.951" actual_rows="260" actual_time="0.06">
                  <child_nodes>
                    <node op_name="Table Scan" estimated_rows="330.884" estimated_cost="105.892" actual_rows="260" actual_time="1.93">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>30</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.087</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="4.26059" actual_rows="260" actual_time="0.082">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="252.938" estimated_cost="2.75292" actual_rows="260" actual_time="0.081">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.006</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="260" actual_time="0.001">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>31</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>2</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.079</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="4.62355" actual_rows="260" actual_time="0.077">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="252.938" estimated_cost="3.11588" actual_rows="260" actual_time="0.076">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.004</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="252.938" estimated_cost="0.831221" actual_rows="260" actual_time="0">
                  <child_nodes>
                    <node op_name="Index Seek" estimated_rows="252.938" estimated_cost="0.00356023" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="0.826603" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
        <test_result>
          <test_id>2</test_id>
          <test_number>1</test_number>
          <test_name>Redundant computation 1</test_name>
          <test_group_id>1</test_group_id>
          <configuration_id>32</configuration_id>
          <error_message></error_message>
          <distinct_query_plans>1</distinct_query_plans>
          <successfully_completed_variants>2</successfully_completed_variants>
          <query_variant_results>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search - 5 = 990</query>
              <query_variant_id>3</query_variant_id>
              <query_variant_number>a</query_variant_number>
              <query_variant_name>Redundant, Algebralic operator</query_variant_name>
              <query_processing_time>0.084</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="330.884" estimated_cost="4.87929" actual_rows="260" actual_time="0.074">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="330.884" estimated_cost="3.11588" actual_rows="260" actual_time="0.073">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.08201" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
            <query_variant_result>
              <query>select a.id, a.local_search, a.padding
from TestTable a 
where a.local_search = 995</query>
              <query_variant_id>4</query_variant_id>
              <query_variant_number>b</query_variant_number>
              <query_variant_name>Minimal</query_variant_name>
              <query_processing_time>0.06</query_processing_time>
              <result_size>260</result_size>
              <started>True</started>
              <completed>True</completed>
              <error_message></error_message>
              <query_plan>
                <node op_name="Nested Loops" estimated_rows="330.884" estimated_cost="4.67929" actual_rows="260" actual_time="0.051">
                  <child_nodes>
                    <node op_name="Index Scan" estimated_rows="330.884" estimated_cost="3.11588" actual_rows="260" actual_time="0.05">
                      <child_nodes />
                    </node>
                    <node op_name="RID Lookup" estimated_rows="1" estimated_cost="1.08201" actual_rows="260" actual_time="0">
                      <child_nodes />
                    </node>
                  </child_nodes>
                </node>
              </query_plan>
            </query_variant_result>
          </query_variant_results>
          <selected_annotation_results>
            <selected_annotation_result>
              <annotation_id>323</annotation_id>
            </selected_annotation_result>
            <selected_annotation_result>
              <annotation_id>324</annotation_id>
            </selected_annotation_result>
          </selected_annotation_results>
          <started>True</started>
          <completed>True</completed>
        </test_result>
      </test_results>
    </test_run>
  </test_runs>
  <annotations>
    <annotation>
      <id>323</id>
      <number>1</number>
      <name>Redundancy removal</name>
      <description>Test of capability to remove redundant parts from a SQL query</description>
    </annotation>
    <annotation>
      <id>324</id>
      <number>2</number>
      <name>Query rewriting</name>
      <description>Test where variants express the same query using a different syntax. This type of test avoids redundancy.</description>
    </annotation>
  </annotations>
  <test_run_settings>
    <run_init_script>False</run_init_script>
    <run_clean_up_script>False</run_clean_up_script>
    <check_result_sizes>False</check_result_sizes>
    <compare_results>False</compare_results>
    <ignore_annotations />
  </test_run_settings>
  <last_id>332</last_id>
</sql_benchmark>